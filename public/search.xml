<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Editor拓展</title>
      <link href="posts/bad5f06c/"/>
      <url>posts/bad5f06c/</url>
      
        <content type="html"><![CDATA[<h2 id="批量替换字体"><a href="#批量替换字体" class="headerlink" title="批量替换字体"></a>批量替换字体</h2><p>批量替换选中的字体</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">using UnityEngine;</span><br><span class="line">using System.Collections;</span><br><span class="line">using UnityEditor;</span><br><span class="line">using UnityEngine.UI;</span><br><span class="line"></span><br><span class="line">public class ChangeFontWindow : EditorWindow</span><br><span class="line">&#123;</span><br><span class="line">    [MenuItem(&quot;Tools&#x2F;换字体&quot;)]</span><br><span class="line">    public static void Open()</span><br><span class="line">    &#123;</span><br><span class="line">        EditorWindow.GetWindow(typeof(ChangeFontWindow), true);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;public Font toChange &#x3D; new Font(&quot;Arial&quot;);</span><br><span class="line">    public Font toChange;</span><br><span class="line">    static Font toChangeFont;</span><br><span class="line"></span><br><span class="line">    void OnGUI()</span><br><span class="line">    &#123;</span><br><span class="line">        toChange &#x3D; (Font)EditorGUILayout.ObjectField(&quot;选择需要更换的字体&quot;, toChange, typeof(Font), true, GUILayout.MinWidth(100));</span><br><span class="line">        toChangeFont &#x3D; toChange;</span><br><span class="line">        if (GUILayout.Button(&quot;确认更换&quot;))</span><br><span class="line">        &#123;</span><br><span class="line">            Change();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void Change()</span><br><span class="line">    &#123;</span><br><span class="line">        Object[] Texts &#x3D; Selection.GetFiltered(typeof(Text), SelectionMode.Deep);</span><br><span class="line">        foreach (Object text in Texts)</span><br><span class="line">        &#123;</span><br><span class="line">            if (text)</span><br><span class="line">            &#123;</span><br><span class="line">                &#x2F;&#x2F;如果是UGUI讲UILabel换成Text就可以  </span><br><span class="line">                Text TempText &#x3D; (Text)text;</span><br><span class="line">                Undo.RecordObject(TempText, TempText.gameObject.name);</span><br><span class="line">                TempText.font &#x3D; toChangeFont;</span><br><span class="line">                Debug.Log(text.name + &quot;:&quot; + TempText.text);</span><br><span class="line">                EditorUtility.SetDirty(TempText);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="收集选中的图片"><a href="#收集选中的图片" class="headerlink" title="收集选中的图片"></a>收集选中的图片</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">using UnityEngine;</span><br><span class="line">using System.Collections;</span><br><span class="line">using UnityEditor;</span><br><span class="line">using UnityEngine.UI;</span><br><span class="line">using NUnit.Framework;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line"></span><br><span class="line">public class ChangeImageWindow : EditorWindow</span><br><span class="line">&#123;</span><br><span class="line">    [MenuItem(&quot;Tools&#x2F;替换图片&quot;)]</span><br><span class="line">    public static void Open()</span><br><span class="line">    &#123;</span><br><span class="line">        EditorWindow.GetWindow(typeof(ChangeImageWindow), true);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    [SerializeField]</span><br><span class="line">    public List&lt;Image&gt; ImageList &#x3D; new List&lt;Image&gt;();</span><br><span class="line">    public Dictionary&lt;Image,Sprite&gt; DictImage &#x3D; new Dictionary&lt;Image, Sprite&gt;();</span><br><span class="line"></span><br><span class="line">    protected SerializedObject _serializedObject;</span><br><span class="line">    &#x2F;&#x2F;序列化属性</span><br><span class="line">    protected SerializedProperty _assetLstProperty;</span><br><span class="line"></span><br><span class="line">    void OnGUI()</span><br><span class="line">    &#123;</span><br><span class="line">        Object[] images &#x3D; Selection.GetFiltered(typeof(Image), SelectionMode.Deep | SelectionMode.TopLevel);</span><br><span class="line"></span><br><span class="line">        if (GUILayout.Button(&quot;收集选中图片&quot;))</span><br><span class="line">        &#123;</span><br><span class="line">            foreach (Object img in images)</span><br><span class="line">            &#123;</span><br><span class="line">                if (img)</span><br><span class="line">                &#123;</span><br><span class="line">                    Image temapImg &#x3D; (Image)img;</span><br><span class="line">                    ImageList.Add(temapImg);</span><br><span class="line">                    Debug.Log(temapImg.name);</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;初始化</span><br><span class="line">        _serializedObject &#x3D; new SerializedObject(this);</span><br><span class="line">        &#x2F;&#x2F;获取当前类中可序列化的属性</span><br><span class="line">        _assetLstProperty &#x3D; _serializedObject.FindProperty(&quot;ImageList&quot;);</span><br><span class="line">        &#x2F;&#x2F;更新</span><br><span class="line">        _serializedObject.Update();</span><br><span class="line">        &#x2F;&#x2F;开始检查是否有修改</span><br><span class="line">        EditorGUI.BeginChangeCheck();</span><br><span class="line">        &#x2F;&#x2F;显示属性，第二个参数必须为true  否者无法显示子节点即List内容</span><br><span class="line">        EditorGUILayout.PropertyField(_assetLstProperty, true);</span><br><span class="line">        &#x2F;&#x2F;结束检查是否有修改</span><br><span class="line">        if (EditorGUI.EndChangeCheck())</span><br><span class="line">        &#123;</span><br><span class="line">            _serializedObject.ApplyModifiedProperties();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
          <category> 插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>B站卡牌游戏源码阅读</title>
      <link href="posts/6a323e7d/"/>
      <url>posts/6a323e7d/</url>
      
        <content type="html"><![CDATA[<h2 id="卡牌游戏"><a href="#卡牌游戏" class="headerlink" title="卡牌游戏"></a>卡牌游戏</h2><p>视频地址:BV11o4y1D7V6 </p><h3 id="技术点"><a href="#技术点" class="headerlink" title="技术点"></a>技术点</h3><h4 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">public class Card</span><br><span class="line">&#123;</span><br><span class="line">    &#x2F;&#x2F;卡牌编号</span><br><span class="line">    public int id;</span><br><span class="line">    public string cardName;</span><br><span class="line">    public Card(int _id, string _cardName)</span><br><span class="line">    &#123;</span><br><span class="line">        this.id &#x3D; _id;</span><br><span class="line">        this.cardName &#x3D; _cardName;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public class SpellCard : Card</span><br><span class="line">&#123;</span><br><span class="line">    public int rank;</span><br><span class="line">    public string type;</span><br><span class="line">    public string effect;</span><br><span class="line">&#x2F;&#x2F;构造继承</span><br><span class="line">    public SpellCard(int _id, string _cardName, int _rank, string _type, string _effect) : base(_id, _cardName)</span><br><span class="line">    &#123;</span><br><span class="line">        this.rank &#x3D; _rank;</span><br><span class="line">        this.type &#x3D; _type;</span><br><span class="line">        this.effect &#x3D; _effect;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
          <category> 源码解析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一款开源卡牌游戏的源码阅读</title>
      <link href="posts/47d4fe7b/"/>
      <url>posts/47d4fe7b/</url>
      
        <content type="html"><![CDATA[<h2 id="地心之子"><a href="#地心之子" class="headerlink" title="地心之子"></a>地心之子</h2><p><a href="https://github.com/wyt2000/EarthCore" target="_blank" rel="noopener">https://github.com/wyt2000/EarthCore</a></p>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
          <category> 源码解析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安卓和ios自定义配置</title>
      <link href="posts/ea5cfc4/"/>
      <url>posts/ea5cfc4/</url>
      
        <content type="html"><![CDATA[<h2 id="配置相关"><a href="#配置相关" class="headerlink" title="配置相关"></a>配置相关</h2><p>jdk自定义配置,需要根据unity对应版本下载,如果配置成功,Browse会自动选择文件夹</p><p>sdk不需要配置,可下载Android Studio解决, 问题解决的链接</p>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
          <category> 插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些基础常识</title>
      <link href="posts/14954ae5/"/>
      <url>posts/14954ae5/</url>
      
        <content type="html"><![CDATA[<h2 id="共享材质"><a href="#共享材质" class="headerlink" title="共享材质"></a>共享材质</h2><p><a href="https://www.xuanyusong.com/archives/2530" target="_blank" rel="noopener">https://www.xuanyusong.com/archives/2530</a></p><p>简单来说就是sharedMaterial效率会更高,内存中只会占用一份,但是更改属性之后,所有用到物体都会改变.但是material每次更换属性,unity都会new一份新的</p><h2 id="批处理相关"><a href="#批处理相关" class="headerlink" title="批处理相关"></a>批处理相关</h2><p>如果物体都符合条件,静态批处理-&gt;GPU Instancing-&gt;动态批处理</p><table><thead><tr><th></th><th>静态</th><th>动态</th><th>GPU Instancing</th><th>SPR Batcger</th></tr></thead><tbody><tr><td>优点</td><td>限制少</td><td>自动处理</td><td>性能级好</td><td>多材质加速</td></tr><tr><td>缺点</td><td>增加包体大小,增加运行时内存</td><td>限制条件多</td><td>限制多</td><td>只能用SPR中</td></tr><tr><td>适用场景</td><td>静态场景,不适合大量重复物体</td><td>小物体,特效</td><td>大量重复物体</td><td>较为广泛</td></tr></tbody></table><h2 id="层级关系"><a href="#层级关系" class="headerlink" title="层级关系"></a>层级关系</h2><p>渲染层级</p><p><strong>大的挡住小的</strong></p><p>Camera</p><p>Sorting Layer</p><p>Order in Layer</p><p>Layer层</p><h2 id="坐标空间"><a href="#坐标空间" class="headerlink" title="坐标空间"></a>坐标空间</h2><p><a href="https://zhuanlan.zhihu.com/p/123363702" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/123363702</a></p><p>一个定义从模型空间变换到屏幕空间中的全部计算过程</p><pre class="mermaid">graph LR    模型空间--->世界空间--->观察空间--->剪裁空间--->屏幕空间</pre><p>四种坐标空间</p><h2 id="UGUI网格重建原因"><a href="#UGUI网格重建原因" class="headerlink" title="UGUI网格重建原因"></a>UGUI网格重建原因</h2><p>我们以Graphic为切入点，了解一下图片什么时候会进行网格重建。在Graphic源码中，把所有函数一折叠，映入眼帘的第一个函数就是我们要找的答案。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">SetAllDirty</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    SetLayoutDirty();</span><br><span class="line">    SetVerticesDirty();</span><br><span class="line">    SetMaterialDirty();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于元素的改变可分为<strong>布局变化、顶点变化、材质变化</strong>，所以分别提供了三个方法SetLayoutDirty();SetVerticesDirty();SetMaterialDirty();供选择。</p>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
          <category> 功能探究 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>任务系统</title>
      <link href="posts/34055d7b/"/>
      <url>posts/34055d7b/</url>
      
        <content type="html"><![CDATA[<h2 id="通用任务系统设计"><a href="#通用任务系统设计" class="headerlink" title="通用任务系统设计"></a>通用任务系统设计</h2><h4 id="基本概况"><a href="#基本概况" class="headerlink" title="基本概况"></a>基本概况</h4><p>拆分大的任务类型,主线任务,日常任务,等等,维护几个列表,没有领取的任务,已经接取的任务,已经完成的任务列表,任务的结构包含一个任务组里有,任务组里面有的子任务,字任务里有对应的任务完成条件,这个任务的完成条件抽离出来的,可以任意配置,在完成条件对应的地方,trigger发送事件,任务计数器++,这个任务就是完成了,之后再分为自动完成任务和手动完成任务,然后就是奖励的处理,如果背包满了,当时的处理是后端直接发邮件,领取之后,任务id放到已完成的任务的列表里.</p>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
          <category> 功能探究 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些基础语法的使用</title>
      <link href="posts/10fba4f/"/>
      <url>posts/10fba4f/</url>
      
        <content type="html"><![CDATA[<h2 id="去重计数"><a href="#去重计数" class="headerlink" title="去重计数"></a>去重计数</h2><p>使用table去重计数,但是lua无法自增,所以要用and和or写三目运算符</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">local</span> m = &#123;<span class="number">5</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">6</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> tTable = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 用三目自增</span></span><br><span class="line"><span class="keyword">for</span> _, value <span class="keyword">in</span> <span class="built_in">pairs</span>(m) <span class="keyword">do</span></span><br><span class="line">    tTable[value] = tTable[value] <span class="keyword">and</span> tTable[value] + <span class="number">1</span> <span class="keyword">or</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> key, value <span class="keyword">in</span> <span class="built_in">pairs</span>(tTable) <span class="keyword">do</span> </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"key"</span> .. key .. <span class="string">"**value"</span> .. value) </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--print result</span></span><br><span class="line"><span class="comment">-- key1**value2</span></span><br><span class="line"><span class="comment">-- key5**value2</span></span><br><span class="line"><span class="comment">-- key6**value5</span></span><br></pre></td></tr></table></figure><h2 id="赋予默认值"><a href="#赋予默认值" class="headerlink" title="赋予默认值"></a>赋予默认值</h2><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tab3=tab3 <span class="keyword">or</span> &#123;&#125;</span><br></pre></td></tr></table></figure><h2 id="调用匿名函数"><a href="#调用匿名函数" class="headerlink" title="调用匿名函数"></a>调用匿名函数</h2><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">local</span> tab = &#123;<span class="number">2</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">9</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">testfun</span><span class="params">(tab, fun)</span></span></span><br><span class="line">    <span class="keyword">for</span> k, v <span class="keyword">in</span> <span class="built_in">pairs</span>(tab) <span class="keyword">do</span></span><br><span class="line">            <span class="built_in">print</span>(fun(k, v))</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">testfun(tab, <span class="function"><span class="keyword">function</span><span class="params">(key, val)</span></span></span><br><span class="line">    <span class="keyword">return</span> key..<span class="string">"test"</span>..val*<span class="number">2</span> <span class="comment">--匿名函数的函数体</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h2 id="使用concat打印数组"><a href="#使用concat打印数组" class="headerlink" title="使用concat打印数组"></a>使用concat打印数组</h2><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">local</span> t = &#123;<span class="string">"2016"</span>, <span class="string">"3"</span>, <span class="string">"6"</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">table</span>.<span class="built_in">concat</span>(t, <span class="string">"-"</span>))    <span class="comment">-- 2016-3-6</span></span><br></pre></td></tr></table></figure><h2 id="遍历注意事项"><a href="#遍历注意事项" class="headerlink" title="遍历注意事项"></a>遍历注意事项</h2><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">local</span> t = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">6</span>&#125;</span><br><span class="line"><span class="keyword">for</span> i=#t, <span class="number">1</span>, <span class="number">-1</span> <span class="keyword">do</span></span><br><span class="line"><span class="keyword">if</span> t[i] == <span class="number">3</span> <span class="keyword">then</span></span><br><span class="line"><span class="built_in">table</span>.<span class="built_in">remove</span>(t,i)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">-- 正确，从后往前遍历</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Lua基础入门 </category>
          
          <category> 基本语法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Lua </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些基础知识</title>
      <link href="posts/74f5858a/"/>
      <url>posts/74f5858a/</url>
      
        <content type="html"><![CDATA[<h2 id="泛型约束"><a href="#泛型约束" class="headerlink" title="泛型约束"></a>泛型约束</h2><p>where  泛型字符:(约束类型)</p><table><thead><tr><th>约束</th><th>说明</th></tr></thead><tbody><tr><td>T：struct</td><td>类型参数必须是值类型。可以指定除 Nullable 以外的任何值类型。</td></tr><tr><td>T:class</td><td>类型参数必须是引用类型，包括任何类、接口、委托或数组类型。</td></tr><tr><td>T:new ()</td><td>类型参数必须具有无参数的公共构造函数。当与其他约束一起使用时，new() 约束必须最后指定。</td></tr><tr><td>T：&lt;基类名&gt;</td><td>类型参数必须是指定的基类或派生自指定的基类。</td></tr><tr><td>T：&lt;接口名称&gt;</td><td>类型参数必须是指定的接口或实现指定的接口。可以指定多个接口约束。约束接口也可以是泛型的。</td></tr><tr><td>T：U</td><td>为 T 提供的类型参数必须是为 U 提供的参数或派生自为 U 提供的参数。这称为裸类型约束.</td></tr></tbody></table><h2 id="关键字-ref-out的区别"><a href="#关键字-ref-out的区别" class="headerlink" title="关键字 ref,out的区别"></a>关键字 ref,out的区别</h2><p>首先：两者都是按地址传递的，使用后都将改变原来参数的数值。 (引用传递会改变原有的数值)</p><p>Fef 又进又出  数值-&gt;函数-数值  参数必须赋值</p><p>Out只出不进  数值×-&gt;函数-&gt;数值   out在出入函数,又会被初始化,所以没关系,参数可以不用赋值</p><h2 id="匿名方法"><a href="#匿名方法" class="headerlink" title="匿名方法"></a>匿名方法</h2><p><strong>匿名方法</strong>顾名思义就是这类方法的特点是不需要特别去定义函数的名字的。一般我们需要一个函数，但又不想花时间去命名它的时候，就可以使用匿名方法。在 C# 中， 匿名方法通常表现为使用 delegate运算符和 Lambda 表达式。</p><p>delegate 运算符：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">public class SampleAnonymousMethod</span><br><span class="line">&#123;</span><br><span class="line">    static void Main(string[] args)</span><br><span class="line">    &#123;</span><br><span class="line">        Func&lt;int, int, int&gt; sum &#x3D; delegate (int a, int b) &#123; return a + b; &#125;;</span><br><span class="line">        Console.WriteLine(sum(11,22));  </span><br><span class="line">        </span><br><span class="line">        &#x2F;&#x2F;输出：33</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Lambda 表达式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">public class SampleAnonymousMethod</span><br><span class="line">&#123;</span><br><span class="line">    static void Main(string[] args)</span><br><span class="line">    &#123;</span><br><span class="line">        Func&lt;int, int&gt; square &#x3D; x &#x3D;&gt; x * x;</span><br><span class="line">        Console.WriteLine(square(5));</span><br><span class="line">        </span><br><span class="line">        &#x2F;&#x2F; 输出：25</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="拆箱和装箱相关"><a href="#拆箱和装箱相关" class="headerlink" title="拆箱和装箱相关"></a>拆箱和装箱相关</h2><p><strong>装箱：值类型转换为引用类型。</strong>使用值类型给引用类型赋值，就叫做装箱。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> <span class="keyword">value</span> = <span class="number">42</span>;</span><br><span class="line"><span class="keyword">object</span> obj = <span class="keyword">value</span>; <span class="comment">// 装箱操作，将值类型装箱成引用类型</span></span><br></pre></td></tr></table></figure><p><strong>拆箱：引用类型转换为值类型。</strong>使用引用类型给值类型赋值，就叫做拆箱。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">object obj &#x3D; 42;</span><br><span class="line">int value &#x3D; (int)obj; &#x2F;&#x2F; 拆箱操作，将引用类型拆箱成值类型</span><br></pre></td></tr></table></figure><h4 id="什么情况下会产生拆装箱"><a href="#什么情况下会产生拆装箱" class="headerlink" title="什么情况下会产生拆装箱?"></a>什么情况下会产生拆装箱?</h4><p>ArrayList或者HashTable之类的集合容易产生拆装箱</p><h4 id="为什么要避免拆装箱"><a href="#为什么要避免拆装箱" class="headerlink" title="为什么要避免拆装箱?"></a>为什么要避免拆装箱?</h4><p>一个就是对于堆的操作效率比较低;另一个就是对于堆上分配的内存资源,需要GC来回收，从而降低程序效率。</p><h4 id="如何避免拆装箱"><a href="#如何避免拆装箱" class="headerlink" title="如何避免拆装箱"></a>如何避免拆装箱</h4><p>通常为了防止装箱操作而选择List<T>、Dictionary&lt;TKey, TValue&gt;等泛型集合.</p><p>MyStruct的实例调用基类Object中的方法时，都会进行装箱操作,需要重载ToSring和GetType()方法.</p><h2 id="GC相关"><a href="#GC相关" class="headerlink" title="GC相关"></a>GC相关</h2><h4 id="什么情况下会触发GC"><a href="#什么情况下会触发GC" class="headerlink" title="什么情况下会触发GC?"></a>什么情况下会触发GC?</h4><p>垃圾回收不是一直进行的，而是在堆内存中的对象达到一定条件时触发。这些条件可以包括代的大小、内存使用量等。CLR会智能地判断何时进行垃圾收集，从而避免了频繁地进行不必要的收集操作。有如下几种垃圾回收触发情况：</p><ol><li>内存压力：当托管堆上的内存达到一定的阈值时，CLR可能会触发垃圾收集。这个阈值通常由.NET运行时根据应用程序的需求和可用系统资源进行动态调整。</li><li>代的判定：GC使用分代策略，根据不同代的大小来触发不同频率的垃圾收集。通常，第0代的垃圾收集频率最高，第1代次之，第2代最低。当某一代中的对象数量达到一定程度时，就可能触发该代的垃圾收集。</li><li>内存分配：当程序请求分配新的内存时，CLR会检查是否有足够的空间。如果没有足够的空间，可能会触发垃圾收集以释放一些内存。</li><li>手动调用：程序员可以通过调用GC.Collect方法来手动触发垃圾收集。然而，这通常是不推荐的，因为CLR通常能够自动管理内存，手动调用可能会引入性能问题。</li><li>Finalization：在垃圾收集过程中，CLR会执行终结器（Finalizers）来进行一些清理操作。这可能导致更多的垃圾收集。</li><li>系统资源压力：当系统资源不足时，CLR可能会调整垃圾收集的行为，以减轻系统负担。</li></ol><p>需要注意的是，CLR在大多数情况下会自动进行垃圾收集，.NET开发人员建议除非特殊情况下才手动调用GC.Collect，大多数情况下CLR能够根据应用程序的运行情况更好地管理内存</p><h4 id="如何避免GC"><a href="#如何避免GC" class="headerlink" title="如何避免GC?"></a>如何避免GC?</h4><ol><li><p>减少new产生对象的次数</p></li><li><p>使用公用的对象，即静态成员Static,但要谨慎使用</p></li><li><p>将String换成StringBuilder拼接字符串，string容易导致内存泄露</p></li><li><p>【unity优化】避免使用foreach，尽量使用for循环      unity内部的问题,unity5.5解决了</p></li><li><p>用泛型避免拆装箱</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> C Sharp基础入门 </category>
          
          <category> 进阶语法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>寻路相关</title>
      <link href="posts/9daa1420/"/>
      <url>posts/9daa1420/</url>
      
        <content type="html"><![CDATA[<h2 id="A-寻路"><a href="#A-寻路" class="headerlink" title="A*寻路"></a>A*寻路</h2><p>F=G+H</p><p>G:现在到起点的距离</p><p>H:预估到终点的距离,曼哈顿距离</p><p>遍历周围8个格子,放入openlist,找出最短距离,放入closelist,进行移动,再去遍历,直到找到最近的终点.</p><h2 id="流场寻路"><a href="#流场寻路" class="headerlink" title="流场寻路"></a>流场寻路</h2><ol><li>生成热力图</li><li>生成到每个块到目标的向量场</li><li>共用向量场移动到导航地点</li></ol><p><a href="https://zhuanlan.zhihu.com/p/391459932" target="_blank" rel="noopener">参考连接</a></p>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
          <category> 功能探究 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shader相关原理</title>
      <link href="posts/544d605d/"/>
      <url>posts/544d605d/</url>
      
        <content type="html"><![CDATA[<h2 id="unity渲染管线"><a href="#unity渲染管线" class="headerlink" title="unity渲染管线"></a>unity渲染管线</h2><h3 id="应用阶段"><a href="#应用阶段" class="headerlink" title="应用阶段"></a>应用阶段</h3><p>这个阶段由CPU执行，并且向GPU传递信息，主要做三件事：<br>1.将模型信息（顶点坐标，顶点颜色，切线，法线等），变换矩阵（M（模型到世界坐标），V（世界到摄像机），P（摄像机到齐次裁剪），FOV等），材质，灯光，渲染顺序等信息先放入内存中，然后再传递给GPU<br>2.设置渲染状态，比如这个模型要用这个顶点着色器，这个片元着色器，这个材质<br>3.发出drawcall命令，这个drawcall不会包含顶点信息等，它只会指向某个图元，然后gpu根据渲染状态以及信息执行渲染</p><h3 id="几何阶段"><a href="#几何阶段" class="headerlink" title="几何阶段"></a>几何阶段</h3><p>几何阶段由GPU执行，这个阶段主要进行顶点变换和顶点着色。</p><p>几何着色又分为几个小阶段，比如1.顶点着色，2.曲面顶点着色等，3.然后就是可设置的裁剪，4.最后就是不可控制的将点设置到屏幕空间中，然后交给光栅化处理。顶点着色主要在pass块中的pragma的vertex函数</p><p>其中顶点变换的过程主要为：<br>模型空间—&gt;世界空间—&gt;摄像机空间—&gt;齐次裁剪—&gt;屏幕空间<br>模型到世界空间的变换需要M矩阵来进行转换，主要涉及平移，旋转等操作<br>世界空间到摄像机空间会以摄像机作为原点，通过V矩阵来进行平移旋转等操作<br>摄像机到齐次裁剪过程会通过P矩阵主要进行缩放操作，这个过程会将所有顶点放入一个-1到1的立方体中<br>齐次裁剪到屏幕空间则主要是通过缩放来确定像素点再屏幕上的位置</p><h3 id="光栅化"><a href="#光栅化" class="headerlink" title="光栅化"></a>光栅化</h3><p>光栅化由GPU执行。也分为几个步骤首先是1.三角形遍历，这个过程用于确定三角面，即哪几个顶点可以确定一个三角面，为下一个阶段做准备2.逐片元遍历，这个过程会确定每个片元是否再某个三角面上，并且对每个片元进行颜色，位置等信息进行计算，其中信息是由三角面的三个顶点来进行插值计算的。3.模板检测(Stencil{}) 模板检测与深度检测相似，也有一个缓冲区（Ref）。如果没开启的话直接结束检测，开启的话会对每个片元的一个值与模板对应的值进行比较（Comp），比较通过(Pass)或者不通过（Fail）也会进行相应的处理，如Replace(替换)，Keep(保持)等。这里也可以有如果通过了模板测试但没通过深度测试(ZFail),也可以进行操作。4.深度检测，当前值与缓冲区的值进行比较，通过的话会进行判断是否开启了深度写入(ZWrite On/Off)，如果开启了，我们会将这个值复写，以后的这个位置的片元值就会和写入的这个值进行比较。没有开启的话就结束检测，深度缓冲区仍然用原来的颜色。</p><h2 id="shader工作流程"><a href="#shader工作流程" class="headerlink" title="shader工作流程"></a>shader工作流程</h2><h3 id="顶点着色器"><a href="#顶点着色器" class="headerlink" title="顶点着色器"></a>顶点着色器</h3><p>输出图元</p><p>顶点着色器分为输入和输出两部分,负责的功能是把输入的数据<strong>进行矩阵变换位置,计算光照公式生成逐顶点颜⾊,⽣成/变换纹理坐标.</strong>并且把位置和纹理坐标这样的参数发送到片段着色器.</p><h3 id="片元着色器"><a href="#片元着色器" class="headerlink" title="片元着色器"></a>片元着色器</h3><p>输出像素的各个颜色分量和像素透明度</p><p>片元着色器的作用是处理由光栅化阶段生成的每个片元，最终计算出每个像素的最终颜色。归根结底，实际上就是数据的集合。这个数据集合包含每一个像素的各个颜色分量和像素透明度的值。</p>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
          <category> Shader </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> Unity </tag>
            
            <tag> Shader </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UGUI优化</title>
      <link href="posts/cb74000b/"/>
      <url>posts/cb74000b/</url>
      
        <content type="html"><![CDATA[<h3 id="为什么要合批"><a href="#为什么要合批" class="headerlink" title="为什么要合批?"></a>为什么要合批?</h3><p>cpu主要的工作是准备好模型网格、贴图和shader,然后设置渲染状态,发出可以渲染的命令(drawcall),批处理就是把渲染时使用相同材质(Shader)、相同贴图的3D模型的网格合并在一起，成为一个大网格，然后再调用一次Draw Call，直接渲染这一个大网格。</p><h5 id="为什么要降低drawcall"><a href="#为什么要降低drawcall" class="headerlink" title="为什么要降低drawcall?"></a>为什么要降低drawcall?</h5><p>cpu调用drawcall之前需要准备好数据，设置渲染状态，而准备数据和设置渲染状态特别耗时！如果Draw Call过多，那么CPU就会把大量的时间花在准备数据和设置渲染状态上，而造成性能问题。</p><h3 id="UGUI如何合批"><a href="#UGUI如何合批" class="headerlink" title="UGUI如何合批"></a>UGUI如何合批</h3><p>合批过程是指Canvas合并UI元素的网格，并且生成发送给Unity渲染管线的命令。Canvas使用的网格都是从绑定在Canvas上的CanvasRenderer获得，但是不包含子Canvas的网格。UGUI的层叠顺序是按照Hierarchy中的顺序从上往下进行的，也就是越靠上的组件，就会被绘制在越底部。所有相邻层的可合批的UI元素（具有相同材质和纹理），就会在一个DrawCall中完成。</p><h5 id="Depth计算算法："><a href="#Depth计算算法：" class="headerlink" title="Depth计算算法："></a>Depth计算算法：</h5><p>遍历所有UI元素（已深度优先排序），对当前每一个UI元素CurrentUI，如果不渲染，CurrentUI.depth = -1，如果渲染该UI且底下没有其他UI元素与其相交（rect Intersects），其CurrentUI.depth = 0;</p><p>如果CurrentUI下面只有一个的需要渲染的UI元素LowerUI与其相交，且可以Batch（material instance id 和 texture instance id  相同，即与CurrentUI具有相同的Material和Texture），CurrentUI.depth =  LowerUI.depth；否则，CurrentUI.depth= LowerUI.depth + 1;</p><p>如果CurrentUI下面叠了多个元素，这些元素的最大层是MaxLowerDepth，如果有多个元素的层都是MaxLowerDepth，那么CurrentUI和下面的元素是无法合批的；如果只有一个元素的层是MaxLowerDepth，并且这个元素和CurrentUI的材质、纹理相同，那么它们就能合批。</p><h5 id="DrawCall合批-Batch"><a href="#DrawCall合批-Batch" class="headerlink" title="DrawCall合批(Batch):"></a>DrawCall合批(Batch):</h5><ul><li>Depth计算完后，依次根据Depth、material ID、texture  ID、RendererOrder（即UI层级队列顺序，HierarchyOrder）排序（条件的优先级依次递减），剔除depth ==  -1的UI元素，得到Batch前的UI元素队列VisiableList。</li><li>对VisiableList中相邻且可以Batch（相同material和texture）的UI元素合并批次，然后再生成相应mesh数据进行绘制。</li></ul><h3 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h3><ol><li>使用图集</li><li>动静分离(动态部分和静态部分分别使用不同的Canvas)</li><li>Text如果可以用图片代替就用图片代替</li><li>避免频繁删除/增加UI对象，UI层次结构变化会引起Canvas的更新(rebuild)</li><li>避免UI元素数目过多和层次结构过于复杂影响Batch更新速度</li><li>尽量不要使用Mask（其内部使用了模板缓冲，至少会造成增加2个Draw Call）</li></ol><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><p><a href="https://blog.csdn.net/sinat_25415095/article/details/112388638" target="_blank" rel="noopener">参考文章</a></p>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
          <category> 性能优化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>漫长的</title>
      <link href="posts/cbbaf7d9/"/>
      <url>posts/cbbaf7d9/</url>
      
        <content type="html"><![CDATA[<h2 id="漫长的"><a href="#漫长的" class="headerlink" title="漫长的"></a>漫长的</h2><p>打个响指吧，他说</p><p>我们打个共鸣的响指</p><p>遥远的事物将被震碎</p><p>面前的人们此时尚不知情</p><p>吹个口哨吧，我说</p><p>你来吹个斜斜的口哨</p><p>像一块铁然后是一枚针</p><p>磁极的弧线拂过绿玻璃</p><p>喝一杯水吧，也看一看河</p><p>在平静时平静，不平静时</p><p>我们就错过了一层台阶</p><p>一小颗眼泪滴在石头上</p><p>很长时间也不会干涸</p><p>整个季节将它结成了琥珀</p><p>块状的流淌，具体的光芒</p><p>在它背后是些遥远的事物</p>]]></content>
      
      
      <categories>
          
          <category> 诗与远方 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>线程池</title>
      <link href="posts/de7c53fe/"/>
      <url>posts/de7c53fe/</url>
      
        <content type="html"><![CDATA[<h2 id="线程池"><a href="#线程池" class="headerlink" title="线程池"></a>线程池</h2><p>ThreadPool.h</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thread&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;functional&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;mutex&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;condition_variable&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;future&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ThreadPool</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> TaskType = <span class="built_in">std</span>::function&lt;<span class="keyword">void</span>()&gt;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">explicit</span> <span class="title">ThreadPool</span><span class="params">(<span class="keyword">unsigned</span> n = <span class="built_in">std</span>::thread::hardware_concurrency())</span><span class="comment">//硬件提供的线程数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//构造函数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> thread_num = <span class="built_in">std</span>::thread::hardware_concurrency();</span><br><span class="line"><span class="keyword">if</span> (thread_num == <span class="number">0</span>) thread_num = <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">0</span>) n = thread_num;</span><br><span class="line"><span class="keyword">if</span> (n &gt; thread_num * <span class="number">2</span>) n = thread_num * <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建线程</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">unsigned</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">&#123;</span><br><span class="line">threads.emplace_back([<span class="keyword">this</span>]() &#123;</span><br><span class="line">threadFunc();</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//func 没有参数的方法</span></span><br><span class="line"><span class="comment">//添加线程</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line">auto addTask(T func) -&gt; std::future&lt;decltype(func())&gt;</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">using</span> RetType = <span class="keyword">decltype</span>(func());</span><br><span class="line"><span class="keyword">auto</span> task = <span class="built_in">std</span>::make_shared&lt;<span class="built_in">std</span>::packaged_task&lt;RetType()&gt;&gt;(<span class="built_in">std</span>::<span class="built_in">move</span>(func));</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">std</span>::lock_guard&lt;<span class="built_in">std</span>::mutex&gt; lk(mtx_);</span><br><span class="line">tasks.emplace([task]() &#123;</span><br><span class="line"></span><br><span class="line">(*task)();</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">cond_.notify_one();<span class="comment">//模板里面不提示</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> task-&gt;get_future();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">~ThreadPool() <span class="keyword">noexcept</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//析构</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">std</span>::lock_guard&lt;<span class="built_in">std</span>::mutex&gt; lk(mtx_);</span><br><span class="line">isStop = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">cond_.notify_all();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span>&amp;&amp; t : threads)</span><br><span class="line">&#123;</span><br><span class="line">t.join();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">threadFunc</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//每个线程运行的方法</span></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line">TaskType task;</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">std</span>::unique_lock&lt;<span class="built_in">std</span>::mutex&gt; lk(mtx_);</span><br><span class="line">cond_.wait(lk, [<span class="keyword">this</span>]() &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> isStop || !tasks.empty();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (isStop || tasks.empty()) <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">task = <span class="built_in">std</span>::<span class="built_in">move</span>(tasks.front());</span><br><span class="line">tasks.pop();</span><br><span class="line">&#125;</span><br><span class="line">task();<span class="comment">//临界区外执行吗,否则会为串行</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::thread&gt; threads;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">queue</span>&lt;TaskType&gt; tasks; <span class="comment">//任务队列</span></span><br><span class="line"><span class="keyword">bool</span> isStop = <span class="literal">false</span>;</span><br><span class="line"><span class="built_in">std</span>::mutex mtx_;</span><br><span class="line"><span class="built_in">std</span>::condition_variable cond_;<span class="comment">//条件变量</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="测试运行"><a href="#测试运行" class="headerlink" title="测试运行"></a>测试运行</h2><h3 id="打印测试"><a href="#打印测试" class="headerlink" title="打印测试"></a>打印测试</h3><p>main.h</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"ThreadPool.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;chrono&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>::literals::chrono_literals;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">test_func</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">std</span>::this_thread::sleep_for(<span class="number">5</span>s);</span><br><span class="line"><span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n = <span class="number">5</span>;</span><br><span class="line"><span class="function">ThreadPool <span class="title">threadPool</span><span class="params">(<span class="number">4</span>)</span></span>;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">future</span>&lt;<span class="keyword">int</span>&gt;&gt; futs;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">futs.emplace_back(threadPool.addTask([]() &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> test_func(<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">&#125;));</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">futs.emplace_back(threadPool.addTask([i]() &#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">std</span>::this_thread::sleep_for(<span class="number">5</span>s);</span><br><span class="line"><span class="keyword">return</span> i;</span><br><span class="line"></span><br><span class="line">&#125;));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; futs[i].<span class="built_in">get</span>() &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++并发 </category>
          
          <category> 线程池 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>DoTween插件学习</title>
      <link href="posts/3b861ed6/"/>
      <url>posts/3b861ed6/</url>
      
        <content type="html"><![CDATA[<h3 id="官方案例"><a href="#官方案例" class="headerlink" title="官方案例"></a>官方案例</h3><h4 id="Basics"><a href="#Basics" class="headerlink" title="Basics"></a>Basics</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">blueCube.DOMove(<span class="keyword">new</span> Vector3(<span class="number">0</span>,<span class="number">4</span>,<span class="number">0</span>), <span class="number">2</span>).SetRelative();<span class="comment">// Let's move the blue cube BY 0,4,0 in 2 seconds  相对位置</span></span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">purpleCube.GetComponent&lt;Renderer&gt;().material.DOColor(Color.yellow, <span class="number">2</span>).SetLoops(<span class="number">-1</span>, LoopType.Yoyo);<span class="comment">// Also, let's set the color tween to loop infinitely forward and backwards,从前到后</span></span><br></pre></td></tr></table></figure><p>循环的类型</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> LoopType</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        <span class="comment">// 摘要:</span></span><br><span class="line">        <span class="comment">//     Each loop cycle restarts from the beginning</span></span><br><span class="line">        Restart,</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        <span class="comment">// 摘要:</span></span><br><span class="line">        <span class="comment">//     The tween moves forward and backwards at alternate cycles</span></span><br><span class="line">        Yoyo,</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        <span class="comment">// 摘要:</span></span><br><span class="line">        <span class="comment">//     Continuously increments the tween at the end of each loop cycle (A to B, B to</span></span><br><span class="line">        <span class="comment">//     B+(A-B), and so on), thus always moving "onward".</span></span><br><span class="line">        <span class="comment">//     In case of String tweens works only if the tween is set as relative</span></span><br><span class="line">        Incremental</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="Sequences"><a href="#Sequences" class="headerlink" title="Sequences"></a>Sequences</h4><p>动画组合的容器</p><p>动画曲线的类型</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> Ease</span><br><span class="line">    &#123;</span><br><span class="line">        Unset,</span><br><span class="line">        Linear,</span><br><span class="line">        InSine,</span><br><span class="line">        OutSine,</span><br><span class="line">        InOutSine,</span><br><span class="line">        InQuad,</span><br><span class="line">        OutQuad,</span><br><span class="line">        InOutQuad,</span><br><span class="line">        InCubic,</span><br><span class="line">        OutCubic,</span><br><span class="line">        InOutCubic,</span><br><span class="line">        InQuart,</span><br><span class="line">        OutQuart,</span><br><span class="line">        InOutQuart,</span><br><span class="line">        InQuint,</span><br><span class="line">        OutQuint,</span><br><span class="line">        InOutQuint,</span><br><span class="line">        InExpo,</span><br><span class="line">        OutExpo,</span><br><span class="line">        InOutExpo,</span><br><span class="line">        InCirc,</span><br><span class="line">        OutCirc,</span><br><span class="line">        InOutCirc,</span><br><span class="line">        InElastic,</span><br><span class="line">        OutElastic,</span><br><span class="line">        InOutElastic,</span><br><span class="line">        InBack,</span><br><span class="line">        OutBack,</span><br><span class="line">        InOutBack,</span><br><span class="line">        InBounce,</span><br><span class="line">        OutBounce,</span><br><span class="line">        InOutBounce,</span><br><span class="line">        Flash,</span><br><span class="line">        InFlash,</span><br><span class="line">        OutFlash,</span><br><span class="line">        InOutFlash,</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        <span class="comment">// 摘要:</span></span><br><span class="line">        <span class="comment">//     Don't assign this! It's assigned automatically when creating 0 duration tweens</span></span><br><span class="line">        INTERNAL_Zero,</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        <span class="comment">// 摘要:</span></span><br><span class="line">        <span class="comment">//     Don't assign this! It's assigned automatically when setting the ease to an AnimationCurve</span></span><br><span class="line">        <span class="comment">//     or to a custom ease function</span></span><br><span class="line">        INTERNAL_Custom</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
          <category> 插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vscode相关整理</title>
      <link href="posts/a4920a86/"/>
      <url>posts/a4920a86/</url>
      
        <content type="html"><![CDATA[<h2 id="vscode常用快捷键整理"><a href="#vscode常用快捷键整理" class="headerlink" title="vscode常用快捷键整理"></a>vscode常用快捷键整理</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + Tab  切换打开的文件</span><br><span class="line">Alt + 1 ：切换到第一个文件</span><br><span class="line">Alt + 2 ：切换到第二个文件</span><br><span class="line">Ctrl+&#96;   终端和代码编辑区的切换</span><br></pre></td></tr></table></figure><h2 id="vscode常用插件"><a href="#vscode常用插件" class="headerlink" title="vscode常用插件"></a>vscode常用插件</h2><p>Git Graph</p><p>Git 图形化显示和操作</p><p>Indent Rainbow</p><p>Indent Rainbow 是一个 VSCode 扩展，它的核心功能是在每个缩进层级上显示不同的颜色。这不仅使代码结构一目了然，而且有助于快速识别嵌套级别和潜在的错误。安装后，无需任何额外设置，只需专注编写代码，彩色的缩进就会自动出现。</p><p>Bookmarks</p><p>书签插件,方便查找和跳转</p><h2 id="vscode-Debug-lua相关"><a href="#vscode-Debug-lua相关" class="headerlink" title="vscode Debug  lua相关"></a>vscode Debug  lua相关</h2><p>unity中debug </p><p>EmmyLua 插件</p><p>在launch.json添加配置,之后运行搜索,对应unity的项目,debug控制台会输出Connected.字样,然后开启对应进程的unity,就会连接断点</p>]]></content>
      
      
      <categories>
          
          <category> 代码编辑器 </category>
          
          <category> vscode </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>vs2022相关整理</title>
      <link href="posts/b382c5de/"/>
      <url>posts/b382c5de/</url>
      
        <content type="html"><![CDATA[<h2 id="vs2022常用快捷键整理"><a href="#vs2022常用快捷键整理" class="headerlink" title="vs2022常用快捷键整理"></a>vs2022常用快捷键整理</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">ctrl+r ctrl+r 批量重命名</span><br><span class="line">ctrl+k+o 切换.h和.cpp文件</span><br><span class="line">Ctrl + T 代碼搜索</span><br><span class="line">Alt + \ 转至成员</span><br><span class="line">F9  设置断点</span><br><span class="line">Ctrl+J  智能提示</span><br><span class="line">Alt+ -&gt; 智能提示</span><br><span class="line">Ctrl+M+M  折叠&#x2F;显示 当前代码段</span><br><span class="line">Ctrl+M+L   折叠&#x2F;显示 全部代码（前提：代码折叠功能开启）</span><br><span class="line">Ctrl+Tab  打开IDE导航，获得鸟瞰图</span><br><span class="line">Ctrl+L  刪除整行</span><br><span class="line">Shift  + F12 查找所有引用</span><br><span class="line">Shift  + 方向鍵 块选择</span><br><span class="line">Ctrl + Shift + &#125;  选择括号、括号内的文本：</span><br><span class="line">Shift + End  从头到尾选择整行</span><br><span class="line">Shift + Home  从尾到头选择整行</span><br><span class="line">Ctrl + Tab  切换打开的文件</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 代码编辑器 </category>
          
          <category> vs2022 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Shader相关集合</title>
      <link href="posts/42a259a8/"/>
      <url>posts/42a259a8/</url>
      
        <content type="html"><![CDATA[<h2 id="可交互的水波纹"><a href="#可交互的水波纹" class="headerlink" title="可交互的水波纹"></a>可交互的水波纹</h2><p><a href="https://github.com/xswl2333/InteractWave" target="_blank" rel="noopener">https://github.com/xswl2333/InteractWave</a></p>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
          <category> Shader </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> Unity </tag>
            
            <tag> Shader </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>单个功能的研究</title>
      <link href="posts/cd46b40c/"/>
      <url>posts/cd46b40c/</url>
      
        <content type="html"><![CDATA[<h2 id="地牢房间的随机生成"><a href="#地牢房间的随机生成" class="headerlink" title="地牢房间的随机生成"></a>地牢房间的随机生成</h2><p><a href="https://github.com/xswl2333/RandomRoom" target="_blank" rel="noopener">https://github.com/xswl2333/RandomRoom</a></p>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
          <category> 功能探究 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小游戏复刻集合</title>
      <link href="posts/20ff0e4/"/>
      <url>posts/20ff0e4/</url>
      
        <content type="html"><![CDATA[<h2 id="微信小游戏跳一跳"><a href="#微信小游戏跳一跳" class="headerlink" title="微信小游戏跳一跳"></a>微信小游戏跳一跳</h2><p><a href="https://github.com/xswl2333/JumpJump" target="_blank" rel="noopener">https://github.com/xswl2333/JumpJump</a></p>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
          <category> 游戏复刻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>batch批量修改文件命和后缀</title>
      <link href="posts/1bbd8c79/"/>
      <url>posts/1bbd8c79/</url>
      
        <content type="html"><![CDATA[<p>.txt编辑修改应该保存为ANSI格式</p><p>批量修改文件夹下jpg的文件名修改为%d.jpg</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">set</span> a=0</span><br><span class="line">setlocal EnableDelayedExpansion</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> %%n <span class="keyword">in</span> (*.jpg) <span class="keyword">do</span> (</span><br><span class="line"><span class="built_in">set</span> /A a+=1</span><br><span class="line">ren <span class="string">"%%n"</span> <span class="string">"!a!.jpg"</span> ::重命名 ren</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>设置标题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">::title设置标题</span><br><span class="line">title 我测试一下！</span><br><span class="line">pause</span><br></pre></td></tr></table></figure><p>输入参数，修改统一变量命</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">set</span> /p var=请输入后缀名：</span><br><span class="line"><span class="built_in">set</span> a=0</span><br><span class="line">setlocal EnableDelayedExpansion</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> %%n <span class="keyword">in</span> (*.jpg) <span class="keyword">do</span> (</span><br><span class="line"><span class="built_in">set</span> /A a+=1</span><br><span class="line">ren <span class="string">"%%n"</span> <span class="string">"%var%!a!.jpg"</span> </span><br><span class="line">)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Batch </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>remote遇到的问题</title>
      <link href="posts/1d399e64/"/>
      <url>posts/1d399e64/</url>
      
        <content type="html"><![CDATA[<p>git remote配置deploy key时添加了多个key导致仓库无法识别</p><p>通过命令确定确定私钥列表，一个仓库只有一个私钥</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-add -l</span><br></pre></td></tr></table></figure><p>清空列表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-add -D</span><br></pre></td></tr></table></figure><p>重新添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-add ~&#x2F;.ssh&#x2F;jump(私钥名称)</span><br></pre></td></tr></table></figure><p>之后git push 成功</p><p>push的时候遇到了<code>Could not open a connection to your authentication agent.</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-agent bash</span><br></pre></td></tr></table></figure><p>之后重新add公钥，push成功了</p>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>cmake入门</title>
      <link href="posts/9cbb0491/"/>
      <url>posts/9cbb0491/</url>
      
        <content type="html"><![CDATA[<p>学习资料<a href="https://www.bookstack.cn/read/CMake-Cookbook/README.md" target="_blank" rel="noopener">cmake菜谱</a>    </p><h1 id="从可执行文件到库"><a href="#从可执行文件到库" class="headerlink" title="从可执行文件到库"></a>从可执行文件到库</h1><h3 id="构建和链接静态库和动态库"><a href="#构建和链接静态库和动态库" class="headerlink" title="构建和链接静态库和动态库"></a>构建和链接静态库和动态库</h3><p>目录结构</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">│  CMakeLists.txt</span><br><span class="line">│  helloworld.cpp</span><br><span class="line">│  Message.cpp</span><br><span class="line">│  Message.hpp</span><br><span class="line">│  build</span><br></pre></td></tr></table></figure><p>CMakeLists.txt</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># set minimum cmake version</span></span><br><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.5</span> FATAL_ERROR)</span><br><span class="line"></span><br><span class="line"><span class="comment"># project name and language，myproject为项目名称:myproject.sln</span></span><br><span class="line"><span class="keyword">project</span>(myproject LANGUAGES CXX)</span><br><span class="line"></span><br><span class="line"><span class="comment"># generate a library from sources,</span></span><br><span class="line"><span class="keyword">add_library</span>(<span class="keyword">message</span><span class="comment">#项目中显示库的名称</span></span><br><span class="line">  STATIC<span class="comment">#STATIC：用于创建静态库，即编译文件的打包存档，以便在链接其他目标时使用</span></span><br><span class="line">    <span class="keyword">Message</span>.hpp</span><br><span class="line">    <span class="keyword">Message</span>.cpp</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line"><span class="keyword">add_executable</span>(helloworld helloworld.cpp)</span><br><span class="line"><span class="keyword">target_link_libraries</span>(helloworld <span class="keyword">message</span>)<span class="comment">#将库链接到可执行文件</span></span><br></pre></td></tr></table></figure><p>使用${}进行变量的引用</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># set minimum cmake version</span></span><br><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.5</span> FATAL_ERROR)</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>(APP_NAME work_hard)</span><br><span class="line"></span><br><span class="line"><span class="comment"># project name and language，myproject为项目名称:myproject.sln</span></span><br><span class="line"><span class="keyword">project</span>(<span class="variable">$&#123;APP_NAME&#125;</span>)<span class="comment">#返回项目名称</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># generate a library from sources,</span></span><br><span class="line"><span class="keyword">add_library</span>(<span class="keyword">message</span><span class="comment">#项目中显示库的名称</span></span><br><span class="line">  STATIC<span class="comment">#STATIC：用于创建静态库，即编译文件的打包存档，以便在链接其他目标时使用</span></span><br><span class="line">    <span class="keyword">Message</span>.hpp</span><br><span class="line">    <span class="keyword">Message</span>.cpp</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line"><span class="keyword">add_executable</span>(<span class="variable">$&#123;APP_NAME&#125;</span> helloworld.cpp)</span><br><span class="line"><span class="keyword">target_link_libraries</span>(<span class="variable">$&#123;APP_NAME&#125;</span> <span class="keyword">message</span>)<span class="comment">#将库链接到可执行文件</span></span><br></pre></td></tr></table></figure><p>target命令</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">target_include_directories</span>()：指定目标包含的头文件路径。</span><br><span class="line"><span class="keyword">target_link_libraries</span>()：指定目标链接的库。</span><br><span class="line"><span class="keyword">target_compile_options</span>()：指定目标的编译选项。</span><br><span class="line">目标 由 <span class="keyword">add_library</span>() 或 <span class="keyword">add_executable</span>() 生成。</span><br></pre></td></tr></table></figure><h3 id="引入第三方依赖库"><a href="#引入第三方依赖库" class="headerlink" title="引入第三方依赖库"></a>引入第三方依赖库</h3><h4 id="cmake-find-package-相关"><a href="#cmake-find-package-相关" class="headerlink" title="cmake find_package()相关"></a>cmake find_package()相关</h4><p>本质上就是一个搜包的命令，通过一些特定的规则找到<code>&lt;package_name&gt;Config.cmake</code>包配置文件，通过执行该配置文件，从而定义了一系列的变量，通过这些变量就可以准确定位库的头文件和库文件，完成编译。该方法用会有官方的库，储存在<code>path_to_your_cmake/share/cmake-&lt;version&gt;/Modules</code>，可以直接找到，如果没有要自己去引入</p><h4 id="直接编译好引用头文件和静态库"><a href="#直接编译好引用头文件和静态库" class="headerlink" title="直接编译好引用头文件和静态库"></a>直接编译好引用头文件和静态库</h4><p>以googletest为例</p><p>目录结构</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">├─gtest&#x2F;&#x2F;mklink目录链接,mklink &#x2F;j link target</span><br><span class="line">│  ├─include</span><br><span class="line">│  │  ├─gmock</span><br><span class="line">│  │  └─gtest</span><br><span class="line">│  └─lib</span><br><span class="line">└─src</span><br><span class="line"> main.cpp</span><br></pre></td></tr></table></figure><p>CMakeLists</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.5</span>.<span class="number">1</span>)</span><br><span class="line"><span class="keyword">project</span>(cmake_gtest)</span><br><span class="line"></span><br><span class="line"><span class="comment"># gtest</span></span><br><span class="line"><span class="keyword">set</span>(GTEST <span class="string">"$&#123;CMAKE_SOURCE_DIR&#125;/gtest/"</span>)<span class="comment">#当前文件夹下映射</span></span><br><span class="line"><span class="keyword">include_directories</span>(<span class="string">"$&#123;GTEST&#125;/include"</span>)</span><br><span class="line"><span class="keyword">link_directories</span>(<span class="string">"$&#123;GTEST&#125;/lib"</span>)</span><br><span class="line"><span class="comment"># source files</span></span><br><span class="line"><span class="keyword">include_directories</span>(<span class="string">"$&#123;CMAKE_SOURCE_DIR&#125;/src"</span>)</span><br><span class="line"><span class="keyword">AUX_SOURCE_DIRECTORY</span>(<span class="string">"$&#123;CMAKE_SOURCE_DIR&#125;/src"</span> PROJECT_SRCS)</span><br><span class="line"><span class="keyword">FILE</span>(GLOB PROJECT_HDRS <span class="variable">$&#123;CMAKE_SOURCE_DIR&#125;</span>/src/*.h <span class="variable">$&#123;CMAKE_SOURCE_DIR&#125;</span>/src/*.hpp)</span><br><span class="line"><span class="comment"># $&#123;PROJECT_NAME&#125;</span></span><br><span class="line"><span class="keyword">add_executable</span>(<span class="variable">$&#123;PROJECT_NAME&#125;</span> <span class="variable">$&#123;PROJECT_SRCS&#125;</span> <span class="variable">$&#123;PROJECT_HDRS&#125;</span>)</span><br><span class="line"><span class="keyword">target_link_libraries</span>(<span class="variable">$&#123;PROJECT_NAME&#125;</span>  gtest.lib)</span><br><span class="line"><span class="keyword">target_link_libraries</span>(<span class="variable">$&#123;PROJECT_NAME&#125;</span>  gtest.lib)</span><br></pre></td></tr></table></figure><h2 id="运行测试"><a href="#运行测试" class="headerlink" title="运行测试"></a>运行测试</h2><h3 id="googletest单元测试"><a href="#googletest单元测试" class="headerlink" title="googletest单元测试"></a>googletest单元测试</h3><p>cmake点击Grouped分别选择安装INSTALL_GTEST，BUILD_CMOKE组件，点击Generate生成项目文件，之后编译项目，在安装位置产生静态和动态库。</p><p>windows下如果不勾选”gtest_force_shared_crt”编译选项，则是生成链接MT运行时库的库，使用的时候需要设置使用程序为链接MT运行时库。链接MD运行时库，则要勾选”gtest_force_shared_crt”编译选项。(c++-&gt;代码生成)</p><p>链接dll文件出问题，暂时没有没有解决</p><p>LNK2019错误，没有链接gtest.lib<code>target_link_libraries(${PROJECT_NAME}  gtest.lib)</code></p><h5 id="分离源代码和测试用例，多目录构建"><a href="#分离源代码和测试用例，多目录构建" class="headerlink" title="分离源代码和测试用例，多目录构建"></a>分离源代码和测试用例，多目录构建</h5><p>目录结构</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">├── CMakeLists.txt</span><br><span class="line">├── src</span><br><span class="line">│   ├── CMakeLists.txt</span><br><span class="line">│   ├── add.cpp</span><br><span class="line">│   └── add.h</span><br><span class="line">├── test</span><br><span class="line">    ├── CMakeLists.txt</span><br><span class="line">    ├── main.cpp</span><br><span class="line">    └── test.cpp</span><br></pre></td></tr></table></figure><p>CMakeLists.txt</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.17</span>)</span><br><span class="line"><span class="keyword">project</span>(gtest_example)</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_STANDARD <span class="number">14</span>)</span><br><span class="line"><span class="keyword">add_subdirectory</span>(src)<span class="comment">#进入一层构建项目</span></span><br><span class="line"><span class="keyword">add_subdirectory</span>(<span class="keyword">test</span>)</span><br></pre></td></tr></table></figure><p>src/CMakeLists.txt</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.10</span>.<span class="number">2</span>)</span><br><span class="line"><span class="keyword">project</span>(src)</span><br><span class="line"><span class="comment"># 定义需要参与编译的源文件</span></span><br><span class="line"><span class="keyword">aux_source_directory</span>(. source)</span><br><span class="line"><span class="comment"># 把源码添加进来参与编译</span></span><br><span class="line"><span class="keyword">add_library</span>(<span class="variable">$&#123;PROJECT_NAME&#125;</span> <span class="variable">$&#123;source&#125;</span>)</span><br><span class="line"><span class="comment"># 定义需要暴露的头文件</span></span><br><span class="line"><span class="keyword">target_include_directories</span>(<span class="variable">$&#123;PROJECT_NAME&#125;</span> PUBLIC <span class="variable">$&#123;PROJECT_SOURCE_DIR&#125;</span>)</span><br></pre></td></tr></table></figure><p>test/CMakeLists.txt</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.17</span>)</span><br><span class="line"><span class="keyword">project</span>(<span class="keyword">test</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>(GTEST <span class="string">"D:/googletest/"</span>)<span class="comment">#绝对路径</span></span><br><span class="line"><span class="keyword">include_directories</span>(<span class="string">"$&#123;GTEST&#125;/include"</span>)</span><br><span class="line"><span class="keyword">link_directories</span>(<span class="string">"$&#123;GTEST&#125;/lib"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">add_executable</span>(<span class="variable">$&#123;PROJECT_NAME&#125;</span> main.cpp <span class="keyword">test</span>.cpp)</span><br><span class="line"><span class="keyword">target_link_libraries</span>(<span class="variable">$&#123;PROJECT_NAME&#125;</span> src)<span class="comment">#链接文件</span></span><br><span class="line"><span class="keyword">target_link_libraries</span>(<span class="variable">$&#123;PROJECT_NAME&#125;</span>  gtest.lib)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CMake </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CMake </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些基本语法</title>
      <link href="posts/ad01bc3e/"/>
      <url>posts/ad01bc3e/</url>
      
        <content type="html"><![CDATA[<h2 id="C-方法"><a href="#C-方法" class="headerlink" title="C#方法"></a>C#方法</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line">namespace _05_方法</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">Compare</span>(<span class="params"><span class="keyword">ref</span> <span class="keyword">int</span> a, <span class="keyword">int</span> b</span>)<span class="comment">//ref引用</span></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a&gt;b)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> a;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> b;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OutTest</span>(<span class="params"><span class="keyword">out</span> <span class="keyword">int</span> x</span>)<span class="comment">//输出类型传递值，一个方法可多个返回值</span></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            x = <span class="number">100</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">factorial</span>(<span class="params"><span class="keyword">int</span> num</span>)<span class="comment">//计算阶乘</span></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">int</span> result = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span>(num &gt;=<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                result=result* num;</span><br><span class="line">                num--;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">int</span> a = <span class="number">2</span>;<span class="keyword">int</span> b = <span class="number">3</span>;</span><br><span class="line">            Program program= <span class="keyword">new</span> Program();</span><br><span class="line">            program.OutTest(<span class="keyword">out</span> a);<span class="comment">//改变了a的值</span></span><br><span class="line">            Console.WriteLine(program.Compare(<span class="keyword">ref</span> a, b));</span><br><span class="line">            <span class="comment">//Console.WriteLine("7" + program.factorial(7));</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="可空类型"><a href="#可空类型" class="headerlink" title="可空类型"></a>可空类型</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>       &#123;</span><br><span class="line">           <span class="keyword">int</span>? i = <span class="literal">null</span>;<span class="comment">//可空类型</span></span><br><span class="line">           <span class="keyword">int</span> a = i ?? <span class="number">0</span>;<span class="comment">//i为空赋值为0，不为空赋值为i</span></span><br><span class="line">           Console.WriteLine(a);</span><br><span class="line">           <span class="comment">//Console.WriteLine("7" + program.factorial(7));</span></span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>       &#123;</span><br><span class="line">           <span class="comment">//int[] number;</span></span><br><span class="line">           <span class="comment">//number = new int[5] &#123;1,2,3,50,50&#125;;</span></span><br><span class="line">           <span class="comment"><span class="doctag">///</span>/number[5] = 120;</span></span><br><span class="line">           <span class="comment">//foreach(int i in number)//for(auto i:number)//c++写法好像差不多</span></span><br><span class="line">           <span class="comment">//&#123;</span></span><br><span class="line">           <span class="comment">//    Console.WriteLine(i);</span></span><br><span class="line">           <span class="comment">//&#125;</span></span><br><span class="line">           <span class="comment">//Console.WriteLine(number[6]);</span></span><br><span class="line">           <span class="comment">//二维数组</span></span><br><span class="line">           <span class="keyword">int</span>[,] number = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>, <span class="number">3</span>] &#123; &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span> &#125;, &#123; <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span> &#125; &#125;;</span><br><span class="line">           <span class="keyword">foreach</span>(<span class="keyword">int</span> i <span class="keyword">in</span> number)<span class="comment">//智能</span></span><br><span class="line">           &#123;</span><br><span class="line">               Console.WriteLine(i);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h2 id="所谓集合"><a href="#所谓集合" class="headerlink" title="所谓集合"></a>所谓集合</h2><h3 id="map"><a href="#map" class="headerlink" title="map"></a>map</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//hash</span></span><br><span class="line">            <span class="comment">//Hashtable hashtable = new Hashtable();</span></span><br><span class="line">            <span class="comment">//hashtable.Add("001", "C#");</span></span><br><span class="line">            <span class="comment">//hashtable.Add("002", "unity");</span></span><br><span class="line">            <span class="comment">//hashtable.Add("003", "C++");</span></span><br><span class="line">            <span class="comment">//foreach(object key in hashtable.Keys)</span></span><br><span class="line">            <span class="comment">//&#123;</span></span><br><span class="line">            <span class="comment">//    Console.WriteLine("key"+ hashtable[key]);</span></span><br><span class="line">            <span class="comment">//&#125;</span></span><br><span class="line">            <span class="comment">//字典</span></span><br><span class="line">            Dictionary&lt;<span class="keyword">string</span>, <span class="keyword">string</span>&gt; hashtable = <span class="keyword">new</span> Dictionary&lt;<span class="keyword">string</span>, <span class="keyword">string</span>&gt;();<span class="comment">//限定类型</span></span><br><span class="line">            hashtable.Add(<span class="string">"001"</span>, <span class="string">"C#"</span>);</span><br><span class="line">            hashtable.Add(<span class="string">"002"</span>, <span class="string">"unity"</span>);</span><br><span class="line">            hashtable.Add(<span class="string">"003"</span>, <span class="string">"C++"</span>);</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="keyword">string</span> key <span class="keyword">in</span> hashtable.Keys)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">"key"</span> + hashtable[key]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="list"><a href="#list" class="headerlink" title="list"></a>list</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>       &#123;</span><br><span class="line">           <span class="comment">//ArrayList arrayList= new ArrayList();</span></span><br><span class="line">           <span class="comment">//arrayList.Add(1);</span></span><br><span class="line">           <span class="comment">//arrayList.Add(20);</span></span><br><span class="line">           <span class="comment">//arrayList.Add(50);</span></span><br><span class="line">           <span class="comment">//foreach(object i in arrayList)</span></span><br><span class="line">           <span class="comment">//&#123;</span></span><br><span class="line">           <span class="comment">//    Console.WriteLine(i);</span></span><br><span class="line">           <span class="comment">//&#125;</span></span><br><span class="line">           List&lt;<span class="keyword">int</span>&gt; list = <span class="keyword">new</span> List&lt;<span class="keyword">int</span>&gt;();<span class="comment">//限定类型</span></span><br><span class="line">           list.Add(<span class="number">1</span>);</span><br><span class="line">           list.Add(<span class="number">5</span>);</span><br><span class="line">           list.Add(<span class="number">6</span>);</span><br><span class="line">           list.Add(<span class="number">2</span>);</span><br><span class="line">           list.Sort();</span><br><span class="line">           <span class="keyword">foreach</span> (<span class="keyword">object</span> i <span class="keyword">in</span> list)</span><br><span class="line">           &#123;</span><br><span class="line">               Console.WriteLine(i);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h2 id="类"><a href="#类" class="headerlink" title="类"></a>类</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Box</span><span class="comment">//默认internal,类似与private</span></span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">public</span> <span class="keyword">int</span> width;</span><br><span class="line">       <span class="keyword">public</span> <span class="keyword">int</span> height;</span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="title">Box</span>(<span class="params"><span class="keyword">int</span> width,<span class="keyword">int</span> height</span>) <span class="comment">//c#构造函数,创建对象</span></span></span><br><span class="line"><span class="function"></span>       &#123; </span><br><span class="line">           <span class="keyword">this</span>.width = width;</span><br><span class="line">           <span class="keyword">this</span>.height = height;</span><br><span class="line">       &#125;</span><br><span class="line">       ~Box() &#123;</span><br><span class="line">           Console.WriteLine(<span class="string">"test"</span>);<span class="comment">//析构函数</span></span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getBoxSpace</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>       &#123;</span><br><span class="line">           <span class="keyword">return</span> width * height;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">internal</span> <span class="keyword">class</span> <span class="title">Program</span>  </span><br><span class="line">   &#123;</span><br><span class="line">       <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>       &#123;</span><br><span class="line">           Box box=<span class="keyword">new</span> Box(<span class="number">10</span>,<span class="number">20</span>);</span><br><span class="line">           <span class="comment">//box.height = 10;</span></span><br><span class="line">           <span class="comment">//box.width = 10;</span></span><br><span class="line">           Console.WriteLine(box.getBoxSpace());</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h2 id="类的继承多态"><a href="#类的继承多态" class="headerlink" title="类的继承多态"></a>类的继承多态</h2><h3 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Animal</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> name;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> age;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Eat</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">"吃东西"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Dog</span>:<span class="title">Animal</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">internal</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Dog dog= <span class="keyword">new</span> Dog(); <span class="comment">//先创建分类的对象</span></span><br><span class="line">            dog.Eat();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//抽象类</span></span><br><span class="line">   <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title">Shape</span></span><br><span class="line">   &#123;</span><br><span class="line">       <span class="function"><span class="keyword">abstract</span> <span class="keyword">public</span> <span class="keyword">float</span> <span class="title">area</span>(<span class="params"></span>)</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">Rect</span> :<span class="title">Shape</span></span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">public</span> <span class="keyword">int</span> width;</span><br><span class="line">       <span class="keyword">public</span> <span class="keyword">int</span> height;</span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">float</span> <span class="title">area</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>       &#123;</span><br><span class="line">           <span class="keyword">return</span> width * height;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">Circle</span> : <span class="title">Shape</span></span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">public</span> <span class="keyword">int</span> r;</span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">float</span> <span class="title">area</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>       &#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="number">3.14f</span>*r * r;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">internal</span> <span class="keyword">class</span> <span class="title">DT</span></span><br><span class="line">   &#123;</span><br><span class="line">       <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>       &#123;</span><br><span class="line">           Rect r = <span class="keyword">new</span> Rect();</span><br><span class="line">           r.width = <span class="number">10</span>;</span><br><span class="line">           r.height = <span class="number">20</span>;</span><br><span class="line">           Console.WriteLine(r.area());<span class="comment">//动态多态</span></span><br><span class="line"></span><br><span class="line">           Circle c=<span class="keyword">new</span> Circle();</span><br><span class="line">           c.r = <span class="number">10</span>;</span><br><span class="line">           Console.WriteLine(c.area());<span class="comment">//执行时才发生</span></span><br><span class="line">       &#125;</span><br><span class="line">          </span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title">IMy</span></span><br><span class="line">   &#123;</span><br><span class="line">       <span class="function"><span class="keyword">void</span> <span class="title">Test</span>(<span class="params"></span>)</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">interface</span> <span class="title">IMyInterface</span></span><br><span class="line">   &#123;</span><br><span class="line">       <span class="function"><span class="keyword">void</span> <span class="title">TestTwo</span>(<span class="params"></span>)</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">TestInterface</span>:<span class="title">IMyInterface</span>, <span class="title">IMy</span></span><br><span class="line">   &#123; </span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Test</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>       &#123;</span><br><span class="line">           Console.WriteLine(<span class="string">"test"</span>);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">TestTwo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>       &#123;</span><br><span class="line">           Console.WriteLine(<span class="string">"testTwo"</span>);<span class="comment">//多个接口调用</span></span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">internal</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">   &#123;</span><br><span class="line">       <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>       &#123;</span><br><span class="line">          TestInterface test= <span class="keyword">new</span> TestInterface();</span><br><span class="line">           test.Test();</span><br><span class="line">           test.TestTwo();</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h2 id="一些关键字"><a href="#一些关键字" class="headerlink" title="一些关键字"></a>一些关键字</h2><h3 id="as和is"><a href="#as和is" class="headerlink" title="as和is"></a>as和is</h3><p><code>as</code> 类型转换失败时值为null不抛出异常<br> 但强制转换如果转换失败会抛出异常所以我们要添加异常处理<br> <code>is</code> : 检查一个对象是否兼容于其他指定的类型,并返回一个Bool值,永远不会抛出异常</p>]]></content>
      
      
      <categories>
          
          <category> C Sharp基础入门 </category>
          
          <category> 基本语法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>樱花动漫http链接获取改进</title>
      <link href="posts/b1a5ac08/"/>
      <url>posts/b1a5ac08/</url>
      
        <content type="html"><![CDATA[<p>因为上一篇中正则表达式匹配字符串，只能匹配.mp4结尾的链接，不具有普适性，有的链接无法获取，<br>所以做出以下改进，其中str(textlist[0])相比于str(textlist)可以不出现中括号</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">u=<span class="number">0</span></span><br><span class="line">videos = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> videourls:</span><br><span class="line">    response=requests.get(videourls[u])</span><br><span class="line">    u=u+<span class="number">1</span></span><br><span class="line">    <span class="comment">#print(type(videourls[0]))#列表中的元素为str</span></span><br><span class="line">    response.encoding=<span class="string">'utf-8'</span></span><br><span class="line">    html=response.text</span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">"html.parser"</span>)</span><br><span class="line">    textlist = soup.select(<span class="string">'#playbox'</span>)<span class="comment">#id查找可以，只是在表层</span></span><br><span class="line">    text=str(textlist[<span class="number">0</span>])<span class="comment">#关键字函数和上面重复</span></span><br><span class="line">    matchObj= re.findall(<span class="string">r'(http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&amp;+]|[!*\(\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+\$)'</span>,text)<span class="comment">#\$匹配之后的字符</span></span><br><span class="line">    v=str(matchObj[<span class="number">0</span>])<span class="comment">#转换元素没有[]</span></span><br><span class="line">    s=v.replace(<span class="string">'$'</span>,<span class="string">''</span>)<span class="comment">#去掉[]</span></span><br><span class="line">    videos.append(s)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>樱花动漫爬虫</title>
      <link href="posts/b6dc2c/"/>
      <url>posts/b6dc2c/</url>
      
        <content type="html"><![CDATA[<p>起因是想在樱花动漫找一部番，然后发现网页有视频文件的地址，所以想到用python自动化下载，python好久不用了，整体写起来实在垃圾，以下是编写代码的过程</p><h2 id="解析页面，获取动漫的所有集播放链接"><a href="#解析页面，获取动漫的所有集播放链接" class="headerlink" title="解析页面，获取动漫的所有集播放链接"></a>解析页面，获取动漫的所有集播放链接</h2><p>这部分源码来源于<a href="https://blog.csdn.net/weixin_43552452/article/details/109536703" target="_blank" rel="noopener">这篇博客</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os </span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver </span><br><span class="line"><span class="keyword">import</span> requests </span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup </span><br><span class="line"><span class="keyword">import</span> re </span><br><span class="line"></span><br><span class="line"><span class="comment">#请求页面</span></span><br><span class="line">header = &#123;</span><br><span class="line">    <span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36"</span></span><br><span class="line">&#125; <span class="comment">#请求</span></span><br><span class="line">url = <span class="string">"http://www.yhdm.io/show/889.html"</span> <span class="comment">#网页地址，这里以卡卡动漫中的无限斯特拉托斯为例</span></span><br><span class="line">r = requests.get(url, headers=header)</span><br><span class="line">html = r.text <span class="comment">#以二进制打印页面</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#解析页面</span></span><br><span class="line">soup = BeautifulSoup(html, <span class="string">"html.parser"</span>)</span><br><span class="line">urls = soup.find(<span class="string">"div"</span>, class_=<span class="string">"movurl"</span>).find_all(<span class="string">"a"</span>) <span class="comment">#查找视频播放链接</span></span><br><span class="line"></span><br><span class="line">videourls = []</span><br><span class="line"><span class="keyword">for</span> u <span class="keyword">in</span> urls:</span><br><span class="line">    videourls.append(u.get(<span class="string">"href"</span>)) <span class="comment">#由分析网页元素可知，仅获取链接部分内容</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取视频播放地址</span></span><br><span class="line">vstr = <span class="string">"http://www.yhdm.io/"</span> <span class="comment">#由分析网页元素可知，仅获取链接部分内容</span></span><br><span class="line"><span class="keyword">for</span> index, item <span class="keyword">in</span> enumerate(videourls):</span><br><span class="line">    videourls[index] = vstr + item <span class="comment">#加上前缀，获取每个视频的播放链接</span></span><br></pre></td></tr></table></figure><p>变量videourls就会成为一个储存所有集播放链接的列表，为下面获取具体的MP4链接做准备</p><h2 id="获取MP4下载地址链接"><a href="#获取MP4下载地址链接" class="headerlink" title="获取MP4下载地址链接"></a>获取MP4下载地址链接</h2><p>以其中一集为例，来获取其MP4下载地址</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re </span><br><span class="line"><span class="keyword">import</span> requests </span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup </span><br><span class="line"></span><br><span class="line">url=<span class="string">'http://www.yhdm.io/v/889-1.html'</span><span class="comment">#以其中一集为例</span></span><br><span class="line">response=requests.get(url)</span><br><span class="line">html=response.text</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">"lxml"</span>)</span><br><span class="line">textlist = soup.select(<span class="string">'#playbox '</span>)</span><br><span class="line"><span class="comment">#通过分析网页构成，用select选择器，查找id，能够准确定位，其他方法不是能准确</span></span><br><span class="line">text=str(textlist[<span class="number">0</span>])</span><br><span class="line"><span class="comment">#因为下面findall方法只能查找字符串，又因为textlist变量是只有一个元素的列表，所以转化了，我也想不到更好的方法了，目前只能这样</span></span><br><span class="line">matchObj = re.findall(<span class="string">r'(http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&amp;+]|[!*\(\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+\.mp4)'</span>,text)</span><br><span class="line">v=<span class="string">'['</span>.join(matchObj)<span class="comment">#因为findall返回形式为数组，所以剔除中括号，为下面的自动化做准备，唉，繁琐的源头在于select返回为列表</span></span><br><span class="line">print(v)<span class="comment">#v变量为MP4的字符串连接</span></span><br></pre></td></tr></table></figure><h2 id="使用wget库下载视频"><a href="#使用wget库下载视频" class="headerlink" title="使用wget库下载视频"></a>使用wget库下载视频</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> wget</span><br><span class="line"> </span><br><span class="line">DATA_URL = <span class="string">'https://1251316161.vod2.myqcloud.com/007a649dvodcq1251316161/68a349375285890806676748252/lzeAP5gEdj0A.mp4'</span>   <span class="comment">#文档的链接</span></span><br><span class="line">DATA_PATH = <span class="string">'E:/a.mp4'</span>         <span class="comment">#保存的地址和文件名</span></span><br><span class="line">wget.download(DATA_URL, out=DATA_PATH)</span><br></pre></td></tr></table></figure><h2 id="整理合成"><a href="#整理合成" class="headerlink" title="整理合成"></a>整理合成</h2><p>将以上三部分程序合成</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os </span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver </span><br><span class="line"><span class="keyword">import</span> requests </span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup </span><br><span class="line"><span class="keyword">import</span> re </span><br><span class="line"><span class="keyword">import</span> wget</span><br><span class="line"></span><br><span class="line"><span class="comment">#解析页面</span></span><br><span class="line">header = &#123;</span><br><span class="line">    <span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36"</span></span><br><span class="line">&#125; </span><br><span class="line">url = <span class="string">"http://www.yhdm.io/show/889.html"</span> </span><br><span class="line">r = requests.get(url, headers=header)</span><br><span class="line">html = r.text </span><br><span class="line"></span><br><span class="line">soup = BeautifulSoup(html, <span class="string">"html.parser"</span>)</span><br><span class="line">urls = soup.find(<span class="string">"div"</span>, class_=<span class="string">"movurl"</span>).find_all(<span class="string">"a"</span>)</span><br><span class="line"></span><br><span class="line">videourls = []</span><br><span class="line"><span class="keyword">for</span> u <span class="keyword">in</span> urls:</span><br><span class="line">    videourls.append(u.get(<span class="string">"href"</span>)) </span><br><span class="line"></span><br><span class="line">vstr = <span class="string">"http://www.yhdm.io/"</span> </span><br><span class="line"><span class="keyword">for</span> index, item <span class="keyword">in</span> enumerate(videourls):</span><br><span class="line">    videourls[index] = vstr + item </span><br><span class="line"><span class="comment">#获取MP4下载地址链接</span></span><br><span class="line">u=<span class="number">0</span></span><br><span class="line">videos = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> videourls:</span><br><span class="line">    response=requests.get(videourls[u])</span><br><span class="line">    u=u+<span class="number">1</span></span><br><span class="line">    response.encoding=<span class="string">'utf-8'</span></span><br><span class="line">    html=response.text</span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">"html.parser"</span>)</span><br><span class="line">    textlist = soup.select(<span class="string">'#playbox'</span>)</span><br><span class="line">    text=str(textlist[<span class="number">0</span>])</span><br><span class="line">    matchObj= re.findall(<span class="string">r'(http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&amp;+]|[!*\(\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+\.mp4)'</span>,text)</span><br><span class="line">    v=<span class="string">'['</span>.join(matchObj)</span><br><span class="line">    videos.append(v)</span><br><span class="line"><span class="comment">#使用wget库实现下载</span></span><br><span class="line">j=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> videourls:</span><br><span class="line">    DATA_URL = str(videos[j])</span><br><span class="line">    DATA_PATH = <span class="string">'F:/无限斯特拉托斯'</span>  <span class="comment">#保存的视频地址</span></span><br><span class="line">    file_name = str(j+<span class="number">1</span>) + <span class="string">'.mp4'</span><span class="comment">#文件名</span></span><br><span class="line">    j=j+<span class="number">1</span><span class="comment">#循环</span></span><br><span class="line">    wget.download(DATA_URL, out=DATA_PATH+file_name)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多级分类</title>
      <link href="posts/a54e038d/"/>
      <url>posts/a54e038d/</url>
      
        <content type="html"><![CDATA[<h1 id="NexT主题的多级分类"><a href="#NexT主题的多级分类" class="headerlink" title="NexT主题的多级分类"></a>NexT主题的多级分类</h1><p>并列分类：</p><blockquote><p>categories:<br>- [C++学习]<br>- [基本语法]</p></blockquote><p>子分类：</p><blockquote><p>categories:<br>- [C++学习, 基本语法] </p></blockquote><p>一篇文章的多级标题就用markdown实现</p><blockquote><p># 一级标题<br>## 二级标题<br>### 三级标题<br>#### 四级标题</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Hexo主题 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>ssh密钥</title>
      <link href="posts/8a95400e/"/>
      <url>posts/8a95400e/</url>
      
        <content type="html"><![CDATA[<p><font color=red>_config.yml</font>文件中，<font color=red>deploy</font>属性的不同表达</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;xswl2333&#x2F;xswl2333.github.io.git</span><br><span class="line">git@github.com:xswl2333&#x2F;xswl2333.github.io.git</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo主题 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Spawn failed问题</title>
      <link href="posts/9e2642a5/"/>
      <url>posts/9e2642a5/</url>
      
        <content type="html"><![CDATA[<p>首先出现了以下错误</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fatal: unable to access &#39;https:&#x2F;&#x2F;github.com&#x2F;.......&#39;: OpenSSL SSL_read: Connection was reset, errno 10054</span><br></pre></td></tr></table></figure><p>产生原因：一般是这是因为服务器的SSL证书没有经过第三方机构的签署，所以才报错<br>参考网上方法，解除ssl验证后，再次git即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.sslVerify &quot;false&quot;</span><br></pre></td></tr></table></figure><p>也可能是代理端口出现问题，当开启clash全局代理时，应关闭win10的代理。<br>也可以启动自己的代理端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.proxy http:&#x2F;&#x2F;127.0.0.1:xxxx</span><br><span class="line">git config --global https.proxy https:&#x2F;&#x2F;127.0.0.1:xxxx</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo主题 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>解决github.io无法访问的问题</title>
      <link href="posts/25a5559d/"/>
      <url>posts/25a5559d/</url>
      
        <content type="html"><![CDATA[<h3 id="改DNS"><a href="#改DNS" class="headerlink" title="改DNS"></a>改DNS</h3><p>改DNS为208.67.222.222,之后时断时续<br>改DNS为180.76.76.76,之后可以访问</p><h3 id="修改host文件"><a href="#修改host文件" class="headerlink" title="修改host文件"></a>修改host文件</h3><p>在该<a href="http://tool.chinaz.com/dns" target="_blank" rel="noopener">网站</a>查询后，修改host文件，可以稳定访问</p>]]></content>
      
      
      <categories>
          
          <category> Hexo主题 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>vector容器</title>
      <link href="posts/4ac124aa/"/>
      <url>posts/4ac124aa/</url>
      
        <content type="html"><![CDATA[<h2 id="vector构造函数"><a href="#vector构造函数" class="headerlink" title="vector构造函数"></a>vector构造函数</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span>  <span class="title">printVector</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp;v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;::iterator it = v.<span class="built_in">begin</span>();it!= v.<span class="built_in">end</span>() ;it++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; *it &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//容器构造</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;v1;<span class="comment">//默认无参构造</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">10</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">v1.push_back(i);</span><br><span class="line">&#125;</span><br><span class="line">printVector(v1);</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v3(<span class="number">10</span>, <span class="number">100</span>);</span><br><span class="line">printVector(v3);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test01();</span><br><span class="line"></span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="vector赋值"><a href="#vector赋值" class="headerlink" title="vector赋值"></a>vector赋值</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//赋值</span></span><br><span class="line"><span class="function"><span class="keyword">void</span>  <span class="title">printVecto</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp;v)</span><span class="comment">//不能和同名</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;::iterator it = v.<span class="built_in">begin</span>();it != v.<span class="built_in">end</span>();it++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; *it &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span>  <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v1; <span class="comment">//无参构造</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">v1.push_back(i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;v2;</span><br><span class="line">v2 = v1;</span><br><span class="line">printVecto(v2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test02();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="vector容量与大小"><a href="#vector容量与大小" class="headerlink" title="vector容量与大小"></a>vector容量与大小</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//容器容量</span></span><br><span class="line"><span class="function"><span class="keyword">void</span>  <span class="title">printV</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp;v)</span><span class="comment">//不能和同名</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;::iterator it = v.<span class="built_in">begin</span>();it != v.<span class="built_in">end</span>();it++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; *it &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span>  <span class="title">test03</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v1; <span class="comment">//无参构造</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">v1.push_back(i);</span><br><span class="line">&#125;</span><br><span class="line">printV(v1);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (v1.empty())<span class="comment">//为真代表为空</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"为空"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"不为空"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"容量为"</span> &lt;&lt; v1.capacity() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//v1.resize(15);//重新指定大小 ，若指定的更大，默认用0填充新位置，可以利用重载版本替换默认填充</span></span><br><span class="line"><span class="comment">//01234567890000</span></span><br><span class="line">v1.resize(<span class="number">15</span>, <span class="number">45</span>);<span class="comment">//重载改变默认填充值,01234567894545454545</span></span><br><span class="line"><span class="comment">//重新指定大小 ，若指定的更小，超出部分元素被删除</span></span><br><span class="line">printV(v1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="vector插入与删除"><a href="#vector插入与删除" class="headerlink" title="vector插入与删除"></a>vector插入与删除</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//插入删除</span></span><br><span class="line"><span class="function"><span class="keyword">void</span>  <span class="title">printVec</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp;v)</span><span class="comment">//不能和同名</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;::iterator it = v.<span class="built_in">begin</span>();it != v.<span class="built_in">end</span>();it++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; *it &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span>  <span class="title">test04</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v1; <span class="comment">//尾插</span></span><br><span class="line">v1.push_back(<span class="number">1</span>);</span><br><span class="line">v1.push_back(<span class="number">2</span>);</span><br><span class="line">v1.push_back(<span class="number">3</span>);</span><br><span class="line">v1.push_back(<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line">printVec(v1);</span><br><span class="line">v1.pop_back();<span class="comment">//尾删</span></span><br><span class="line">printVec(v1);</span><br><span class="line">v1.insert(v1.<span class="built_in">begin</span>()+<span class="number">2</span>, <span class="number">32</span>);<span class="comment">//插入 1 2 32 3</span></span><br><span class="line">printVec(v1);</span><br><span class="line">v1.insert(v1.<span class="built_in">begin</span>(),<span class="number">2</span>,<span class="number">32</span>);<span class="comment">//32 32 1 2 32 3</span></span><br><span class="line">printVec(v1);</span><br><span class="line">v1.erase(v1.<span class="built_in">begin</span>());<span class="comment">//删除第一位</span></span><br><span class="line">printVec(v1);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="vector数据存取"><a href="#vector数据存取" class="headerlink" title="vector数据存取"></a>vector数据存取</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span>  <span class="title">test05</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v1; <span class="comment">//无参构造</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">v1.push_back(i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; v1.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; v1[i] &lt;&lt; <span class="string">" "</span>;<span class="comment">//[]访问数组</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; v1.at(i) &lt;&lt; <span class="string">" "</span>;<span class="comment">//at访问数组</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"第一个元素为"</span> &lt;&lt; v1.front();</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"最后一个元素为"</span> &lt;&lt; v1.back();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="vector容器交换"><a href="#vector容器交换" class="headerlink" title="vector容器交换"></a>vector容器交换</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span>  <span class="title">test06</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v1; <span class="comment">//无参构造</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">v1.push_back(i);</span><br><span class="line">&#125;</span><br><span class="line">prin(v1);</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v2; <span class="comment">//无参构造</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">10</span>; i &gt; <span class="number">0</span>; i--)</span><br><span class="line">&#123;</span><br><span class="line">v2.push_back(i);</span><br><span class="line">&#125;</span><br><span class="line">prin(v2);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"交换后"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">v1.swap(v2);<span class="comment">//交换</span></span><br><span class="line">prin(v1);</span><br><span class="line">prin(v2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//利用swap收缩内存空间</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test07</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v3;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">300</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">v3.push_back(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"容量"</span> &lt;&lt; v3.capacity() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"大小"</span> &lt;&lt; v3.<span class="built_in">size</span>() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">v3.resize(<span class="number">3</span>);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"容量"</span> &lt;&lt; v3.capacity() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"大小"</span> &lt;&lt; v3.<span class="built_in">size</span>() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//利用swap收缩空间</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;(v3).swap(v3);</span><br><span class="line"><span class="comment">//vector&lt;int&gt;(v3)  匿名对象，系统自动回收</span></span><br><span class="line"><span class="comment">//swap(v3)   容器交换</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"容量"</span> &lt;&lt; v3.capacity() &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//空间和容量都为3</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"大小"</span> &lt;&lt; v3.<span class="built_in">size</span>() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="vector预留空间"><a href="#vector预留空间" class="headerlink" title="vector预留空间"></a>vector预留空间</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//vector预留空间</span></span><br><span class="line"><span class="comment">//当vector数据量较大时，不断插入数据时，需要多次扩展内存空间，所以可以一次提前预留空间</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test08</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v1;</span><br><span class="line"></span><br><span class="line">v1.reserve(<span class="number">10000</span>);<span class="comment">//预留空间</span></span><br><span class="line"><span class="keyword">int</span> num = <span class="number">0</span>;<span class="comment">//统计开辟次数</span></span><br><span class="line"><span class="keyword">int</span>* p = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">10000</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">v1.push_back(i);</span><br><span class="line"><span class="keyword">if</span> (p != &amp;v1[<span class="number">0</span>])</span><br><span class="line">&#123;</span><br><span class="line">p = &amp;v1[<span class="number">0</span>];</span><br><span class="line">num++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"扩展次数"</span> &lt;&lt; num&lt;&lt;<span class="built_in">endl</span>;<span class="comment">//24,reserve之后为1</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++基础入门 </category>
          
          <category> 提高语法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>前置递增和后置递增的区别</title>
      <link href="posts/42d4cc5b/"/>
      <url>posts/42d4cc5b/</url>
      
        <content type="html"><![CDATA[<h2 id="前置递增和后置递增的区别"><a href="#前置递增和后置递增的区别" class="headerlink" title="前置递增和后置递增的区别"></a>前置递增和后置递增的区别</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> b1;</span><br><span class="line"><span class="keyword">int</span> b2;</span><br><span class="line">b1= a++ * <span class="number">10</span>;<span class="comment">/*后置递增，先计算表达式后加1，b1=100,a=11*/</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; b1&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">b2 = ++a * <span class="number">10</span>;<span class="comment">/*前置递增，先加1，后进行表达式计算，a=12,b2=120*/</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; b2 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++基础入门 </category>
          
          <category> 基本语法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>git merge遇到的问题</title>
      <link href="posts/6bf4b235/"/>
      <url>posts/6bf4b235/</url>
      
        <content type="html"><![CDATA[<p>git merge时显示Already up to date.<br>原因在于merge之前，该分支的代码不是最新代码，<br>需要git pull,然后合并</p>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>俄罗斯方块</title>
      <link href="posts/2e3de4da/"/>
      <url>posts/2e3de4da/</url>
      
        <content type="html"><![CDATA[<h2 id="生成小方块儿"><a href="#生成小方块儿" class="headerlink" title="生成小方块儿"></a>生成小方块儿</h2><p><img src="/images/Easyx/%E5%B0%8F%E6%B8%B8%E6%88%8F/%E4%BF%84%E7%BD%97%E6%96%AF%E6%96%B9%E5%9D%97/%E5%8D%95%E4%B8%AA%E6%96%B9%E5%9D%97.png" alt=""></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;graphics.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"tetris.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> G_SIZE = <span class="number">20</span>;<span class="comment">//方块的边的像素点</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> WIDTH = <span class="number">10</span>;<span class="comment">//宽</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> HEIGHT = <span class="number">22</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">drawUnit</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, COLORREF co)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//计算单元方块的位置</span></span><br><span class="line"><span class="keyword">int</span> left = x * G_SIZE;<span class="comment">//</span></span><br><span class="line"><span class="keyword">int</span> right = (x + <span class="number">1</span>) * G_SIZE;</span><br><span class="line"><span class="keyword">int</span> top = (HEIGHT - y - <span class="number">1</span>) * G_SIZE;</span><br><span class="line"><span class="keyword">int</span> bottom = (HEIGHT - y) * G_SIZE;</span><br><span class="line">setfillcolor(co);<span class="comment">//设置填充颜色co</span></span><br><span class="line">setlinecolor(LIGHTGRAY);<span class="comment">//高灰色</span></span><br><span class="line">fillrectangle(left, top, right, bottom);<span class="comment">//用于画填充矩形（有边框)</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">initgraph(<span class="number">640</span>, <span class="number">480</span>);</span><br><span class="line">drawUnit(<span class="number">10</span>, <span class="number">10</span>, RED);</span><br><span class="line">_getch();<span class="comment">//打断窗口</span></span><br><span class="line">closegraph();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="将小方块儿拼接成俄罗斯方块"><a href="#将小方块儿拼接成俄罗斯方块" class="headerlink" title="将小方块儿拼接成俄罗斯方块"></a>将小方块儿拼接成俄罗斯方块</h2><p><img src="/images/Easyx/%E5%B0%8F%E6%B8%B8%E6%88%8F/%E4%BF%84%E7%BD%97%E6%96%AF%E6%96%B9%E5%9D%97/%E7%BB%84%E5%90%88%E6%96%B9%E5%9D%97.png" alt=""><br>定义头文件tetris.h定义函数名和结构体</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;easyx.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">BlockInfo</span> &#123;</span></span><br><span class="line"><span class="keyword">char</span> id; <span class="comment">//第几个方块，方块的形态</span></span><br><span class="line"><span class="keyword">char</span> style; <span class="comment">//表示是方块中旋转状态</span></span><br><span class="line"><span class="keyword">char</span> x, y; <span class="comment">//当前格子的位置</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Block</span> &#123;</span></span><br><span class="line"><span class="keyword">short</span> dir[<span class="number">4</span>];</span><br><span class="line">COLORREF color;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>主函数main.cpp</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;graphics.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"tetris.h"</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> G_SIZE = <span class="number">20</span>;<span class="comment">//方块的边的像素点</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> WIDTH = <span class="number">10</span>;<span class="comment">//宽</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> HEIGHT = <span class="number">22</span>;</span><br><span class="line"><span class="comment">//结构体数组，存放7种方块儿</span></span><br><span class="line">Block g_Blocks[<span class="number">7</span>] = &#123;</span><br><span class="line"></span><br><span class="line">&#123; <span class="number">0x0F00</span>, <span class="number">0x4444</span>, <span class="number">0x0F00</span>, <span class="number">0x4444</span>, RED &#125;,<span class="comment">//I</span></span><br><span class="line"><span class="comment">//四种状态，16进制,,16个位置,所以遍历</span></span><br><span class="line"><span class="comment">/*0x0f00</span></span><br><span class="line"><span class="comment">0000</span></span><br><span class="line"><span class="comment">1111 </span></span><br><span class="line"><span class="comment">0000</span></span><br><span class="line"><span class="comment">0000*/</span></span><br><span class="line">&#123; <span class="number">0x0660</span>, <span class="number">0x0660</span>, <span class="number">0x0660</span>, <span class="number">0x0660</span>, YELLOW &#125;,<span class="comment">//田</span></span><br><span class="line">&#123; <span class="number">0x4460</span>, <span class="number">0x02E0</span>, <span class="number">0x0622</span>, <span class="number">0x7400</span>, BLUE &#125;,<span class="comment">//L</span></span><br><span class="line">&#123; <span class="number">0x2260</span>, <span class="number">0x0E20</span>, <span class="number">0x0644</span>, <span class="number">0x4700</span>, RED &#125;,<span class="comment">//反L</span></span><br><span class="line">&#123; <span class="number">0xc600</span>, <span class="number">0x2640</span>, <span class="number">0xc600</span>, <span class="number">0x2640</span>, BLUE &#125;,<span class="comment">//Z</span></span><br><span class="line">&#123; <span class="number">0x3600</span>, <span class="number">0x4620</span>, <span class="number">0x3600</span>, <span class="number">0x4620</span>, YELLOW &#125;,<span class="comment">//反z</span></span><br><span class="line">&#123; <span class="number">0x4E00</span>, <span class="number">0X4C40</span>, <span class="number">0xE400</span>, <span class="number">0X4640</span>, BLUE &#125;<span class="comment">//T</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">drawUnit</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, COLORREF co)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//计算单元方块的位置</span></span><br><span class="line"><span class="keyword">int</span> left = x * G_SIZE;<span class="comment">//</span></span><br><span class="line"><span class="keyword">int</span> right = (x + <span class="number">1</span>) * G_SIZE;</span><br><span class="line"><span class="keyword">int</span> top = (HEIGHT - y - <span class="number">1</span>) * G_SIZE;</span><br><span class="line"><span class="keyword">int</span> bottom = (HEIGHT - y) * G_SIZE;</span><br><span class="line">setfillcolor(co);<span class="comment">//设置填充颜色co</span></span><br><span class="line">setlinecolor(LIGHTGRAY);<span class="comment">//高灰色</span></span><br><span class="line">fillrectangle(left, top, right, bottom);<span class="comment">//用于画填充矩形（有边框)</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//绘制方块，blockinfo结构体id配block[]，style配dir,赋值转化</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">drawBlock</span><span class="params">(BlockInfo _block)</span> </span>&#123;</span><br><span class="line"><span class="keyword">short</span> b = g_Blocks[_block.id].dir[_block.style];<span class="comment">///提取方块形态</span></span><br><span class="line"><span class="comment">////画 16个格子中的每一个，前面16进制</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">16</span>; i++, b &lt;&lt;= <span class="number">1</span>) &#123;<span class="comment">//b左移一位</span></span><br><span class="line"><span class="keyword">if</span> (b &amp; <span class="number">0x8000</span>) &#123;</span><br><span class="line"><span class="comment">//不断匹配第一位，锁定1的位置，取出x,y</span></span><br><span class="line"><span class="comment">//0x8000</span></span><br><span class="line"><span class="comment">//1000</span></span><br><span class="line"><span class="comment">//0000</span></span><br><span class="line"><span class="comment">//0000</span></span><br><span class="line"><span class="comment">//0000</span></span><br><span class="line"><span class="keyword">int</span> x = _block.x + i % <span class="number">4</span>;<span class="comment">//方块大体位置+具体块的位置</span></span><br><span class="line"><span class="keyword">int</span> y = _block.y - i / <span class="number">4</span>;</span><br><span class="line"><span class="keyword">if</span> (y &lt; HEIGHT) &#123;</span><br><span class="line"><span class="comment">//画一个小格子</span></span><br><span class="line">drawUnit(x, y, g_Blocks[_block.id].color);<span class="comment">//位置和颜色</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">initgraph(<span class="number">640</span>, <span class="number">480</span>);</span><br><span class="line">setbkmode(TRANSPARENT);</span><br><span class="line">BlockInfo one;</span><br><span class="line">one.id = <span class="number">0</span>;</span><br><span class="line">one.style = <span class="number">1</span>;</span><br><span class="line">one.x = <span class="number">4</span>;</span><br><span class="line">one.y = <span class="number">4</span>;</span><br><span class="line">drawBlock(one);</span><br><span class="line">_getch();<span class="comment">//打断窗口</span></span><br><span class="line">closegraph();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="绘制主游戏区域和观察nextblock的窗口"><a href="#绘制主游戏区域和观察nextblock的窗口" class="headerlink" title="绘制主游戏区域和观察nextblock的窗口"></a>绘制主游戏区域和观察nextblock的窗口</h2><p><img src="/images/Easyx/%E5%B0%8F%E6%B8%B8%E6%88%8F/%E4%BF%84%E7%BD%97%E6%96%AF%E6%96%B9%E5%9D%97/%E7%BB%98%E5%88%B6%E6%B8%B8%E6%88%8F%E5%8C%BA%E5%9F%9F.png" alt=""><br>主函数main.cpp增加主界面区域</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;graphics.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"tetris.h"</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> G_SIZE = <span class="number">20</span>;<span class="comment">//方块的边的像素点</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> WIDTH = <span class="number">10</span>;<span class="comment">//宽</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> HEIGHT = <span class="number">22</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">short</span> g_World[WIDTH][HEIGHT] = &#123; <span class="number">0</span> &#125;;<span class="comment">//创建二维0矩阵</span></span><br><span class="line"></span><br><span class="line">BlockInfo curB;<span class="comment">/*当前格子*/</span></span><br><span class="line">BlockInfo nextB;<span class="comment">/*下一个格子*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//结构体数组，存放7种方块儿</span></span><br><span class="line">Block g_Blocks[<span class="number">7</span>] = &#123;</span><br><span class="line"></span><br><span class="line">&#123; <span class="number">0x0F00</span>, <span class="number">0x4444</span>, <span class="number">0x0F00</span>, <span class="number">0x4444</span>, RED &#125;,<span class="comment">//I</span></span><br><span class="line"><span class="comment">//四种状态，16进制,,16个位置,所以遍历</span></span><br><span class="line"><span class="comment">/*0x0f00</span></span><br><span class="line"><span class="comment">0000</span></span><br><span class="line"><span class="comment">1111 </span></span><br><span class="line"><span class="comment">0000</span></span><br><span class="line"><span class="comment">0000*/</span></span><br><span class="line">&#123; <span class="number">0x0660</span>, <span class="number">0x0660</span>, <span class="number">0x0660</span>, <span class="number">0x0660</span>, YELLOW &#125;,<span class="comment">//田</span></span><br><span class="line">&#123; <span class="number">0x4460</span>, <span class="number">0x02E0</span>, <span class="number">0x0622</span>, <span class="number">0x7400</span>, BLUE &#125;,<span class="comment">//L</span></span><br><span class="line">&#123; <span class="number">0x2260</span>, <span class="number">0x0E20</span>, <span class="number">0x0644</span>, <span class="number">0x4700</span>, RED &#125;,<span class="comment">//反L</span></span><br><span class="line">&#123; <span class="number">0xc600</span>, <span class="number">0x2640</span>, <span class="number">0xc600</span>, <span class="number">0x2640</span>, BLUE &#125;,<span class="comment">//Z</span></span><br><span class="line">&#123; <span class="number">0x3600</span>, <span class="number">0x4620</span>, <span class="number">0x3600</span>, <span class="number">0x4620</span>, YELLOW &#125;,<span class="comment">//反z</span></span><br><span class="line">&#123; <span class="number">0x4E00</span>, <span class="number">0X4C40</span>, <span class="number">0xE400</span>, <span class="number">0X4640</span>, BLUE &#125;<span class="comment">//T</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">drawUnit</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, COLORREF co)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//计算单元方块的位置</span></span><br><span class="line"><span class="keyword">int</span> left = x * G_SIZE;<span class="comment">//</span></span><br><span class="line"><span class="keyword">int</span> right = (x + <span class="number">1</span>) * G_SIZE;</span><br><span class="line"><span class="keyword">int</span> top = (HEIGHT - y - <span class="number">1</span>) * G_SIZE;</span><br><span class="line"><span class="keyword">int</span> bottom = (HEIGHT - y) * G_SIZE;</span><br><span class="line">setfillcolor(co);<span class="comment">//设置填充颜色co</span></span><br><span class="line">setlinecolor(LIGHTGRAY);<span class="comment">//高灰色</span></span><br><span class="line">fillrectangle(left, top, right, bottom);<span class="comment">//用于画填充矩形（有边框)</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//绘制方块，blockinfo结构体id配block[]，style配dir,赋值转化</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">drawBlock</span><span class="params">(BlockInfo _block)</span> </span>&#123;</span><br><span class="line"><span class="keyword">short</span> b = g_Blocks[_block.id].dir[_block.style];<span class="comment">///提取方块形态</span></span><br><span class="line"><span class="comment">////画 16个格子中的每一个，前面16进制</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">16</span>; i++, b &lt;&lt;= <span class="number">1</span>) &#123;<span class="comment">//b左移一位</span></span><br><span class="line"><span class="keyword">if</span> (b &amp; <span class="number">0x8000</span>) &#123;</span><br><span class="line"><span class="comment">//不断匹配第一位，锁定1的位置，取出x,y</span></span><br><span class="line"><span class="comment">//0x8000</span></span><br><span class="line"><span class="comment">//1000</span></span><br><span class="line"><span class="comment">//0000</span></span><br><span class="line"><span class="comment">//0000</span></span><br><span class="line"><span class="comment">//0000</span></span><br><span class="line"><span class="keyword">int</span> x = _block.x + i % <span class="number">4</span>;<span class="comment">//方块大体位置+具体块的位置</span></span><br><span class="line"><span class="keyword">int</span> y = _block.y - i / <span class="number">4</span>;</span><br><span class="line"><span class="keyword">if</span> (y &lt; HEIGHT) &#123;</span><br><span class="line"><span class="comment">//画一个小格子</span></span><br><span class="line">drawUnit(x, y, g_Blocks[_block.id].color);<span class="comment">//位置和颜色</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//主界面和观察窗口绘制</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">BeginBatchDraw();</span><br><span class="line">cleardevice();</span><br><span class="line"><span class="comment">//drawGUI();</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//设置坐标原点</span></span><br><span class="line">setorigin(<span class="number">220</span>, <span class="number">20</span>);<span class="comment">//默认左上角为原点，距离左边220像素，距离上边y20像素</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//绘制游戏区域</span></span><br><span class="line">rectangle(<span class="number">0</span>, <span class="number">0</span>, WIDTH * G_SIZE, HEIGHT * G_SIZE + <span class="number">1</span>);<span class="comment">//正中灰色长方格</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//画右边矩形</span></span><br><span class="line">setfillcolor(BLACK);</span><br><span class="line">fillrectangle((WIDTH + <span class="number">1</span>) * G_SIZE, <span class="number">0</span>, (WIDTH + <span class="number">5</span>) * G_SIZE, <span class="number">4</span> * G_SIZE);</span><br><span class="line"></span><br><span class="line">drawBlock(curB);</span><br><span class="line">drawBlock(nextB);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; WIDTH; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; HEIGHT; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//因为数组设置0，否则画面中网格的深灰色</span></span><br><span class="line"><span class="keyword">if</span> (g_World[i][j])<span class="comment">//否则会显示所有方格,跳过显示，为下一步移动做准备</span></span><br><span class="line">&#123;</span><br><span class="line">drawUnit(i, j, DARKGRAY);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">EndBatchDraw();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">initgraph(<span class="number">640</span>, <span class="number">480</span>);</span><br><span class="line">setbkmode(TRANSPARENT);</span><br><span class="line"><span class="comment">//BlockInfo one;</span></span><br><span class="line"><span class="comment">//one.id = 0;</span></span><br><span class="line"><span class="comment">//one.style = 1;</span></span><br><span class="line"><span class="comment">//one.x = 7;</span></span><br><span class="line"><span class="comment">//one.y = 10;</span></span><br><span class="line"><span class="comment">//drawBlock(one);</span></span><br><span class="line">draw();</span><br><span class="line">_getch();<span class="comment">//打断窗口</span></span><br><span class="line">closegraph();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="在游戏区域中产生新的方块"><a href="#在游戏区域中产生新的方块" class="headerlink" title="在游戏区域中产生新的方块"></a>在游戏区域中产生新的方块</h2><p><img src="/images/Easyx/%E5%B0%8F%E6%B8%B8%E6%88%8F/%E4%BF%84%E7%BD%97%E6%96%AF%E6%96%B9%E5%9D%97/%E4%BA%A7%E7%94%9F%E6%96%B0%E7%9A%84%E6%96%B9%E5%9D%97.png" alt=""></p><p>tetris.h</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;easyx.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">BlockInfo</span> &#123;</span></span><br><span class="line"><span class="keyword">char</span> id; <span class="comment">//第几个方块，方块的形态</span></span><br><span class="line"><span class="keyword">char</span> style; <span class="comment">//表示是方块中旋转状态</span></span><br><span class="line"><span class="keyword">char</span> x, y; <span class="comment">//当前格子的位置</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Block</span> &#123;</span></span><br><span class="line"><span class="keyword">short</span> dir[<span class="number">4</span>];</span><br><span class="line">COLORREF color;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">drawUnit</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, COLORREF co)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//绘制整体图形</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">drawBlock</span><span class="params">(BlockInfo _block)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//绘制操作介绍</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">drawGUI</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//所有主体和操作介绍</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化游戏</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loadGame</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//开始新游戏</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initGame</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//生成新的方块儿</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">newBlock</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p>main.cpp</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;graphics.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"tetris.h"</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> G_SIZE = <span class="number">20</span>;<span class="comment">//方块的边的像素点</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> WIDTH = <span class="number">10</span>;<span class="comment">//宽</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> HEIGHT = <span class="number">22</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">short</span> g_World[WIDTH][HEIGHT] = &#123; <span class="number">0</span> &#125;;<span class="comment">//创建二维0矩阵</span></span><br><span class="line"></span><br><span class="line">BlockInfo curB;<span class="comment">/*当前格子*/</span></span><br><span class="line">BlockInfo nextB;<span class="comment">/*下一个格子*/</span></span><br><span class="line"><span class="comment">//结构体数组，存放7种方块儿</span></span><br><span class="line">Block g_Blocks[<span class="number">7</span>] = &#123;</span><br><span class="line"></span><br><span class="line">&#123; <span class="number">0x0F00</span>, <span class="number">0x4444</span>, <span class="number">0x0F00</span>, <span class="number">0x4444</span>, RED &#125;,<span class="comment">//I</span></span><br><span class="line"><span class="comment">//四种状态，16进制,,16个位置,所以遍历</span></span><br><span class="line"><span class="comment">/*0x0f00</span></span><br><span class="line"><span class="comment">0000</span></span><br><span class="line"><span class="comment">1111</span></span><br><span class="line"><span class="comment">0000</span></span><br><span class="line"><span class="comment">0000*/</span></span><br><span class="line">&#123; <span class="number">0x0660</span>, <span class="number">0x0660</span>, <span class="number">0x0660</span>, <span class="number">0x0660</span>, YELLOW &#125;,<span class="comment">//田</span></span><br><span class="line">&#123; <span class="number">0x4460</span>, <span class="number">0x02E0</span>, <span class="number">0x0622</span>, <span class="number">0x7400</span>, BLUE &#125;,<span class="comment">//L</span></span><br><span class="line">&#123; <span class="number">0x2260</span>, <span class="number">0x0E20</span>, <span class="number">0x0644</span>, <span class="number">0x4700</span>, RED &#125;,<span class="comment">//反L</span></span><br><span class="line">&#123; <span class="number">0xc600</span>, <span class="number">0x2640</span>, <span class="number">0xc600</span>, <span class="number">0x2640</span>, BLUE &#125;,<span class="comment">//Z</span></span><br><span class="line">&#123; <span class="number">0x3600</span>, <span class="number">0x4620</span>, <span class="number">0x3600</span>, <span class="number">0x4620</span>, YELLOW &#125;,<span class="comment">//反z</span></span><br><span class="line">&#123; <span class="number">0x4E00</span>, <span class="number">0X4C40</span>, <span class="number">0xE400</span>, <span class="number">0X4640</span>, BLUE &#125;<span class="comment">//T</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">drawUnit</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, COLORREF co)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//计算单元方块的位置</span></span><br><span class="line"><span class="keyword">int</span> left = x * G_SIZE;<span class="comment">//</span></span><br><span class="line"><span class="keyword">int</span> right = (x + <span class="number">1</span>) * G_SIZE;</span><br><span class="line"><span class="keyword">int</span> top = (HEIGHT - y - <span class="number">1</span>) * G_SIZE;</span><br><span class="line"><span class="keyword">int</span> bottom = (HEIGHT - y) * G_SIZE;</span><br><span class="line">setfillcolor(co);<span class="comment">//设置填充颜色co</span></span><br><span class="line">setlinecolor(LIGHTGRAY);<span class="comment">//高灰色</span></span><br><span class="line">fillrectangle(left, top, right, bottom);<span class="comment">//用于画填充矩形（有边框)</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">drawBlock</span><span class="params">(BlockInfo _block)</span> </span>&#123;</span><br><span class="line"><span class="keyword">short</span> b = g_Blocks[_block.id].dir[_block.style];<span class="comment">//提取当前方块的状态</span></span><br><span class="line"><span class="comment">//画 16个格子中的每一个，前面16进制</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">16</span>; i++, b &lt;&lt;= <span class="number">1</span>) &#123;<span class="comment">//b左移一位</span></span><br><span class="line"><span class="keyword">if</span> (b &amp; <span class="number">0x8000</span>) &#123;</span><br><span class="line"><span class="comment">//不断匹配第一位，锁定1的位置，取出x,y</span></span><br><span class="line"><span class="comment">//0x8000</span></span><br><span class="line"><span class="comment">//1000</span></span><br><span class="line"><span class="comment">//0000</span></span><br><span class="line"><span class="comment">//0000</span></span><br><span class="line"><span class="comment">//0000</span></span><br><span class="line"><span class="keyword">int</span> x = _block.x + i % <span class="number">4</span>;<span class="comment">//方块大体位置+具体块的位置</span></span><br><span class="line"><span class="keyword">int</span> y = _block.y - i / <span class="number">4</span>;</span><br><span class="line"><span class="keyword">if</span> (y &lt; HEIGHT) &#123;</span><br><span class="line"><span class="comment">//画一个小格子</span></span><br><span class="line">drawUnit(x, y, g_Blocks[_block.id].color);<span class="comment">//位置和颜色</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//绘制操作介绍面板</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">drawGUI</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">setorigin(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">settextstyle(<span class="number">14</span>, <span class="number">0</span>, _T(<span class="string">"宋体"</span>));</span><br><span class="line">outtextxy(<span class="number">20</span>, <span class="number">280</span>, _T(<span class="string">"操作说明"</span>));</span><br><span class="line">outtextxy(<span class="number">20</span>, <span class="number">300</span>, _T(<span class="string">"上： 旋转"</span>));</span><br><span class="line">outtextxy(<span class="number">20</span>, <span class="number">320</span>, _T(<span class="string">"下： 下落"</span>));</span><br><span class="line">outtextxy(<span class="number">20</span>, <span class="number">340</span>, _T(<span class="string">"左： 左移"</span>));</span><br><span class="line">outtextxy(<span class="number">20</span>, <span class="number">360</span>, _T(<span class="string">"右： 右移"</span>));</span><br><span class="line">outtextxy(<span class="number">20</span>, <span class="number">380</span>, _T(<span class="string">"空格：快速下落"</span>));</span><br><span class="line">outtextxy(<span class="number">20</span>, <span class="number">400</span>, _T(<span class="string">"esc:退出程序"</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//主界面和观察窗口绘制</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">BeginBatchDraw();</span><br><span class="line">cleardevice();</span><br><span class="line">drawGUI();</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置坐标原点</span></span><br><span class="line">setorigin(<span class="number">220</span>, <span class="number">20</span>);<span class="comment">//默认左上角为原点，距离左边220像素，距离上边y20像素</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//绘制游戏区域</span></span><br><span class="line">rectangle(<span class="number">0</span>, <span class="number">0</span>, WIDTH * G_SIZE, HEIGHT * G_SIZE + <span class="number">1</span>);<span class="comment">//正中灰色长方格</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//画右边矩形</span></span><br><span class="line">setfillcolor(BLACK);</span><br><span class="line">fillrectangle((WIDTH + <span class="number">1</span>) * G_SIZE, <span class="number">0</span>, (WIDTH + <span class="number">5</span>) * G_SIZE, <span class="number">4</span> * G_SIZE);</span><br><span class="line"></span><br><span class="line">drawBlock(curB);</span><br><span class="line">drawBlock(nextB);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; WIDTH; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; HEIGHT; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//因为数组设置0，否则画面中网格的深灰色</span></span><br><span class="line"><span class="keyword">if</span> (g_World[i][j])<span class="comment">//否则会显示所有方格,跳过显示，为下一步移动做准备</span></span><br><span class="line">&#123;</span><br><span class="line">drawUnit(i, j, DARKGRAY);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">EndBatchDraw();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loadGame</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//初始化窗口</span></span><br><span class="line">initgraph(<span class="number">640</span>, <span class="number">480</span>);</span><br><span class="line">setbkmode(TRANSPARENT);<span class="comment">//设置背景颜色为透明</span></span><br><span class="line">srand((<span class="keyword">unsigned</span>)time(<span class="literal">NULL</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initGame</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">setfillcolor(BLACK);<span class="comment">//填充黑色  清空游戏区</span></span><br><span class="line"><span class="comment">//memset函数:0为填充值，后者参数为填充字节数</span></span><br><span class="line"><span class="built_in">memset</span>(g_World, <span class="number">0</span>, <span class="keyword">sizeof</span>(g_World));  <span class="comment">//初始化区域把值设置为0</span></span><br><span class="line">nextB.x = WIDTH + <span class="number">1</span>;</span><br><span class="line">nextB.y = HEIGHT - <span class="number">1</span>;</span><br><span class="line"><span class="comment">//nextB.y = HEIGHT ;//会影响下一个的方块的演示窗格，99行代码</span></span><br><span class="line">newBlock();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//生成新的方块儿</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">newBlock</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">curB = nextB;</span><br><span class="line">nextB.style = rand() % <span class="number">4</span>;<span class="comment">//四种方式</span></span><br><span class="line">nextB.id = rand() % <span class="number">7</span>;<span class="comment">//余7匹配7种方块形态</span></span><br><span class="line"></span><br><span class="line">curB.x = WIDTH / <span class="number">2</span> - <span class="number">1</span>;<span class="comment">//中间位置</span></span><br><span class="line">curB.y = HEIGHT;</span><br><span class="line"></span><br><span class="line">WORD c = g_Blocks[curB.id].dir[curB.style];<span class="comment">//当前方块儿id去匹配数组,style匹配旋转状态</span></span><br><span class="line"><span class="keyword">while</span> ((c &amp; <span class="number">0x000F</span>) == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="comment">/*0x000f</span></span><br><span class="line"><span class="comment">0000</span></span><br><span class="line"><span class="comment">0000</span></span><br><span class="line"><span class="comment">0000</span></span><br><span class="line"><span class="comment">1111</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">curB.y--;<span class="comment">//当匹配到全在上方时的形态，下降一格？？</span></span><br><span class="line">c &gt;&gt;= <span class="number">4</span>;<span class="comment">//右移4位</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">loadGame();</span><br><span class="line">initGame();</span><br><span class="line"></span><br><span class="line"><span class="comment">//BlockInfo one;</span></span><br><span class="line"><span class="comment">//one.id = 0;</span></span><br><span class="line"><span class="comment">//one.style = 1;</span></span><br><span class="line"><span class="comment">//one.x = 7;</span></span><br><span class="line"><span class="comment">//one.y = 10;</span></span><br><span class="line"><span class="comment">//drawBlock(one);</span></span><br><span class="line">draw();</span><br><span class="line">newBlock();</span><br><span class="line">_getch();<span class="comment">//打断窗口</span></span><br><span class="line">closegraph();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="控制方块移动"><a href="#控制方块移动" class="headerlink" title="控制方块移动"></a>控制方块移动</h2><p><img src="/images/Easyx/%E5%B0%8F%E6%B8%B8%E6%88%8F/%E4%BF%84%E7%BD%97%E6%96%AF%E6%96%B9%E5%9D%97/%E7%A7%BB%E5%8A%A8%E6%96%B9%E5%9D%97.png" alt=""><br>tetris.h  add CheckMove() and OnMove()<br>main.cpp</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;graphics.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"tetris.h"</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> G_SIZE = <span class="number">20</span>;<span class="comment">//方块的边的像素点</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> WIDTH = <span class="number">10</span>;<span class="comment">//宽</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> HEIGHT = <span class="number">22</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">short</span> g_World[WIDTH][HEIGHT] = &#123; <span class="number">0</span> &#125;;<span class="comment">//创建二维0矩阵</span></span><br><span class="line"></span><br><span class="line">BlockInfo curB;<span class="comment">/*当前格子*/</span></span><br><span class="line">BlockInfo nextB;<span class="comment">/*下一个格子*/</span></span><br><span class="line"><span class="comment">//结构体数组，存放7种方块儿</span></span><br><span class="line">Block g_Blocks[<span class="number">7</span>] = &#123;</span><br><span class="line"></span><br><span class="line">&#123; <span class="number">0x0F00</span>, <span class="number">0x4444</span>, <span class="number">0x0F00</span>, <span class="number">0x4444</span>, RED &#125;,<span class="comment">//I</span></span><br><span class="line"><span class="comment">//四种状态，16进制,,16个位置,所以遍历</span></span><br><span class="line"><span class="comment">/*0x0f00</span></span><br><span class="line"><span class="comment">0000</span></span><br><span class="line"><span class="comment">1111</span></span><br><span class="line"><span class="comment">0000</span></span><br><span class="line"><span class="comment">0000*/</span></span><br><span class="line">&#123; <span class="number">0x0660</span>, <span class="number">0x0660</span>, <span class="number">0x0660</span>, <span class="number">0x0660</span>, YELLOW &#125;,<span class="comment">//田</span></span><br><span class="line">&#123; <span class="number">0x4460</span>, <span class="number">0x02E0</span>, <span class="number">0x0622</span>, <span class="number">0x7400</span>, BLUE &#125;,<span class="comment">//L</span></span><br><span class="line">&#123; <span class="number">0x2260</span>, <span class="number">0x0E20</span>, <span class="number">0x0644</span>, <span class="number">0x4700</span>, RED &#125;,<span class="comment">//反L</span></span><br><span class="line">&#123; <span class="number">0xc600</span>, <span class="number">0x2640</span>, <span class="number">0xc600</span>, <span class="number">0x2640</span>, BLUE &#125;,<span class="comment">//Z</span></span><br><span class="line">&#123; <span class="number">0x3600</span>, <span class="number">0x4620</span>, <span class="number">0x3600</span>, <span class="number">0x4620</span>, YELLOW &#125;,<span class="comment">//反z</span></span><br><span class="line">&#123; <span class="number">0x4E00</span>, <span class="number">0X4C40</span>, <span class="number">0xE400</span>, <span class="number">0X4640</span>, BLUE &#125;<span class="comment">//T</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">drawUnit</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, COLORREF co)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//计算单元方块的位置</span></span><br><span class="line"><span class="keyword">int</span> left = x * G_SIZE;<span class="comment">//</span></span><br><span class="line"><span class="keyword">int</span> right = (x + <span class="number">1</span>) * G_SIZE;</span><br><span class="line"><span class="keyword">int</span> top = (HEIGHT - y - <span class="number">1</span>) * G_SIZE;</span><br><span class="line"><span class="keyword">int</span> bottom = (HEIGHT - y) * G_SIZE;</span><br><span class="line">setfillcolor(co);<span class="comment">//设置填充颜色co</span></span><br><span class="line">setlinecolor(LIGHTGRAY);<span class="comment">//高灰色</span></span><br><span class="line">fillrectangle(left, top, right, bottom);<span class="comment">//用于画填充矩形（有边框)</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">drawBlock</span><span class="params">(BlockInfo _block)</span> </span>&#123;</span><br><span class="line"><span class="keyword">short</span> b = g_Blocks[_block.id].dir[_block.style];<span class="comment">//提取当前方块的状态</span></span><br><span class="line"><span class="comment">//画 16个格子中的每一个，前面16进制</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">16</span>; i++, b &lt;&lt;= <span class="number">1</span>) &#123;<span class="comment">//b左移一位</span></span><br><span class="line"><span class="keyword">if</span> (b &amp; <span class="number">0x8000</span>) &#123;</span><br><span class="line"><span class="comment">//不断匹配第一位，锁定1的位置，取出x,y</span></span><br><span class="line"><span class="comment">//0x8000</span></span><br><span class="line"><span class="comment">//1000</span></span><br><span class="line"><span class="comment">//0000</span></span><br><span class="line"><span class="comment">//0000</span></span><br><span class="line"><span class="comment">//0000</span></span><br><span class="line"><span class="keyword">int</span> x = _block.x + i % <span class="number">4</span>;<span class="comment">//方块大体位置+具体块的位置</span></span><br><span class="line"><span class="keyword">int</span> y = _block.y - i / <span class="number">4</span>;</span><br><span class="line"><span class="keyword">if</span> (y &lt; HEIGHT) &#123;</span><br><span class="line"><span class="comment">//画一个小格子</span></span><br><span class="line">drawUnit(x, y, g_Blocks[_block.id].color);<span class="comment">//位置和颜色</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//绘制操作介绍面板</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">drawGUI</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">setorigin(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">settextstyle(<span class="number">14</span>, <span class="number">0</span>, _T(<span class="string">"宋体"</span>));</span><br><span class="line">outtextxy(<span class="number">20</span>, <span class="number">280</span>, _T(<span class="string">"操作说明"</span>));</span><br><span class="line">outtextxy(<span class="number">20</span>, <span class="number">300</span>, _T(<span class="string">"上： 旋转"</span>));</span><br><span class="line">outtextxy(<span class="number">20</span>, <span class="number">320</span>, _T(<span class="string">"下： 下落"</span>));</span><br><span class="line">outtextxy(<span class="number">20</span>, <span class="number">340</span>, _T(<span class="string">"左： 左移"</span>));</span><br><span class="line">outtextxy(<span class="number">20</span>, <span class="number">360</span>, _T(<span class="string">"右： 右移"</span>));</span><br><span class="line">outtextxy(<span class="number">20</span>, <span class="number">380</span>, _T(<span class="string">"空格：快速下落"</span>));</span><br><span class="line">outtextxy(<span class="number">20</span>, <span class="number">400</span>, _T(<span class="string">"esc:退出程序"</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//主界面和观察窗口绘制</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">BeginBatchDraw();</span><br><span class="line">cleardevice();</span><br><span class="line">drawGUI();</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置坐标原点</span></span><br><span class="line">setorigin(<span class="number">220</span>, <span class="number">20</span>);<span class="comment">//默认左上角为原点，距离左边220像素，距离上边y20像素</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//绘制游戏区域</span></span><br><span class="line">rectangle(<span class="number">0</span>, <span class="number">0</span>, WIDTH * G_SIZE, HEIGHT * G_SIZE + <span class="number">1</span>);<span class="comment">//正中灰色长方格</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//画右边矩形</span></span><br><span class="line">setfillcolor(BLACK);</span><br><span class="line">fillrectangle((WIDTH + <span class="number">1</span>) * G_SIZE, <span class="number">0</span>, (WIDTH + <span class="number">5</span>) * G_SIZE, <span class="number">4</span> * G_SIZE);</span><br><span class="line"></span><br><span class="line">drawBlock(curB);</span><br><span class="line">drawBlock(nextB);<span class="comment">//先画格子，后画整体区域</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; WIDTH; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; HEIGHT; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//因为数组设置0，否则画面中网格的深灰色</span></span><br><span class="line"><span class="keyword">if</span> (g_World[i][j])<span class="comment">//否则会显示所有方格,跳过显示，为下一步移动做准备</span></span><br><span class="line">&#123;</span><br><span class="line">drawUnit(i, j, DARKGRAY);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">EndBatchDraw();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loadGame</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//初始化窗口</span></span><br><span class="line">initgraph(<span class="number">640</span>, <span class="number">480</span>);</span><br><span class="line">setbkmode(TRANSPARENT);<span class="comment">//设置背景颜色为透明</span></span><br><span class="line">srand((<span class="keyword">unsigned</span>)time(<span class="literal">NULL</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initGame</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">setfillcolor(BLACK);<span class="comment">//填充黑色  清空游戏区</span></span><br><span class="line"><span class="comment">//memset函数:0为填充值，后者参数为填充字节数</span></span><br><span class="line"><span class="built_in">memset</span>(g_World, <span class="number">0</span>, <span class="keyword">sizeof</span>(g_World));  <span class="comment">//初始化区域把值设置为0</span></span><br><span class="line">nextB.x = WIDTH + <span class="number">1</span>;</span><br><span class="line">nextB.y = HEIGHT - <span class="number">1</span>;</span><br><span class="line"><span class="comment">//nextB.y = HEIGHT ;//会影响下一个的方块的演示窗格，99行代码</span></span><br><span class="line">newBlock();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//生成新的方块儿</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">newBlock</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">curB = nextB;</span><br><span class="line">nextB.style = rand() % <span class="number">4</span>;<span class="comment">//四种方式</span></span><br><span class="line">nextB.id = rand() % <span class="number">7</span>;<span class="comment">//余7匹配7种方块形态</span></span><br><span class="line"></span><br><span class="line">curB.x = WIDTH / <span class="number">2</span> - <span class="number">1</span>;<span class="comment">//中间位置</span></span><br><span class="line">curB.y = HEIGHT;</span><br><span class="line"></span><br><span class="line">WORD c = g_Blocks[curB.id].dir[curB.style];<span class="comment">//当前方块儿id去匹配数组,style匹配旋转状态</span></span><br><span class="line"><span class="keyword">while</span> ((c &amp; <span class="number">0x000F</span>) == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="comment">/*0x000f</span></span><br><span class="line"><span class="comment">0000</span></span><br><span class="line"><span class="comment">0000</span></span><br><span class="line"><span class="comment">0000</span></span><br><span class="line"><span class="comment">1111</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">curB.y--;<span class="comment">//当匹配到全在上方时的形态，下降一格？？</span></span><br><span class="line">c &gt;&gt;= <span class="number">4</span>;<span class="comment">//右移4位</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">CheckMove</span><span class="params">(BlockInfo _block)</span> </span>&#123;</span><br><span class="line"><span class="keyword">short</span> b = g_Blocks[_block.id].dir[_block.style];</span><br><span class="line"><span class="keyword">int</span> x, y;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">16</span>; i++, b &lt;&lt;= <span class="number">1</span>)</span><br><span class="line"><span class="keyword">if</span> (b &amp; <span class="number">0x8000</span>) &#123;</span><br><span class="line">x = _block.x + i % <span class="number">4</span>;</span><br><span class="line">y = _block.y - i / <span class="number">4</span>;</span><br><span class="line"><span class="keyword">if</span> ((x &lt; <span class="number">0</span>) || (x &gt;= WIDTH) || y &lt; <span class="number">0</span>)<span class="comment">//检测每一个方块，是否到底，是否达到左右边界</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span> ((y &lt; HEIGHT) &amp;&amp; g_World[x][y])<span class="comment">//如果方块满足在高度以下，并且该方块数组为1，返回false</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//左右移动方块，输入左右，上下移动格数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OnMove</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">BlockInfo temp = curB;    <span class="comment">//当前图形信息保存在temp </span></span><br><span class="line">temp.x += x;</span><br><span class="line">temp.y += y;</span><br><span class="line"><span class="keyword">if</span> (CheckMove(temp)) &#123;  <span class="comment">//是否可以移动</span></span><br><span class="line">curB.x += x;</span><br><span class="line">curB.y += y;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">loadGame();</span><br><span class="line">initGame();</span><br><span class="line"><span class="comment">//draw();</span></span><br><span class="line">OnMove(<span class="number">-2</span>, <span class="number">-6</span>);<span class="comment">//输入坐标</span></span><br><span class="line">draw();<span class="comment">//</span></span><br><span class="line">_getch();<span class="comment">//打断窗口</span></span><br><span class="line">closegraph();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="刷新时间，让方块自动下坠"><a href="#刷新时间，让方块自动下坠" class="headerlink" title="刷新时间，让方块自动下坠"></a>刷新时间，让方块自动下坠</h2><p><img src="/images/Easyx/%E5%B0%8F%E6%B8%B8%E6%88%8F/%E4%BF%84%E7%BD%97%E6%96%AF%E6%96%B9%E5%9D%97/%E5%88%B7%E6%96%B0%E6%97%B6%E9%97%B4%E4%B8%8B%E9%99%8D%E6%96%B9%E5%9D%97.gif" alt=""><br>tetris.h  add updata()<br>main.cpp add time.h</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">clock_t</span> m_oldTime = <span class="number">0</span>;   <span class="comment">//初始化最开始的时间</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">updata</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">clock_t</span> newTime = clock();  <span class="comment">//得到现在的时间</span></span><br><span class="line"><span class="keyword">if</span> (newTime - m_oldTime &gt; <span class="number">300</span>) &#123;</span><br><span class="line">m_oldTime = newTime;</span><br><span class="line">onDown();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">loadGame();</span><br><span class="line">initGame();</span><br><span class="line"><span class="comment">//draw();</span></span><br><span class="line"><span class="comment">//OnMove(-2, -6);//移动方块</span></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)<span class="comment">//需要不断循环刷新</span></span><br><span class="line">&#123;</span><br><span class="line">updata();<span class="comment">//刷新时间控制下落</span></span><br><span class="line">draw();<span class="comment">//</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">_getch();<span class="comment">//打断窗口</span></span><br><span class="line">closegraph();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="下坠到底"><a href="#下坠到底" class="headerlink" title="下坠到底"></a>下坠到底</h2><p><img src="/images/Easyx/%E5%B0%8F%E6%B8%B8%E6%88%8F/%E4%BF%84%E7%BD%97%E6%96%AF%E6%96%B9%E5%9D%97/%E4%B8%8B%E5%9D%A0%E5%88%B0%E5%BA%95.gif" alt=""><br>tetris.h  add moveBotton()<br>main.cpp </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">updata</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">clock_t</span> newTime = clock();  <span class="comment">//得到现在的时间</span></span><br><span class="line"><span class="keyword">if</span> (newTime - m_oldTime &gt; <span class="number">1500</span>) &#123;</span><br><span class="line">m_oldTime = newTime;</span><br><span class="line"><span class="comment">//onDown();</span></span><br><span class="line">moveBotton();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//移动至底部</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">moveBotton</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//直接沉底</span></span><br><span class="line">BlockInfo tmp = curB;</span><br><span class="line">tmp.y--;</span><br><span class="line"><span class="keyword">while</span> (CheckMove(tmp))</span><br><span class="line">&#123;</span><br><span class="line">curB.y--;<span class="comment">//当前更新和临时更新同步直接沉底</span></span><br><span class="line">tmp.y--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">loadGame();</span><br><span class="line">initGame();</span><br><span class="line"><span class="comment">//draw();</span></span><br><span class="line"><span class="comment">//OnMove(-2, -6);//移动方块</span></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)<span class="comment">//需要不断循环刷新</span></span><br><span class="line">&#123;</span><br><span class="line">updata();<span class="comment">//刷新时间控制下落</span></span><br><span class="line">draw();<span class="comment">//</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">_getch();<span class="comment">//打断窗口</span></span><br><span class="line">closegraph();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="固定方块和底线"><a href="#固定方块和底线" class="headerlink" title="固定方块和底线"></a>固定方块和底线</h2><video src=' /images/Easyx/小游戏/俄罗斯方块/固定底线刷新颜色.mp4' type='video/mp4' controls='controls'  width='100%' height='100%'></video>tetris.h  add  fixed(),gameOver(),quit(),clearAnima(int y)<p>main.cpp</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;graphics.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"tetris.h"</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> G_SIZE = <span class="number">20</span>;<span class="comment">//方块的边的像素点</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> WIDTH = <span class="number">10</span>;<span class="comment">//宽</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> HEIGHT = <span class="number">22</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">short</span> g_World[WIDTH][HEIGHT] = &#123; <span class="number">0</span> &#125;;<span class="comment">//创建二维0矩阵</span></span><br><span class="line"></span><br><span class="line">BlockInfo curB;<span class="comment">/*当前格子*/</span></span><br><span class="line">BlockInfo nextB;<span class="comment">/*下一个格子*/</span></span><br><span class="line"><span class="comment">//结构体数组，存放7种方块儿</span></span><br><span class="line">Block g_Blocks[<span class="number">7</span>] = &#123;</span><br><span class="line"></span><br><span class="line">&#123; <span class="number">0x0F00</span>, <span class="number">0x4444</span>, <span class="number">0x0F00</span>, <span class="number">0x4444</span>, RED &#125;,<span class="comment">//I</span></span><br><span class="line"><span class="comment">//四种状态，16进制,,16个位置,所以遍历</span></span><br><span class="line"><span class="comment">/*0x0f00</span></span><br><span class="line"><span class="comment">0000</span></span><br><span class="line"><span class="comment">1111</span></span><br><span class="line"><span class="comment">0000</span></span><br><span class="line"><span class="comment">0000*/</span></span><br><span class="line">&#123; <span class="number">0x0660</span>, <span class="number">0x0660</span>, <span class="number">0x0660</span>, <span class="number">0x0660</span>, YELLOW &#125;,<span class="comment">//田</span></span><br><span class="line">&#123; <span class="number">0x4460</span>, <span class="number">0x02E0</span>, <span class="number">0x0622</span>, <span class="number">0x7400</span>, BLUE &#125;,<span class="comment">//L</span></span><br><span class="line">&#123; <span class="number">0x2260</span>, <span class="number">0x0E20</span>, <span class="number">0x0644</span>, <span class="number">0x4700</span>, RED &#125;,<span class="comment">//反L</span></span><br><span class="line">&#123; <span class="number">0xc600</span>, <span class="number">0x2640</span>, <span class="number">0xc600</span>, <span class="number">0x2640</span>, BLUE &#125;,<span class="comment">//Z</span></span><br><span class="line">&#123; <span class="number">0x3600</span>, <span class="number">0x4620</span>, <span class="number">0x3600</span>, <span class="number">0x4620</span>, YELLOW &#125;,<span class="comment">//反z</span></span><br><span class="line">&#123; <span class="number">0x4E00</span>, <span class="number">0X4C40</span>, <span class="number">0xE400</span>, <span class="number">0X4640</span>, BLUE &#125;<span class="comment">//T</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">drawUnit</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, COLORREF co)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//计算单元方块的位置</span></span><br><span class="line"><span class="keyword">int</span> left = x * G_SIZE;<span class="comment">//</span></span><br><span class="line"><span class="keyword">int</span> right = (x + <span class="number">1</span>) * G_SIZE;</span><br><span class="line"><span class="keyword">int</span> top = (HEIGHT - y - <span class="number">1</span>) * G_SIZE;</span><br><span class="line"><span class="keyword">int</span> bottom = (HEIGHT - y) * G_SIZE;</span><br><span class="line">setfillcolor(co);<span class="comment">//设置填充颜色co</span></span><br><span class="line">setlinecolor(LIGHTGRAY);<span class="comment">//高灰色</span></span><br><span class="line">fillrectangle(left, top, right, bottom);<span class="comment">//用于画填充矩形（有边框)</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">drawBlock</span><span class="params">(BlockInfo _block)</span> </span>&#123;</span><br><span class="line"><span class="keyword">short</span> b = g_Blocks[_block.id].dir[_block.style];<span class="comment">//提取当前方块的状态</span></span><br><span class="line"><span class="comment">//画 16个格子中的每一个，前面16进制</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">16</span>; i++, b &lt;&lt;= <span class="number">1</span>) &#123;<span class="comment">//b左移一位</span></span><br><span class="line"><span class="keyword">if</span> (b &amp; <span class="number">0x8000</span>) &#123;</span><br><span class="line"><span class="comment">//不断匹配第一位，锁定1的位置，取出x,y</span></span><br><span class="line"><span class="comment">//0x8000</span></span><br><span class="line"><span class="comment">//1000</span></span><br><span class="line"><span class="comment">//0000</span></span><br><span class="line"><span class="comment">//0000</span></span><br><span class="line"><span class="comment">//0000</span></span><br><span class="line"><span class="keyword">int</span> x = _block.x + i % <span class="number">4</span>;<span class="comment">//方块大体位置+具体块的位置</span></span><br><span class="line"><span class="keyword">int</span> y = _block.y - i / <span class="number">4</span>;</span><br><span class="line"><span class="keyword">if</span> (y &lt; HEIGHT) &#123;</span><br><span class="line"><span class="comment">//画一个小格子</span></span><br><span class="line">drawUnit(x, y, g_Blocks[_block.id].color);<span class="comment">//位置和颜色</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//绘制操作介绍面板</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">drawGUI</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">setorigin(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">settextstyle(<span class="number">14</span>, <span class="number">0</span>, _T(<span class="string">"宋体"</span>));</span><br><span class="line">outtextxy(<span class="number">20</span>, <span class="number">280</span>, _T(<span class="string">"操作说明"</span>));</span><br><span class="line">outtextxy(<span class="number">20</span>, <span class="number">300</span>, _T(<span class="string">"上： 旋转"</span>));</span><br><span class="line">outtextxy(<span class="number">20</span>, <span class="number">320</span>, _T(<span class="string">"下： 下落"</span>));</span><br><span class="line">outtextxy(<span class="number">20</span>, <span class="number">340</span>, _T(<span class="string">"左： 左移"</span>));</span><br><span class="line">outtextxy(<span class="number">20</span>, <span class="number">360</span>, _T(<span class="string">"右： 右移"</span>));</span><br><span class="line">outtextxy(<span class="number">20</span>, <span class="number">380</span>, _T(<span class="string">"空格：快速下落"</span>));</span><br><span class="line">outtextxy(<span class="number">20</span>, <span class="number">400</span>, _T(<span class="string">"esc:退出程序"</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//主界面和观察窗口绘制</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">BeginBatchDraw();</span><br><span class="line">cleardevice();</span><br><span class="line">drawGUI();</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置坐标原点</span></span><br><span class="line">setorigin(<span class="number">220</span>, <span class="number">20</span>);<span class="comment">//默认左上角为原点，距离左边220像素，距离上边y20像素</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//绘制游戏区域</span></span><br><span class="line">rectangle(<span class="number">0</span>, <span class="number">0</span>, WIDTH * G_SIZE, HEIGHT * G_SIZE + <span class="number">1</span>);<span class="comment">//正中灰色长方格</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//画右边矩形</span></span><br><span class="line">setfillcolor(BLACK);</span><br><span class="line">fillrectangle((WIDTH + <span class="number">1</span>) * G_SIZE, <span class="number">0</span>, (WIDTH + <span class="number">5</span>) * G_SIZE, <span class="number">4</span> * G_SIZE);</span><br><span class="line"></span><br><span class="line">drawBlock(curB);</span><br><span class="line">drawBlock(nextB);<span class="comment">//先画格子，后画整体区域</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; WIDTH; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; HEIGHT; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//因为数组设置0，否则画面中网格的深灰色</span></span><br><span class="line"><span class="keyword">if</span> (g_World[i][j])<span class="comment">//否则会显示所有方格,跳过显示，为下一步移动做准备</span></span><br><span class="line">&#123;</span><br><span class="line">drawUnit(i, j, DARKGRAY);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">EndBatchDraw();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loadGame</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//初始化窗口</span></span><br><span class="line">initgraph(<span class="number">640</span>, <span class="number">480</span>);</span><br><span class="line">setbkmode(TRANSPARENT);<span class="comment">//设置背景颜色为透明</span></span><br><span class="line">srand((<span class="keyword">unsigned</span>)time(<span class="literal">NULL</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initGame</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">setfillcolor(BLACK);<span class="comment">//填充黑色  清空游戏区</span></span><br><span class="line"><span class="comment">//memset函数:0为填充值，后者参数为填充字节数</span></span><br><span class="line"><span class="built_in">memset</span>(g_World, <span class="number">0</span>, <span class="keyword">sizeof</span>(g_World));  <span class="comment">//初始化区域把值设置为0</span></span><br><span class="line">nextB.x = WIDTH + <span class="number">1</span>;</span><br><span class="line">nextB.y = HEIGHT - <span class="number">1</span>;</span><br><span class="line"><span class="comment">//nextB.y = HEIGHT ;//会影响下一个的方块的演示窗格，99行代码</span></span><br><span class="line">newBlock();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//生成新的方块儿</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">newBlock</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">curB = nextB;</span><br><span class="line">nextB.style = rand() % <span class="number">4</span>;<span class="comment">//四种方式</span></span><br><span class="line">nextB.id = rand() % <span class="number">7</span>;<span class="comment">//余7匹配7种方块形态</span></span><br><span class="line"></span><br><span class="line">curB.x = WIDTH / <span class="number">2</span> - <span class="number">1</span>;<span class="comment">//中间位置</span></span><br><span class="line">curB.y = HEIGHT;</span><br><span class="line"></span><br><span class="line">WORD c = g_Blocks[curB.id].dir[curB.style];<span class="comment">//当前方块儿id去匹配数组,style匹配旋转状态</span></span><br><span class="line"><span class="keyword">while</span> ((c &amp; <span class="number">0x000F</span>) == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="comment">/*0x000f</span></span><br><span class="line"><span class="comment">0000</span></span><br><span class="line"><span class="comment">0000</span></span><br><span class="line"><span class="comment">0000</span></span><br><span class="line"><span class="comment">1111</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">curB.y--;<span class="comment">//当匹配到全在上方时的形态，下降一格？？</span></span><br><span class="line">c &gt;&gt;= <span class="number">4</span>;<span class="comment">//右移4位</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">CheckMove</span><span class="params">(BlockInfo _block)</span> </span>&#123;</span><br><span class="line"><span class="keyword">short</span> b = g_Blocks[_block.id].dir[_block.style];</span><br><span class="line"><span class="keyword">int</span> x, y;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">16</span>; i++, b &lt;&lt;= <span class="number">1</span>)</span><br><span class="line"><span class="keyword">if</span> (b &amp; <span class="number">0x8000</span>) &#123;</span><br><span class="line">x = _block.x + i % <span class="number">4</span>;</span><br><span class="line">y = _block.y - i / <span class="number">4</span>;</span><br><span class="line"><span class="keyword">if</span> ((x &lt; <span class="number">0</span>) || (x &gt;= WIDTH) || y &lt; <span class="number">0</span>)<span class="comment">//检测每一个方块，是否到底，是否达到左右边界</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span> ((y &lt; HEIGHT) &amp;&amp; g_World[x][y])<span class="comment">//如果方块满足在高度以下，并且该方块数组为1，返回false</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//左右移动方块，输入左右，上下移动格数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OnMove</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">BlockInfo temp = curB;    <span class="comment">//当前图形信息保存在temp </span></span><br><span class="line">temp.x += x;</span><br><span class="line">temp.y += y;</span><br><span class="line"><span class="keyword">if</span> (CheckMove(temp)) &#123;  <span class="comment">//是否可以移动</span></span><br><span class="line">curB.x += x;</span><br><span class="line">curB.y += y;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">onDown</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">BlockInfo temp = curB;    <span class="comment">//当前图形信息保存在temp </span></span><br><span class="line">temp.y--;</span><br><span class="line"><span class="keyword">if</span> (CheckMove(temp)) &#123;  <span class="comment">//是否可以移动</span></span><br><span class="line">curB.y--;<span class="comment">//移动一格</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">fixed();  <span class="comment">//不可以下移 </span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">clock_t</span> m_oldTime = <span class="number">0</span>;   <span class="comment">//初始化最开始的时间</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">updata</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">clock_t</span> newTime = clock();  <span class="comment">//得到现在的时间</span></span><br><span class="line"><span class="keyword">if</span> (newTime - m_oldTime &gt; <span class="number">1500</span>) &#123;</span><br><span class="line">m_oldTime = newTime;</span><br><span class="line">onDown();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//移动至底部</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">moveBotton</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//直接沉底</span></span><br><span class="line">BlockInfo tmp = curB;</span><br><span class="line">tmp.y--;</span><br><span class="line"><span class="keyword">while</span> (CheckMove(tmp))</span><br><span class="line">&#123;</span><br><span class="line">curB.y--;<span class="comment">//当前更新和临时更新同步直接沉底</span></span><br><span class="line">tmp.y--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//旋转方块</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">onRotate</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">BlockInfo tmp = curB;</span><br><span class="line">tmp.style = (tmp.style + <span class="number">1</span>) % <span class="number">4</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> d[<span class="number">5</span>] = &#123; <span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>, <span class="number">-1</span>,<span class="number">-2</span> &#125;; <span class="comment">//可以旋转的x的偏移量，在16块方格中偏移量</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">tmp.x = curB.x + d[i];<span class="comment">//???</span></span><br><span class="line"><span class="keyword">if</span> (CheckMove(tmp))</span><br><span class="line">&#123;</span><br><span class="line">curB.style = (curB.style + <span class="number">1</span>) % <span class="number">4</span>;</span><br><span class="line">curB.x += d[i];</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//固定方块</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fixed</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i, x, y;</span><br><span class="line">moveBotton();<span class="comment">//下移</span></span><br><span class="line"><span class="keyword">short</span> b = g_Blocks[curB.id].dir[curB.style];</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">16</span>; i++, b &lt;&lt;= <span class="number">1</span>)</span><br><span class="line"><span class="keyword">if</span> (b &amp; <span class="number">0x8000</span>)  <span class="comment">//对十六个格子分别进行处理</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (curB.y - i / <span class="number">4</span> &gt;= HEIGHT - <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 如果方块的固定位置超出高度，结束游戏</span></span><br><span class="line">gameOver();</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">g_World[curB.x + i % <span class="number">4</span>][curB.y - i / <span class="number">4</span>] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 检查是否需要消掉行，并标记</span></span><br><span class="line"><span class="keyword">char</span> <span class="built_in">remove</span> = <span class="number">0</span>;<span class="comment">// 4 位用来标记方块涉及的 4 行是否有消除行为，最大只有4行</span></span><br><span class="line"><span class="keyword">for</span> (y = curB.y; y &gt;= <span class="built_in">max</span>(curB.y - <span class="number">3</span>, <span class="number">0</span>); y--)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; WIDTH &amp;&amp; g_World[i][y] == <span class="number">1</span>; i++);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (i == WIDTH)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">remove</span> |= (<span class="number">1</span> &lt;&lt; (curB.y - y));</span><br><span class="line">clearAnima(y);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">remove</span>) <span class="comment">//如果产生整行消除</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++, <span class="built_in">remove</span> &gt;&gt;= <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">remove</span> &amp; <span class="number">1</span>)<span class="comment">//且表示交集</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (y = curB.y - i + <span class="number">1</span>; y &lt; HEIGHT; y++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (x = <span class="number">0</span>; x &lt; WIDTH; x++)</span><br><span class="line">&#123;</span><br><span class="line">g_World[x][y - <span class="number">1</span>] = g_World[x][y];<span class="comment">//y由高到低，把上一层赋值下一层</span></span><br><span class="line">g_World[x][y] = <span class="number">0</span>;<span class="comment">//赋空值</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//产生新方块</span></span><br><span class="line">newBlock();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gameOver</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (MessageBox(GetHWnd(), _T(<span class="string">"游戏结束\n 再来一局？"</span>), _T(<span class="string">"游戏结束"</span>),<span class="comment">//message  _T标注为Unicode，防止兼容问题</span></span><br><span class="line">MB_YESNO | MB_ICONASTERISK) == IDYES) &#123;</span><br><span class="line">initGame();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">quit();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">quit</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">closegraph();</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clearAnima</span><span class="params">(<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//标记某一行即将发生消除操作的特性</span></span><br><span class="line">setfillcolor(LIGHTGREEN);<span class="comment">//浅绿色</span></span><br><span class="line">setfillstyle(BS_HATCHED, HS_DIAGCROSS);<span class="comment">//阴影线，水平垂直方向</span></span><br><span class="line">fillrectangle(<span class="number">0</span>, (HEIGHT - y - <span class="number">1</span>) * G_SIZE + G_SIZE / <span class="number">2</span> - <span class="number">5</span>, WIDTH * G_SIZE - <span class="number">1</span>, (HEIGHT - y - <span class="number">1</span>) * G_SIZE + G_SIZE / <span class="number">2</span> + <span class="number">5</span>);</span><br><span class="line">setfillstyle(BS_SOLID);<span class="comment">//实心画刷</span></span><br><span class="line">Sleep(<span class="number">300</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">loadGame();</span><br><span class="line">initGame();</span><br><span class="line"><span class="comment">//draw();</span></span><br><span class="line"><span class="comment">//OnMove(-2, -6);//移动方块</span></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)<span class="comment">//需要不断循环刷新</span></span><br><span class="line">&#123;</span><br><span class="line">updata();<span class="comment">//刷新时间控制下落</span></span><br><span class="line">draw();<span class="comment">//</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">_getch();<span class="comment">//打断窗口</span></span><br><span class="line">closegraph();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><video src=' /images/Easyx/小游戏/俄罗斯方块/俄罗斯方块.mp4' type='video/mp4' controls='controls'  width='100%' height='100%'></video>tetris.h 添加键盘监听<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;easyx.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="keyword">enum</span> CMD &#123;<span class="comment">//键盘案件的枚举</span></span><br><span class="line">NO,<span class="comment">//什么都没按</span></span><br><span class="line">RITATE,       <span class="comment">//旋转</span></span><br><span class="line">LEFT,         <span class="comment">//左键</span></span><br><span class="line">RIGHT,        <span class="comment">//右键</span></span><br><span class="line">DOWN,         <span class="comment">//下落</span></span><br><span class="line">QUIT,         <span class="comment">//退出</span></span><br><span class="line">SINK,         <span class="comment">//下沉</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">BlockInfo</span> &#123;</span></span><br><span class="line"><span class="keyword">char</span> id; <span class="comment">//第几个方块，方块的形态</span></span><br><span class="line"><span class="keyword">char</span> style; <span class="comment">//表示是方块中旋转状态</span></span><br><span class="line"><span class="keyword">char</span> x, y; <span class="comment">//当前格子的位置</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Block</span> &#123;</span></span><br><span class="line"><span class="keyword">short</span> dir[<span class="number">4</span>];<span class="comment">//旋转状态</span></span><br><span class="line">COLORREF color;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">drawUnit</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, COLORREF co)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//绘制整体图形</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">drawBlock</span><span class="params">(BlockInfo _block)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//绘制操作介绍</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">drawGUI</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//所有主体和操作介绍</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化游戏</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loadGame</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//开始新游戏</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initGame</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//生成新的方块儿</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">newBlock</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//检测方块是否移动</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">CheckMove</span><span class="params">(BlockInfo _block)</span></span>;</span><br><span class="line"><span class="comment">//移动方块</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OnMove</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>;</span><br><span class="line"><span class="comment">//下落</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">onDown</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//更新函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">updata</span><span class="params">()</span></span>;<span class="comment">//用更新函数，控制方块下落</span></span><br><span class="line"><span class="comment">//沉底</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">moveBotton</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//方块旋转</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">onRotate</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//下降到底部开始填充</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fixed</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gameOver</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">quit</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//消除方块动画</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clearAnima</span><span class="params">(<span class="keyword">int</span> y)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取键盘按下的健值</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getkey</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dispatch</span><span class="params">(<span class="keyword">enum</span> CMD cmd)</span></span>;<span class="comment">//需要头文件</span></span><br></pre></td></tr></table></figure><p>main.cpp</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;graphics.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"tetris.h"</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> G_SIZE = <span class="number">20</span>;<span class="comment">//方块的边的像素点</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> WIDTH = <span class="number">10</span>;<span class="comment">//宽</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> HEIGHT = <span class="number">22</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">short</span> g_World[WIDTH][HEIGHT] = &#123; <span class="number">0</span> &#125;;<span class="comment">//创建二维0矩阵</span></span><br><span class="line"></span><br><span class="line">BlockInfo curB;<span class="comment">/*当前格子*/</span></span><br><span class="line">BlockInfo nextB;<span class="comment">/*下一个格子*/</span></span><br><span class="line"><span class="comment">//结构体数组，存放7种方块儿</span></span><br><span class="line">Block g_Blocks[<span class="number">7</span>] = &#123;</span><br><span class="line"></span><br><span class="line">&#123; <span class="number">0x0F00</span>, <span class="number">0x4444</span>, <span class="number">0x0F00</span>, <span class="number">0x4444</span>, RED &#125;,<span class="comment">//I</span></span><br><span class="line"><span class="comment">//四种状态，16进制,,16个位置,所以遍历</span></span><br><span class="line"><span class="comment">/*0x0f00</span></span><br><span class="line"><span class="comment">0000</span></span><br><span class="line"><span class="comment">1111</span></span><br><span class="line"><span class="comment">0000</span></span><br><span class="line"><span class="comment">0000*/</span></span><br><span class="line">&#123; <span class="number">0x0660</span>, <span class="number">0x0660</span>, <span class="number">0x0660</span>, <span class="number">0x0660</span>, YELLOW &#125;,<span class="comment">//田</span></span><br><span class="line">&#123; <span class="number">0x4460</span>, <span class="number">0x02E0</span>, <span class="number">0x0622</span>, <span class="number">0x7400</span>, BLUE &#125;,<span class="comment">//L</span></span><br><span class="line">&#123; <span class="number">0x2260</span>, <span class="number">0x0E20</span>, <span class="number">0x0644</span>, <span class="number">0x4700</span>, RED &#125;,<span class="comment">//反L</span></span><br><span class="line">&#123; <span class="number">0xc600</span>, <span class="number">0x2640</span>, <span class="number">0xc600</span>, <span class="number">0x2640</span>, BLUE &#125;,<span class="comment">//Z</span></span><br><span class="line">&#123; <span class="number">0x3600</span>, <span class="number">0x4620</span>, <span class="number">0x3600</span>, <span class="number">0x4620</span>, YELLOW &#125;,<span class="comment">//反z</span></span><br><span class="line">&#123; <span class="number">0x4E00</span>, <span class="number">0X4C40</span>, <span class="number">0xE400</span>, <span class="number">0X4640</span>, BLUE &#125;<span class="comment">//T</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">drawUnit</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, COLORREF co)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//计算单元方块的位置</span></span><br><span class="line"><span class="keyword">int</span> left = x * G_SIZE;<span class="comment">//</span></span><br><span class="line"><span class="keyword">int</span> right = (x + <span class="number">1</span>) * G_SIZE;</span><br><span class="line"><span class="keyword">int</span> top = (HEIGHT - y - <span class="number">1</span>) * G_SIZE;</span><br><span class="line"><span class="keyword">int</span> bottom = (HEIGHT - y) * G_SIZE;</span><br><span class="line">setfillcolor(co);<span class="comment">//设置填充颜色co</span></span><br><span class="line">setlinecolor(LIGHTGRAY);<span class="comment">//高灰色</span></span><br><span class="line">fillrectangle(left, top, right, bottom);<span class="comment">//用于画填充矩形（有边框)</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">drawBlock</span><span class="params">(BlockInfo _block)</span> </span>&#123;</span><br><span class="line"><span class="keyword">short</span> b = g_Blocks[_block.id].dir[_block.style];<span class="comment">//提取当前方块的状态</span></span><br><span class="line"><span class="comment">//画 16个格子中的每一个，前面16进制</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">16</span>; i++, b &lt;&lt;= <span class="number">1</span>) &#123;<span class="comment">//b左移一位</span></span><br><span class="line"><span class="keyword">if</span> (b &amp; <span class="number">0x8000</span>) &#123;</span><br><span class="line"><span class="comment">//不断匹配第一位，锁定1的位置，取出x,y</span></span><br><span class="line"><span class="comment">//0x8000</span></span><br><span class="line"><span class="comment">//1000</span></span><br><span class="line"><span class="comment">//0000</span></span><br><span class="line"><span class="comment">//0000</span></span><br><span class="line"><span class="comment">//0000</span></span><br><span class="line"><span class="keyword">int</span> x = _block.x + i % <span class="number">4</span>;<span class="comment">//方块大体位置+具体块的位置</span></span><br><span class="line"><span class="keyword">int</span> y = _block.y - i / <span class="number">4</span>;</span><br><span class="line"><span class="keyword">if</span> (y &lt; HEIGHT) &#123;</span><br><span class="line"><span class="comment">//画一个小格子</span></span><br><span class="line">drawUnit(x, y, g_Blocks[_block.id].color);<span class="comment">//位置和颜色</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//绘制操作介绍面板</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">drawGUI</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">setorigin(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">settextstyle(<span class="number">14</span>, <span class="number">0</span>, _T(<span class="string">"宋体"</span>));</span><br><span class="line">outtextxy(<span class="number">20</span>, <span class="number">280</span>, _T(<span class="string">"操作说明"</span>));</span><br><span class="line">outtextxy(<span class="number">20</span>, <span class="number">300</span>, _T(<span class="string">"上： 旋转"</span>));</span><br><span class="line">outtextxy(<span class="number">20</span>, <span class="number">320</span>, _T(<span class="string">"下： 下落"</span>));</span><br><span class="line">outtextxy(<span class="number">20</span>, <span class="number">340</span>, _T(<span class="string">"左： 左移"</span>));</span><br><span class="line">outtextxy(<span class="number">20</span>, <span class="number">360</span>, _T(<span class="string">"右： 右移"</span>));</span><br><span class="line">outtextxy(<span class="number">20</span>, <span class="number">380</span>, _T(<span class="string">"空格：快速下落"</span>));</span><br><span class="line">outtextxy(<span class="number">20</span>, <span class="number">400</span>, _T(<span class="string">"esc:退出程序"</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//主界面和观察窗口绘制</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">BeginBatchDraw();</span><br><span class="line">cleardevice();</span><br><span class="line">drawGUI();</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置坐标原点</span></span><br><span class="line">setorigin(<span class="number">220</span>, <span class="number">20</span>);<span class="comment">//默认左上角为原点，距离左边220像素，距离上边y20像素</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//绘制游戏区域</span></span><br><span class="line">rectangle(<span class="number">0</span>, <span class="number">0</span>, WIDTH * G_SIZE, HEIGHT * G_SIZE + <span class="number">1</span>);<span class="comment">//正中灰色长方格</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//画右边矩形</span></span><br><span class="line">setfillcolor(BLACK);</span><br><span class="line">fillrectangle((WIDTH + <span class="number">1</span>) * G_SIZE, <span class="number">0</span>, (WIDTH + <span class="number">5</span>) * G_SIZE, <span class="number">4</span> * G_SIZE);</span><br><span class="line"></span><br><span class="line">drawBlock(curB);</span><br><span class="line">drawBlock(nextB);<span class="comment">//先画格子，后画整体区域</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; WIDTH; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; HEIGHT; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//因为数组设置0，否则画面中网格的深灰色</span></span><br><span class="line"><span class="keyword">if</span> (g_World[i][j])<span class="comment">//否则会显示所有方格,跳过显示，为下一步移动做准备</span></span><br><span class="line">&#123;</span><br><span class="line">drawUnit(i, j, DARKGRAY);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">EndBatchDraw();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loadGame</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//初始化窗口</span></span><br><span class="line">initgraph(<span class="number">640</span>, <span class="number">480</span>);</span><br><span class="line">setbkmode(TRANSPARENT);<span class="comment">//设置背景颜色为透明</span></span><br><span class="line">srand((<span class="keyword">unsigned</span>)time(<span class="literal">NULL</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initGame</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">setfillcolor(BLACK);<span class="comment">//填充黑色  清空游戏区</span></span><br><span class="line"><span class="comment">//memset函数:0为填充值，后者参数为填充字节数</span></span><br><span class="line"><span class="built_in">memset</span>(g_World, <span class="number">0</span>, <span class="keyword">sizeof</span>(g_World));  <span class="comment">//初始化区域把值设置为0</span></span><br><span class="line">nextB.x = WIDTH + <span class="number">1</span>;</span><br><span class="line">nextB.y = HEIGHT - <span class="number">1</span>;</span><br><span class="line"><span class="comment">//nextB.y = HEIGHT ;//会影响下一个的方块的演示窗格，99行代码</span></span><br><span class="line">newBlock();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//生成新的方块儿</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">newBlock</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">curB = nextB;</span><br><span class="line">nextB.style = rand() % <span class="number">4</span>;<span class="comment">//四种方式</span></span><br><span class="line">nextB.id = rand() % <span class="number">7</span>;<span class="comment">//余7匹配7种方块形态</span></span><br><span class="line"></span><br><span class="line">curB.x = WIDTH / <span class="number">2</span> - <span class="number">1</span>;<span class="comment">//中间位置</span></span><br><span class="line">curB.y = HEIGHT;</span><br><span class="line"></span><br><span class="line">WORD c = g_Blocks[curB.id].dir[curB.style];<span class="comment">//当前方块儿id去匹配数组,style匹配旋转状态</span></span><br><span class="line"><span class="keyword">while</span> ((c &amp; <span class="number">0x000F</span>) == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="comment">/*0x000f</span></span><br><span class="line"><span class="comment">0000</span></span><br><span class="line"><span class="comment">0000</span></span><br><span class="line"><span class="comment">0000</span></span><br><span class="line"><span class="comment">1111</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">curB.y--;<span class="comment">//当匹配到全在上方时的形态，下降一格？？</span></span><br><span class="line">c &gt;&gt;= <span class="number">4</span>;<span class="comment">//右移4位</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">CheckMove</span><span class="params">(BlockInfo _block)</span> </span>&#123;</span><br><span class="line"><span class="keyword">short</span> b = g_Blocks[_block.id].dir[_block.style];</span><br><span class="line"><span class="keyword">int</span> x, y;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">16</span>; i++, b &lt;&lt;= <span class="number">1</span>)</span><br><span class="line"><span class="keyword">if</span> (b &amp; <span class="number">0x8000</span>) &#123;</span><br><span class="line">x = _block.x + i % <span class="number">4</span>;</span><br><span class="line">y = _block.y - i / <span class="number">4</span>;</span><br><span class="line"><span class="keyword">if</span> ((x &lt; <span class="number">0</span>) || (x &gt;= WIDTH) || y &lt; <span class="number">0</span>)<span class="comment">//检测每一个方块，是否到底，是否达到左右边界</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span> ((y &lt; HEIGHT) &amp;&amp; g_World[x][y])<span class="comment">//如果方块满足在高度以下，并且该方块数组为1，返回false</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//左右移动方块，输入左右，上下移动格数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OnMove</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">BlockInfo temp = curB;    <span class="comment">//当前图形信息保存在temp </span></span><br><span class="line">temp.x += x;</span><br><span class="line">temp.y += y;</span><br><span class="line"><span class="keyword">if</span> (CheckMove(temp)) &#123;  <span class="comment">//是否可以移动</span></span><br><span class="line">curB.x += x;</span><br><span class="line">curB.y += y;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">onDown</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">BlockInfo temp = curB;    <span class="comment">//当前图形信息保存在temp </span></span><br><span class="line">temp.y--;</span><br><span class="line"><span class="keyword">if</span> (CheckMove(temp)) &#123;  <span class="comment">//是否可以移动</span></span><br><span class="line">curB.y--;<span class="comment">//移动一格</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">fixed();  <span class="comment">//不可以下移 </span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">clock_t</span> m_oldTime = <span class="number">0</span>;   <span class="comment">//初始化最开始的时间</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">updata</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">clock_t</span> newTime = clock();  <span class="comment">//得到现在的时间</span></span><br><span class="line"><span class="keyword">if</span> (newTime - m_oldTime &gt; <span class="number">1500</span>) &#123;</span><br><span class="line">m_oldTime = newTime;</span><br><span class="line">onDown();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//移动至底部</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">moveBotton</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//直接沉底</span></span><br><span class="line">BlockInfo tmp = curB;</span><br><span class="line">tmp.y--;</span><br><span class="line"><span class="keyword">while</span> (CheckMove(tmp))</span><br><span class="line">&#123;</span><br><span class="line">curB.y--;<span class="comment">//当前更新和临时更新同步直接沉底</span></span><br><span class="line">tmp.y--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//旋转方块</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">onRotate</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">BlockInfo tmp = curB;</span><br><span class="line">tmp.style = (tmp.style + <span class="number">1</span>) % <span class="number">4</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> d[<span class="number">5</span>] = &#123; <span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>, <span class="number">-1</span>,<span class="number">-2</span> &#125;; <span class="comment">//可以旋转的x的偏移量，在16块方格中偏移量</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">tmp.x = curB.x + d[i];<span class="comment">//???</span></span><br><span class="line"><span class="keyword">if</span> (CheckMove(tmp))</span><br><span class="line">&#123;</span><br><span class="line">curB.style = (curB.style + <span class="number">1</span>) % <span class="number">4</span>;</span><br><span class="line">curB.x += d[i];</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//固定方块</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fixed</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i, x, y;</span><br><span class="line">moveBotton();<span class="comment">//下移</span></span><br><span class="line"><span class="keyword">short</span> b = g_Blocks[curB.id].dir[curB.style];</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">16</span>; i++, b &lt;&lt;= <span class="number">1</span>)</span><br><span class="line"><span class="keyword">if</span> (b &amp; <span class="number">0x8000</span>)  <span class="comment">//对十六个格子分别进行处理</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (curB.y - i / <span class="number">4</span> &gt;= HEIGHT - <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 如果方块的固定位置超出高度，结束游戏</span></span><br><span class="line">gameOver();</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">g_World[curB.x + i % <span class="number">4</span>][curB.y - i / <span class="number">4</span>] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 检查是否需要消掉行，并标记</span></span><br><span class="line"><span class="keyword">char</span> <span class="built_in">remove</span> = <span class="number">0</span>;<span class="comment">// 4 位用来标记方块涉及的 4 行是否有消除行为，最大只有4行</span></span><br><span class="line"><span class="keyword">for</span> (y = curB.y; y &gt;= <span class="built_in">max</span>(curB.y - <span class="number">3</span>, <span class="number">0</span>); y--)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; WIDTH &amp;&amp; g_World[i][y] == <span class="number">1</span>; i++);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (i == WIDTH)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">remove</span> |= (<span class="number">1</span> &lt;&lt; (curB.y - y));</span><br><span class="line">clearAnima(y);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">remove</span>) <span class="comment">//如果产生整行消除</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++, <span class="built_in">remove</span> &gt;&gt;= <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">remove</span> &amp; <span class="number">1</span>)<span class="comment">//且表示交集</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (y = curB.y - i + <span class="number">1</span>; y &lt; HEIGHT; y++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (x = <span class="number">0</span>; x &lt; WIDTH; x++)</span><br><span class="line">&#123;</span><br><span class="line">g_World[x][y - <span class="number">1</span>] = g_World[x][y];<span class="comment">//y由高到低，把上一层赋值下一层</span></span><br><span class="line">g_World[x][y] = <span class="number">0</span>;<span class="comment">//赋空值</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//产生新方块</span></span><br><span class="line">newBlock();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gameOver</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (MessageBox(GetHWnd(), _T(<span class="string">"游戏结束\n 再来一局？"</span>), _T(<span class="string">"游戏结束"</span>),<span class="comment">//message  _T标注为Unicode，防止兼容问题</span></span><br><span class="line">MB_YESNO | MB_ICONASTERISK) == IDYES) &#123;</span><br><span class="line">initGame();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">quit();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">quit</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">closegraph();</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clearAnima</span><span class="params">(<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//标记某一行即将发生消除操作的特性</span></span><br><span class="line">setfillcolor(LIGHTGREEN);<span class="comment">//浅绿色</span></span><br><span class="line">setfillstyle(BS_HATCHED, HS_DIAGCROSS);<span class="comment">//阴影线，水平垂直方向</span></span><br><span class="line">fillrectangle(<span class="number">0</span>, (HEIGHT - y - <span class="number">1</span>) * G_SIZE + G_SIZE / <span class="number">2</span> - <span class="number">5</span>, WIDTH * G_SIZE - <span class="number">1</span>, (HEIGHT - y - <span class="number">1</span>) * G_SIZE + G_SIZE / <span class="number">2</span> + <span class="number">5</span>);</span><br><span class="line">setfillstyle(BS_SOLID);<span class="comment">//实心画刷</span></span><br><span class="line">Sleep(<span class="number">300</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//返回键盘的枚举信息，加载键盘案件的信息</span></span><br><span class="line"><span class="function">CMD <span class="title">getCmd</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (_kbhit()) &#123; <span class="comment">//检测是否有点击消息，内部的库</span></span><br><span class="line"><span class="keyword">switch</span> (_getch())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'w'</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">'W'</span>: <span class="keyword">return</span>  RITATE;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'a'</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">'A'</span>: <span class="keyword">return</span>  LEFT;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'d'</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">'D'</span>: <span class="keyword">return</span>  RIGHT;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'s'</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">'S'</span>: <span class="keyword">return</span>  DOWN;</span><br><span class="line"><span class="keyword">case</span> <span class="number">27</span>:<span class="keyword">return</span>  QUIT;</span><br><span class="line"><span class="keyword">case</span> <span class="string">' '</span>: <span class="keyword">return</span>  SINK;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">0xE0</span>:  <span class="comment">//方向键</span></span><br><span class="line"><span class="keyword">switch</span> (_getch())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">72</span>: <span class="keyword">return</span> RITATE;</span><br><span class="line"><span class="keyword">case</span> <span class="number">75</span>: <span class="keyword">return</span> LEFT;</span><br><span class="line"><span class="keyword">case</span> <span class="number">77</span>: <span class="keyword">return</span> RIGHT;</span><br><span class="line"><span class="keyword">case</span> <span class="number">80</span>: <span class="keyword">return</span> DOWN;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">Sleep(<span class="number">16</span>);</span><br><span class="line"><span class="keyword">return</span> NO;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断是否有按键</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getkey</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">CMD c;</span><br><span class="line">c = getCmd();</span><br><span class="line">dispatch(c);  <span class="comment">//判断用户按的什么键</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//处理按键信息</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dispatch</span><span class="params">(<span class="keyword">enum</span> CMD cmd)</span> </span>&#123;</span><br><span class="line"><span class="keyword">switch</span> (cmd)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> RITATE: onRotate();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> LEFT:  OnMove(<span class="number">-1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> RIGHT: OnMove(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> DOWN: onDown();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> QUIT:<span class="comment">//ESC</span></span><br><span class="line"><span class="keyword">if</span> (MessageBox(GetHWnd(), _T(<span class="string">"退出游戏？"</span>), _T(<span class="string">"提示"</span>),<span class="comment">//兼容问题</span></span><br><span class="line">MB_OKCANCEL | MB_ICONASTERISK) == IDOK) &#123;</span><br><span class="line">quit();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> SINK: moveBotton();<span class="comment">//下沉</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">loadGame();</span><br><span class="line">initGame();</span><br><span class="line"><span class="comment">//draw();</span></span><br><span class="line"><span class="comment">//OnMove(-2, -6);//移动方块</span></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)<span class="comment">//需要不断循环刷新</span></span><br><span class="line">&#123;</span><br><span class="line">getkey();</span><br><span class="line">updata();<span class="comment">//刷新时间控制下落</span></span><br><span class="line">draw();<span class="comment">//</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Easyx绘图库 </category>
          
          <category> 小游戏 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>stack容器</title>
      <link href="posts/516b2848/"/>
      <url>posts/516b2848/</url>
      
        <content type="html"><![CDATA[<h2 id="stack容器相关方法"><a href="#stack容器相关方法" class="headerlink" title="stack容器相关方法"></a>stack容器相关方法</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="comment">//栈stack容器</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//特点</span></span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; s;</span><br><span class="line">s.push(<span class="number">10</span>);</span><br><span class="line">s.push(<span class="number">20</span>);</span><br><span class="line">s.push(<span class="number">30</span>);</span><br><span class="line">s.push(<span class="number">50</span>);</span><br><span class="line"><span class="comment">//只要栈不为空，产看栈顶，否则执行出栈</span></span><br><span class="line"><span class="keyword">while</span> (!s.empty())</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"查看栈顶"</span> &lt;&lt; s.top() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">s.pop();</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"栈的大小为"</span> &lt;&lt; s.<span class="built_in">size</span>()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test01();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++基础入门 </category>
          
          <category> 提高语法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>queue容器</title>
      <link href="posts/51c2e84a/"/>
      <url>posts/51c2e84a/</url>
      
        <content type="html"><![CDATA[<h2 id="queue容器-队列"><a href="#queue容器-队列" class="headerlink" title="queue容器(队列)"></a>queue容器(队列)</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="comment">//Queue队列</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Person(<span class="built_in">string</span> name, <span class="keyword">int</span> age)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;mName = name;</span><br><span class="line"><span class="keyword">this</span>-&gt;mAge = age;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">string</span> mName;</span><br><span class="line"><span class="keyword">int</span> mAge;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//创建队列</span></span><br><span class="line"><span class="built_in">queue</span> &lt;Person&gt; q;<span class="comment">//无法查看队列内部元素</span></span><br><span class="line"></span><br><span class="line"><span class="function">Person <span class="title">p1</span><span class="params">(<span class="string">"唐僧"</span>, <span class="number">30</span>)</span></span>;</span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(<span class="string">"孙悟空"</span>, <span class="number">1000</span>)</span></span>;</span><br><span class="line"><span class="function">Person <span class="title">p3</span><span class="params">(<span class="string">"沙悟净"</span>, <span class="number">50</span>)</span></span>;</span><br><span class="line"><span class="function">Person <span class="title">p4</span><span class="params">(<span class="string">"猪悟能"</span>, <span class="number">20</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//入队</span></span><br><span class="line">q.push(p1);</span><br><span class="line">q.push(p2);</span><br><span class="line">q.push(p3);</span><br><span class="line">q.push(p4);</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"大小"</span> &lt;&lt; q.<span class="built_in">size</span>() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="comment">//判断队列是否为空，查看对头，查看队尾，出队</span></span><br><span class="line"><span class="keyword">while</span> (!q.empty())</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"对头元素——姓名"</span> &lt;&lt; q.front().mName &lt;&lt; <span class="string">"年龄"</span> &lt;&lt; q.front().mAge&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"对尾元素——姓名"</span> &lt;&lt; q.back().mName &lt;&lt; <span class="string">"年龄"</span> &lt;&lt; q.back().mAge&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">q.pop();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"大小"</span> &lt;&lt; q.<span class="built_in">size</span>() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test01();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++基础入门 </category>
          
          <category> 提高语法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>STL案例一</title>
      <link href="posts/9fd6bdca/"/>
      <url>posts/9fd6bdca/</url>
      
        <content type="html"><![CDATA[<p>创建五名选手，放到vector中<br>遍历vector容器，取出来每一个选手，执行for循环，可以把10个评分打分存到deque容器中<br>sort算法对deque容器中分数排序，去除最高分和最低分<br>deque容器遍历一遍，累加总分<br>获取平均分</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;deque&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//选手类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">person(<span class="built_in">string</span> name, <span class="keyword">int</span> score)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;pName = name;</span><br><span class="line"><span class="keyword">this</span>-&gt;pScore = score;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> pName;<span class="comment">//姓名</span></span><br><span class="line"><span class="keyword">int</span> pScore;<span class="comment">//平均分</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">creatPerson</span><span class="params">(<span class="built_in">vector</span>&lt;person&gt;&amp;v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">string</span> nameSeed = <span class="string">"ABCDE"</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">5</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">string</span> name = <span class="string">"选手"</span>;</span><br><span class="line">name += nameSeed[i];</span><br><span class="line"><span class="keyword">int</span> score = <span class="number">0</span>;</span><br><span class="line"><span class="function">person <span class="title">p</span><span class="params">(name, score)</span></span>;</span><br><span class="line">v.push_back(p);<span class="comment">//放入容器</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//打分</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setScore</span><span class="params">(<span class="built_in">vector</span>&lt;person&gt;&amp;v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">vector</span>&lt;person&gt;::iterator it = v.<span class="built_in">begin</span>();it != v.<span class="built_in">end</span>();it++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//添加评委分数</span></span><br><span class="line"><span class="built_in">deque</span>&lt;<span class="keyword">int</span>&gt;d;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">10</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> score = rand() % <span class="number">41</span> + <span class="number">60</span>;  <span class="comment">//60~100</span></span><br><span class="line">d.push_back(score);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//排序</span></span><br><span class="line">sort(d.<span class="built_in">begin</span>(), d.<span class="built_in">end</span>());</span><br><span class="line"><span class="comment">//去除最高分和最低分</span></span><br><span class="line">d.pop_back();</span><br><span class="line">d.pop_front();</span><br><span class="line"></span><br><span class="line"><span class="comment">//取平均分</span></span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">deque</span>&lt;<span class="keyword">int</span>&gt;::iterator dit = d.<span class="built_in">begin</span>();dit != d.<span class="built_in">end</span>();dit++)</span><br><span class="line">&#123;</span><br><span class="line">sum += *dit;<span class="comment">//累加</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> avg = sum / d.<span class="built_in">size</span>();<span class="comment">// 8</span></span><br><span class="line">it-&gt;pScore = avg;<span class="comment">//for循环的it赋值</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showScore</span><span class="params">(<span class="built_in">vector</span>&lt;person&gt;&amp;v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">vector</span>&lt;person&gt;::iterator it = v.<span class="built_in">begin</span>();it != v.<span class="built_in">end</span>();it++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"姓名"</span> &lt;&lt; it-&gt;pName &lt;&lt; <span class="string">"得分"</span> &lt;&lt; it-&gt;pScore &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//创建5名选手</span></span><br><span class="line"><span class="built_in">vector</span>&lt;person&gt;v;</span><br><span class="line"></span><br><span class="line">srand((<span class="keyword">unsigned</span> <span class="keyword">int</span>)time(<span class="literal">NULL</span>));<span class="comment">//随机数种子</span></span><br><span class="line">creatPerson(v);</span><br><span class="line"></span><br><span class="line"><span class="comment">//test</span></span><br><span class="line"><span class="comment">//for (vector&lt;person&gt;::iterator it = v.begin(); it != v.end(); it++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; (*it).pName &lt;&lt; " " &lt;&lt; (*it).pScore &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//给选手评分</span></span><br><span class="line">setScore(v); </span><br><span class="line"><span class="comment">//显示最后得分</span></span><br><span class="line">showScore(v);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++基础入门 </category>
          
          <category> 提高语法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>deque容器</title>
      <link href="posts/58e11256/"/>
      <url>posts/58e11256/</url>
      
        <content type="html"><![CDATA[<h2 id="deque构造-双端数组"><a href="#deque构造-双端数组" class="headerlink" title="deque构造(双端数组)"></a>deque构造(双端数组)</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;deque&gt;</span></span></span><br><span class="line"><span class="comment">//deque容器构造,</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printdeque</span><span class="params">(<span class="keyword">const</span> <span class="built_in">deque</span>&lt;<span class="keyword">int</span>&gt;&amp;d)</span><span class="comment">//不可修改数据，只读</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">deque</span>&lt;<span class="keyword">int</span>&gt;::const_iterator it = d.<span class="built_in">begin</span>();it != d.<span class="built_in">end</span>();it++)<span class="comment">//迭代器也要修改</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; *it &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span>  <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">deque</span>&lt;<span class="keyword">int</span>&gt; d1;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">10</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">d1.push_back(i);</span><br><span class="line">&#125;</span><br><span class="line">printdeque(d1);</span><br><span class="line"></span><br><span class="line"><span class="built_in">deque</span>&lt;<span class="keyword">int</span>&gt;d2(d1.<span class="built_in">begin</span>(), d1.<span class="built_in">end</span>());<span class="comment">//区间赋值</span></span><br><span class="line">printdeque(d2);</span><br><span class="line"><span class="built_in">deque</span>&lt;<span class="keyword">int</span>&gt;d4(d2);<span class="comment">//拷贝构造</span></span><br><span class="line">printdeque(d4);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test01();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="deque赋值"><a href="#deque赋值" class="headerlink" title="deque赋值"></a>deque赋值</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;deque&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//deque容器赋值</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printdequ</span><span class="params">(<span class="keyword">const</span> <span class="built_in">deque</span>&lt;<span class="keyword">int</span>&gt;&amp;d)</span><span class="comment">//不可修改数据，只读</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">deque</span>&lt;<span class="keyword">int</span>&gt;::const_iterator it = d.<span class="built_in">begin</span>();it != d.<span class="built_in">end</span>();it++)<span class="comment">//迭代器也要修改</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; *it &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">deque</span>&lt;<span class="keyword">int</span>&gt; d1;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">10</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">d1.push_back(i);</span><br><span class="line">&#125;</span><br><span class="line">printdequ(d1);</span><br><span class="line"><span class="built_in">deque</span>&lt;<span class="keyword">int</span>&gt;d2;</span><br><span class="line">d2 = d1;</span><br><span class="line">printdequ(d2);</span><br><span class="line"></span><br><span class="line"><span class="comment">//assign赋值</span></span><br><span class="line"><span class="built_in">deque</span>&lt;<span class="keyword">int</span>&gt;d3;</span><br><span class="line">d3.assign(d1.<span class="built_in">begin</span>(), d1.<span class="built_in">end</span>());</span><br><span class="line">printdequ(d3);</span><br><span class="line"></span><br><span class="line"><span class="built_in">deque</span>&lt;<span class="keyword">int</span>&gt;d4;</span><br><span class="line">d4.assign(<span class="number">10</span>, <span class="number">100</span>);</span><br><span class="line">printdequ(d4);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test02();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="deque容器容量和大小"><a href="#deque容器容量和大小" class="headerlink" title="deque容器容量和大小"></a>deque容器容量和大小</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test03</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">deque</span>&lt;<span class="keyword">int</span>&gt; d1;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">10</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">d1.push_back(i);</span><br><span class="line">&#125;</span><br><span class="line">printdeq(d1);</span><br><span class="line"><span class="keyword">if</span> (d1.empty())</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"空"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"不空"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; d1.<span class="built_in">size</span>() &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//10</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//deque容器没有容量概念 </span></span><br><span class="line"><span class="comment">//重新指定大小,并填充</span></span><br><span class="line">d1.resize(<span class="number">15</span>, <span class="number">1</span>);<span class="comment">//空位置用1填充</span></span><br><span class="line">printdeq(d1);</span><br><span class="line"></span><br><span class="line">d1.resize(<span class="number">5</span>);<span class="comment">//删除多余位置</span></span><br><span class="line">printdeq(d1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="deque插入删除"><a href="#deque插入删除" class="headerlink" title="deque插入删除"></a>deque插入删除</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test04</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">deque</span>&lt;<span class="keyword">int</span>&gt; d1;</span><br><span class="line"><span class="comment">//尾插</span></span><br><span class="line">d1.push_back(<span class="number">10</span>);</span><br><span class="line">d1.push_back(<span class="number">20</span>);</span><br><span class="line"><span class="comment">//头插</span></span><br><span class="line">d1.push_front(<span class="number">5</span>);</span><br><span class="line">d1.push_front(<span class="number">6</span>);</span><br><span class="line">printde(d1);<span class="comment">//6 5 10 20</span></span><br><span class="line">d1.pop_back();<span class="comment">//尾删</span></span><br><span class="line">printde(d1);<span class="comment">//6 5 10</span></span><br><span class="line">d1.pop_front();<span class="comment">//头删</span></span><br><span class="line">printde(d1);<span class="comment">//5 10</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test05</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">deque</span>&lt;<span class="keyword">int</span>&gt;d2;</span><br><span class="line"><span class="comment">//尾插</span></span><br><span class="line">d2.push_back(<span class="number">10</span>);</span><br><span class="line">d2.push_back(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//头插</span></span><br><span class="line">d2.push_front(<span class="number">100</span>);</span><br><span class="line">d2.push_front(<span class="number">200</span>);</span><br><span class="line"></span><br><span class="line">printde(d2);</span><br><span class="line"><span class="comment">//insert插入</span></span><br><span class="line">d2.insert(d2.<span class="built_in">begin</span>(), <span class="number">1000</span>);</span><br><span class="line">printde(d2);<span class="comment">//1000 200 100 10 20</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">deque</span>&lt;<span class="keyword">int</span>&gt;d3;</span><br><span class="line">d3.push_back(<span class="number">1</span>);</span><br><span class="line">d3.push_back(<span class="number">2</span>);</span><br><span class="line">d3.push_back(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">d2.insert(d2.<span class="built_in">begin</span>(), d3.<span class="built_in">begin</span>(), d3.<span class="built_in">end</span>());<span class="comment">//区间插入</span></span><br><span class="line">printde(d2);<span class="comment">//1 2 3 1000 200 100 10 20</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test06</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">deque</span>&lt;<span class="keyword">int</span>&gt;d4;</span><br><span class="line"><span class="comment">//尾插</span></span><br><span class="line">d4.push_back(<span class="number">10</span>);</span><br><span class="line">d4.push_back(<span class="number">20</span>);</span><br><span class="line">d4.push_front(<span class="number">100</span>);</span><br><span class="line">d4.push_front(<span class="number">200</span>);</span><br><span class="line"><span class="comment">//删除</span></span><br><span class="line"><span class="built_in">deque</span>&lt;<span class="keyword">int</span>&gt;::iterator it = d4.<span class="built_in">begin</span>();</span><br><span class="line">it++;<span class="comment">//迭代器偏移</span></span><br><span class="line">d4.erase(it);</span><br><span class="line">printde(d4);</span><br><span class="line"><span class="comment">//清空</span></span><br><span class="line">d4.<span class="built_in">clear</span>();</span><br><span class="line">printde(d4);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="deque数据存取"><a href="#deque数据存取" class="headerlink" title="deque数据存取"></a>deque数据存取</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">deque</span>&lt;<span class="keyword">int</span>&gt;d1;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">d1.push_back(i);</span><br><span class="line">&#125;</span><br><span class="line">d1.push_front(<span class="number">100</span>);</span><br><span class="line">d1.push_front(<span class="number">200</span>);</span><br><span class="line">d1.push_front(<span class="number">300</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//通过[]方式访问元素</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; d1.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; d1[i] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="comment">//通过at方式访问元素</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; d1.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; d1.at(i) &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"第一个元素="</span> &lt;&lt; d1.front() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"最后一个元素="</span> &lt;&lt; d1.back() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="deque排序"><a href="#deque排序" class="headerlink" title="deque排序"></a>deque排序</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;deque&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;//标准算法头文件</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//dequec排序</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printd</span><span class="params">(<span class="keyword">const</span> <span class="built_in">deque</span>&lt;<span class="keyword">int</span>&gt;&amp;d)</span><span class="comment">//不可修改数据，只读</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">deque</span>&lt;<span class="keyword">int</span>&gt;::const_iterator it = d.<span class="built_in">begin</span>();it != d.<span class="built_in">end</span>();it++)<span class="comment">//迭代器也要修改</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; *it &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test07</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">deque</span>&lt;<span class="keyword">int</span>&gt;d4;</span><br><span class="line">d4.push_back(<span class="number">10</span>);</span><br><span class="line">d4.push_back(<span class="number">20</span>);</span><br><span class="line">d4.push_front(<span class="number">100</span>);</span><br><span class="line">d4.push_front(<span class="number">200</span>);</span><br><span class="line">printd(d4);</span><br><span class="line"><span class="comment">//排序-默认升序</span></span><br><span class="line"><span class="comment">//对于支持随机访问的迭代器容器，都可以用sort算法对其进行排序</span></span><br><span class="line"><span class="comment">//vector容器也可以利用sort进行排序</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"排序后"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">sort(d4.<span class="built_in">begin</span>(), d4.<span class="built_in">end</span>());</span><br><span class="line">printd(d4);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test07();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++基础入门 </category>
          
          <category> 提高语法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>单链表</title>
      <link href="posts/71c610d3/"/>
      <url>posts/71c610d3/</url>
      
        <content type="html"><![CDATA[<h2 id="创建单链表"><a href="#创建单链表" class="headerlink" title="创建单链表"></a>创建单链表</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="comment">/* 创建一个单链表 */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> m_key;</span><br><span class="line">    ListNode* next;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">createList</span><span class="params">(ListNode* pHead)</span></span>&#123;</span><br><span class="line">    ListNode* p = pHead;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">10</span>; ++i) &#123;</span><br><span class="line">        ListNode* pNewNode = <span class="keyword">new</span> ListNode;<span class="comment">//当i=2时pNewNode的地址已经和i=1不一样了，以此往复不断创造新的节点</span></span><br><span class="line">        pNewNode-&gt;m_key = i; <span class="comment">// 将新节点的值赋值为i</span></span><br><span class="line">        pNewNode-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">        p-&gt;next = pNewNode; <span class="comment">// 上一个节点指向这个新建立的节点(头节点地址指向新的节点)</span></span><br><span class="line">        p = pNewNode; <span class="comment">// p节点指向这个新的节点</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ListNode* head = <span class="literal">NULL</span>;</span><br><span class="line">    head = <span class="keyword">new</span> ListNode;</span><br><span class="line">    head-&gt;m_key = <span class="number">0</span>;</span><br><span class="line">    head-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    createList(head);</span><br><span class="line">ListNode *p = head-&gt;next;</span><br><span class="line"><span class="keyword">while</span> (p!=<span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; p-&gt;m_key;<span class="comment">//打印出了123456789</span></span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="拆分链表"><a href="#拆分链表" class="headerlink" title="拆分链表"></a>拆分链表</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="comment">/* 将一个带头结点的单链表A分解为两个带头结点的单链表A和B，使得A表中含有原表中序号为奇数的元素，</span></span><br><span class="line"><span class="comment">而B表中含有原表中序号为偶数的元素，且保持其相对顺序不变。 */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> m_key;</span><br><span class="line">ListNode* next;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">createList</span><span class="params">(ListNode* pHead)</span> </span>&#123;</span><br><span class="line">ListNode* p = pHead;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">10</span>; ++i) &#123;</span><br><span class="line">ListNode* pNewNode = <span class="keyword">new</span> ListNode;<span class="comment">//当i=2时pNewNode的地址已经和i=1不一样了，以此往复不断创造新的节点</span></span><br><span class="line">pNewNode-&gt;m_key = i; <span class="comment">// 将新节点的值赋值为i</span></span><br><span class="line">pNewNode-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">p-&gt;next = pNewNode; <span class="comment">// 上一个节点指向这个新建立的节点(头节点地址指向新的节点)</span></span><br><span class="line">p = pNewNode; <span class="comment">// p节点指向这个新的节点</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">disCreat</span><span class="params">(ListNode* A)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//将表A中结点按序号的奇偶性分解到表A或表B中</span></span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;  <span class="comment">//i记录表A中结点的序号</span></span><br><span class="line">ListNode* B, *p;</span><br><span class="line">B = <span class="keyword">new</span> ListNode();  <span class="comment">//创建 B 表表头</span></span><br><span class="line">B-&gt;next = <span class="literal">NULL</span>;  <span class="comment">//B 表的初始化</span></span><br><span class="line">ListNode *ra = A, *rb = B;  <span class="comment">//ra和rb将分别指向将创建的A表和B表的尾结点</span></span><br><span class="line">p = A-&gt;next;  <span class="comment">//p为链表工作指针，指向待分解的结点</span></span><br><span class="line">A-&gt;next = <span class="literal">NULL</span>;  <span class="comment">//置空新的 A 表</span></span><br><span class="line"><span class="keyword">while</span> (p != <span class="literal">NULL</span>) &#123;</span><br><span class="line">i++;  <span class="comment">//序号加 1</span></span><br><span class="line"><span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">0</span>) &#123;  <span class="comment">//处理序号为偶数的链表结点</span></span><br><span class="line">rb-&gt;next = p;  <span class="comment">// 若B表尾描入新结点</span></span><br><span class="line">rb = p;  <span class="comment">//rb指向新的尾结点</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;    <span class="comment">//处理原序号为奇数的结点</span></span><br><span class="line">ra-&gt;next = p;  <span class="comment">//在A表尾插入新结点</span></span><br><span class="line">ra = p;</span><br><span class="line">&#125;</span><br><span class="line">p = p-&gt;next;  <span class="comment">//将p恢复为指向新的待处理结点</span></span><br><span class="line">&#125;  <span class="comment">//while 结束</span></span><br><span class="line">ra-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">rb-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ListNode* head = <span class="literal">NULL</span>;</span><br><span class="line">head = <span class="keyword">new</span> ListNode;</span><br><span class="line">head-&gt;m_key = <span class="number">0</span>;</span><br><span class="line">head-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">createList(head);</span><br><span class="line">disCreat(head);<span class="comment">//自我引用，每找到返回方法</span></span><br><span class="line">ListNode *p = head-&gt;next;</span><br><span class="line"><span class="keyword">while</span> (p != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; p-&gt;m_key;<span class="comment">//打印出了13579</span></span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>递归</title>
      <link href="posts/c6654282/"/>
      <url>posts/c6654282/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.bilibili.com/video/BV194411f71o?t=263.0" target="_blank" rel="noopener">什么是递归</a></p><h2 id="递归求和"><a href="#递归求和" class="headerlink" title="递归求和"></a>递归求和</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="comment">//递归求1+2+...+100的和</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span>(sum(n - <span class="number">1</span>) + n);<span class="comment">//100+99+....</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n = <span class="number">100</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; sum(n);<span class="comment">//5050</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="递归数列求和"><a href="#递归数列求和" class="headerlink" title="递归数列求和"></a>递归数列求和</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="comment">//递归实现数列求和</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> A[],<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> A[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> sum(A,n<span class="number">-1</span>)+A[n<span class="number">-1</span>];<span class="comment">//数列从A[0]开始，A[n-1]结束</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> A[<span class="number">5</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> s = sum(A, <span class="number">5</span>);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; s;<span class="comment">//15</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>永遇乐·京口北固亭怀古</title>
      <link href="posts/d6e7abf9/"/>
      <url>posts/d6e7abf9/</url>
      
        <content type="html"><![CDATA[<h2 id="永遇乐·京口北固亭怀古"><a href="#永遇乐·京口北固亭怀古" class="headerlink" title="永遇乐·京口北固亭怀古"></a>永遇乐·京口北固亭怀古</h2><h4 id="辛弃疾"><a href="#辛弃疾" class="headerlink" title="辛弃疾"></a>辛弃疾</h4><p>千古江山，英雄无觅孙仲谋处。<br>舞榭歌台，风流总被雨打风吹去。<br>斜阳草树，寻常巷陌，人道寄奴曾住。<br>想当年，金戈铁马，气吞万里如虎。</p><p>元嘉草草，封狼居胥，赢得仓皇北顾。<br>四十三年，望中犹记，烽火扬州路。<br>可堪回首，佛狸祠下，一片神鸦社鼓。<br>凭谁问：廉颇老矣，尚能饭否？</p>]]></content>
      
      
      <categories>
          
          <category> 诗与远方 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>春日忆李白</title>
      <link href="posts/f084cc58/"/>
      <url>posts/f084cc58/</url>
      
        <content type="html"><![CDATA[<h2 id="春日忆李白"><a href="#春日忆李白" class="headerlink" title="春日忆李白"></a>春日忆李白</h2><h4 id="杜甫"><a href="#杜甫" class="headerlink" title="杜甫"></a>杜甫</h4><p>白也诗无敌，飘然思不群。<br>清新庾开府，俊逸鲍参军。<br>渭北春天树，江东日暮云。<br>何时一樽酒，重与细论文。</p>]]></content>
      
      
      <categories>
          
          <category> 诗与远方 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>独立按键控制LCD</title>
      <link href="posts/f900622b/"/>
      <url>posts/f900622b/</url>
      
        <content type="html"><![CDATA[<h2 id="四个按键分别控制上下限加减"><a href="#四个按键分别控制上下限加减" class="headerlink" title="四个按键分别控制上下限加减"></a>四个按键分别控制上下限加减</h2><video src=' /images/单片机/独立按键控制显示/独立按键显示控制.mp4' type='video/mp4' controls='controls'  width='100%' height='100%'></video><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">"reg51.h"</span></span></span><br><span class="line">sbit RS=P3^<span class="number">0</span>;<span class="comment">//硬件连接P3口</span></span><br><span class="line">sbit RW=P3^<span class="number">1</span>;</span><br><span class="line">sbit E=P3^<span class="number">2</span>;</span><br><span class="line"><span class="comment">//端口设置</span></span><br><span class="line">sbit keyo=P1^<span class="number">0</span>;</span><br><span class="line">sbit keyt=P1^<span class="number">1</span>;</span><br><span class="line">sbit keyr=P1^<span class="number">2</span>;</span><br><span class="line">sbit keyf=P1^<span class="number">3</span>;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> k=<span class="number">0</span>,flago=<span class="number">0</span>,flagt=<span class="number">0</span>,flagr=<span class="number">0</span>,flagf=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> s1[]=&#123;<span class="string">"LOW:-"</span>&#125;;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> s2[]=&#123;<span class="string">"HIGHT:+"</span>&#125;;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> low=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> hight=<span class="number">10</span>;<span class="comment">//初始设置</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">120</span>;j++);<span class="comment">//赋空值延时</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//写数据</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">writedat</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> dat)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">RS=<span class="number">1</span>;</span><br><span class="line">RW=<span class="number">0</span>;</span><br><span class="line">E=<span class="number">0</span>;<span class="comment">//表示向LCM写入指令</span></span><br><span class="line">P2=dat;<span class="comment">//P2 IO口</span></span><br><span class="line"><span class="built_in">delay</span>(<span class="number">7</span>);</span><br><span class="line">E=<span class="number">1</span>;</span><br><span class="line"><span class="built_in">delay</span>(<span class="number">7</span>);</span><br><span class="line">E=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//写命令</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">writecom</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> com)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">RS=<span class="number">0</span>;</span><br><span class="line">RW=<span class="number">0</span>;</span><br><span class="line">E=<span class="number">0</span>;<span class="comment">//表示向LCM写入指令</span></span><br><span class="line">P2=com;<span class="comment">//P2 IO口</span></span><br><span class="line"><span class="built_in">delay</span>(<span class="number">5</span>);</span><br><span class="line">E=<span class="number">1</span>;</span><br><span class="line"><span class="built_in">delay</span>(<span class="number">5</span>);</span><br><span class="line">E=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initlcd</span><span class="params">()</span><span class="comment">//初始化</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">writecom(<span class="number">0x38</span>);<span class="comment">//写入命令</span></span><br><span class="line">writecom(<span class="number">0x0c</span>);<span class="comment">//设置开,不显示光标</span></span><br><span class="line">writecom(<span class="number">0x06</span>);<span class="comment">//写字符+1</span></span><br><span class="line">writecom(<span class="number">0x01</span>);<span class="comment">//显示清零</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">keyone</span><span class="params">()</span><span class="comment">//按键函数，增加温度下限值的</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="keyword">if</span>(keyo==<span class="number">0</span>&amp;&amp;flago==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">flago=<span class="number">1</span>;<span class="comment">//按下按键</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flago==<span class="number">1</span>&amp;&amp;keyo==<span class="number">1</span>)<span class="comment">//检测是否弹起</span></span><br><span class="line">&#123;</span><br><span class="line">   low++;</span><br><span class="line">   flago=<span class="number">0</span>;</span><br><span class="line">&#125;  <span class="comment">//快速消抖</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">keytwo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="keyword">if</span>(keyt==<span class="number">0</span>&amp;&amp;flagt==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">flagt=<span class="number">1</span>;<span class="comment">//按下按键</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flagt==<span class="number">1</span>&amp;&amp;keyt==<span class="number">1</span>)<span class="comment">//检测是否弹起</span></span><br><span class="line">&#123;</span><br><span class="line">   low--;<span class="comment">//低温减少</span></span><br><span class="line">   flagt=<span class="number">0</span>;</span><br><span class="line">&#125;  <span class="comment">//快速消抖</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">keythree</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="keyword">if</span>(keyr==<span class="number">0</span>&amp;&amp;flagr==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">flagr=<span class="number">1</span>;<span class="comment">//按下按键</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flagr==<span class="number">1</span>&amp;&amp;keyr==<span class="number">1</span>)<span class="comment">//检测是否弹起</span></span><br><span class="line">&#123;</span><br><span class="line">   hight++;</span><br><span class="line">   flagr=<span class="number">0</span>;</span><br><span class="line">&#125;  <span class="comment">//快速消抖</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">keyfour</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="keyword">if</span>(keyf==<span class="number">0</span>&amp;&amp;flagf==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">flagf=<span class="number">1</span>;<span class="comment">//按下按键</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flagf==<span class="number">1</span>&amp;&amp;keyf==<span class="number">1</span>)<span class="comment">//检测是否弹起</span></span><br><span class="line">&#123;</span><br><span class="line">   hight--;</span><br><span class="line">   flagf=<span class="number">0</span>;</span><br><span class="line">&#125;  <span class="comment">//快速消抖</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">   <span class="keyword">unsigned</span> <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">   writecom(<span class="number">0x80</span>);</span><br><span class="line">   <span class="keyword">for</span>(k=<span class="number">0</span>;k&lt;<span class="number">5</span>;k++)</span><br><span class="line">     &#123;</span><br><span class="line">       writedat(s1[k]);  <span class="comment">//第一行写入temp：</span></span><br><span class="line">     &#125;</span><br><span class="line"><span class="built_in">delay</span>(<span class="number">5</span>);</span><br><span class="line">writecom(<span class="number">0x80</span>+<span class="number">5</span>);</span><br><span class="line">keyone();</span><br><span class="line">keytwo();</span><br><span class="line">writedat(<span class="number">0x30</span>+low/<span class="number">10</span>);<span class="comment">//写入char变量</span></span><br><span class="line">writedat(<span class="number">0x30</span>+low%<span class="number">10</span>);</span><br><span class="line">   writecom(<span class="number">0x80</span>+<span class="number">0x40</span>);<span class="comment">//换行</span></span><br><span class="line">    <span class="keyword">for</span>(k=<span class="number">0</span>;k&lt;<span class="number">7</span>;k++)</span><br><span class="line">     &#123;</span><br><span class="line">       writedat(s2[k]);  <span class="comment">//第一行写入temp：</span></span><br><span class="line">     &#125;</span><br><span class="line">writecom(<span class="number">0x80</span>+<span class="number">0x40</span>+<span class="number">7</span>);</span><br><span class="line">keythree();</span><br><span class="line">keyfour();</span><br><span class="line">    writedat(<span class="number">0x30</span>+hight/<span class="number">10</span>);</span><br><span class="line">writedat(<span class="number">0x30</span>+hight%<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; initlcd();</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">display</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="通过按键切换控制加减"><a href="#通过按键切换控制加减" class="headerlink" title="通过按键切换控制加减"></a>通过按键切换控制加减</h2><video src=' /images/单片机/独立按键控制显示/显示控制改进.mp4' type='video/mp4' controls='controls'  width='100%' height='100%'></video><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">"reg51.h"</span></span></span><br><span class="line">sbit RS=P3^<span class="number">0</span>;<span class="comment">//硬件连接P3口</span></span><br><span class="line">sbit RW=P3^<span class="number">1</span>;</span><br><span class="line">sbit E=P3^<span class="number">2</span>;</span><br><span class="line">sbit keyo=P1^<span class="number">0</span>;</span><br><span class="line">sbit keyt=P1^<span class="number">1</span>;</span><br><span class="line">sbit keyr=P1^<span class="number">2</span>;</span><br><span class="line">sbit deng=P1^<span class="number">7</span>;<span class="comment">//二极管接口</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> k=<span class="number">0</span>,flago=<span class="number">0</span>,flagt=<span class="number">0</span>,flagr=<span class="number">0</span>,flagf=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> flag=<span class="number">0</span>,er=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> s1[]=&#123;<span class="string">"LOW:-"</span>&#125;;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> s2[]=&#123;<span class="string">"HIGHT:+"</span>&#125;;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> low=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> hight=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> x;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">120</span>;j++);<span class="comment">//赋空值延时</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//写数据</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">writedat</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> dat)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">RS=<span class="number">1</span>;</span><br><span class="line">RW=<span class="number">0</span>;</span><br><span class="line">E=<span class="number">0</span>;<span class="comment">//表示向LCM写入指令</span></span><br><span class="line">P2=dat;<span class="comment">//P2 IO口</span></span><br><span class="line"><span class="built_in">delay</span>(<span class="number">7</span>);</span><br><span class="line">E=<span class="number">1</span>;</span><br><span class="line"><span class="built_in">delay</span>(<span class="number">7</span>);</span><br><span class="line">E=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//写命令</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">writecom</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> com)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">RS=<span class="number">0</span>;</span><br><span class="line">RW=<span class="number">0</span>;</span><br><span class="line">E=<span class="number">0</span>;<span class="comment">//表示向LCM写入指令</span></span><br><span class="line">P2=com;<span class="comment">//P2 IO口</span></span><br><span class="line"><span class="built_in">delay</span>(<span class="number">5</span>);</span><br><span class="line">E=<span class="number">1</span>;</span><br><span class="line"><span class="built_in">delay</span>(<span class="number">5</span>);</span><br><span class="line">E=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initlcd</span><span class="params">()</span><span class="comment">//初始化</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">writecom(<span class="number">0x38</span>);<span class="comment">//写入命令</span></span><br><span class="line">writecom(<span class="number">0x0c</span>);<span class="comment">//设置开,不显示光标</span></span><br><span class="line">writecom(<span class="number">0x06</span>);<span class="comment">//写字符+1</span></span><br><span class="line">writecom(<span class="number">0x01</span>);<span class="comment">//显示清零</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">keyone</span><span class="params">()</span><span class="comment">//切换函数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(keyo==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">while</span>(keyo==<span class="number">0</span>);</span><br><span class="line">        flag=~flag;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">if</span>(flag)</span><br><span class="line">&#123;</span><br><span class="line">    deng=<span class="number">1</span>;<span class="comment">//亮</span></span><br><span class="line">er=<span class="number">1</span>;</span><br><span class="line">&#125; </span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">   deng=<span class="number">0</span>;<span class="comment">//灭</span></span><br><span class="line">   er=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">jiaqiehuan</span><span class="params">()</span><span class="comment">//+</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   keyone();</span><br><span class="line">   <span class="keyword">if</span>(er==<span class="number">1</span>)</span><br><span class="line">   &#123;</span><br><span class="line">     <span class="keyword">if</span>(keyr==<span class="number">0</span>&amp;&amp;flago==<span class="number">0</span>)<span class="comment">//3接口负责+</span></span><br><span class="line">&#123;</span><br><span class="line">flago=<span class="number">1</span>;<span class="comment">//按下按键</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flago==<span class="number">1</span>&amp;&amp;keyr==<span class="number">1</span>)<span class="comment">//检测是否弹起</span></span><br><span class="line">&#123;</span><br><span class="line">   low++;</span><br><span class="line">   flago=<span class="number">0</span>;</span><br><span class="line">&#125;  <span class="comment">//快速消抖</span></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">if</span>(keyr==<span class="number">0</span>&amp;&amp;flagr==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">flagr=<span class="number">1</span>;<span class="comment">//按下按键</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flagr==<span class="number">1</span>&amp;&amp;keyr==<span class="number">1</span>)<span class="comment">//检测是否弹起</span></span><br><span class="line">&#123;</span><br><span class="line">   hight++;</span><br><span class="line">   flagr=<span class="number">0</span>;</span><br><span class="line">&#125;  <span class="comment">//快速消抖</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">jianhuan</span><span class="params">()</span><span class="comment">//-</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    keyone();</span><br><span class="line">   <span class="keyword">if</span>(er==<span class="number">1</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">if</span>(keyt==<span class="number">0</span>&amp;&amp;flagt==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">flagt=<span class="number">1</span>;<span class="comment">//按下按键</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flagt==<span class="number">1</span>&amp;&amp;keyt==<span class="number">1</span>)<span class="comment">//检测是否弹起</span></span><br><span class="line">&#123;</span><br><span class="line">   low--;<span class="comment">//低温减少</span></span><br><span class="line">   flagt=<span class="number">0</span>;</span><br><span class="line">&#125;  <span class="comment">//快速消抖</span></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">  <span class="keyword">if</span>(keyt==<span class="number">0</span>&amp;&amp;flagf==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">flagf=<span class="number">1</span>;<span class="comment">//按下按键</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flagf==<span class="number">1</span>&amp;&amp;keyt==<span class="number">1</span>)<span class="comment">//检测是否弹起</span></span><br><span class="line">&#123;</span><br><span class="line">   hight--;</span><br><span class="line">   flagf=<span class="number">0</span>;</span><br><span class="line">&#125;  <span class="comment">//快速消抖</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">   <span class="keyword">unsigned</span> <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">   writecom(<span class="number">0x80</span>);</span><br><span class="line">   <span class="keyword">for</span>(k=<span class="number">0</span>;k&lt;<span class="number">5</span>;k++)</span><br><span class="line">     &#123;</span><br><span class="line">       writedat(s1[k]);  <span class="comment">//第一行写入temp：</span></span><br><span class="line">     &#125;</span><br><span class="line"><span class="built_in">delay</span>(<span class="number">5</span>);</span><br><span class="line">writecom(<span class="number">0x80</span>+<span class="number">5</span>);</span><br><span class="line">jiaqiehuan();</span><br><span class="line">jianhuan();</span><br><span class="line">writedat(<span class="number">0x30</span>+low/<span class="number">10</span>);</span><br><span class="line">writedat(<span class="number">0x30</span>+low%<span class="number">10</span>);</span><br><span class="line">   writecom(<span class="number">0x80</span>+<span class="number">0x40</span>);<span class="comment">//换行</span></span><br><span class="line">    <span class="keyword">for</span>(k=<span class="number">0</span>;k&lt;<span class="number">7</span>;k++)</span><br><span class="line">     &#123;</span><br><span class="line">       writedat(s2[k]);  <span class="comment">//第一行写入temp：</span></span><br><span class="line">     &#125;</span><br><span class="line">writecom(<span class="number">0x80</span>+<span class="number">0x40</span>+<span class="number">7</span>);</span><br><span class="line">jiaqiehuan();</span><br><span class="line">jianhuan();</span><br><span class="line">    writedat(<span class="number">0x30</span>+hight/<span class="number">10</span>);</span><br><span class="line">writedat(<span class="number">0x30</span>+hight%<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    initlcd();</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">keyone();<span class="comment">//在循环函数中，否则无法切换</span></span><br><span class="line"><span class="built_in">display</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 单片机学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>string容器</title>
      <link href="posts/d1b5b4b6/"/>
      <url>posts/d1b5b4b6/</url>
      
        <content type="html"><![CDATA[<h2 id="string构造函数"><a href="#string构造函数" class="headerlink" title="string构造函数"></a>string构造函数</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">string</span> s1;<span class="comment">//默认构造函数</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> *str = <span class="string">"hello word"</span>;</span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">s2</span><span class="params">(str)</span></span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; s2 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">s3</span><span class="params">(<span class="number">10</span>, <span class="string">'a'</span>)</span></span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; s3 &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//10个a</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test1();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="string赋值"><a href="#string赋值" class="headerlink" title="string赋值"></a>string赋值</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">string</span> str1;</span><br><span class="line">str1 = <span class="string">"hello word"</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; str1 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">string</span> str2;</span><br><span class="line">str2.assign(<span class="string">"word ppt asses"</span>);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; str2 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">string</span> str3;</span><br><span class="line"><span class="built_in">string</span> str4;</span><br><span class="line">str3.assign(<span class="string">"helllo word"</span>,<span class="number">2</span>);<span class="comment">//he</span></span><br><span class="line">str4.assign(str1, <span class="number">2</span>);<span class="comment">//llo word</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; str3 &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; str4 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">string</span> str5;</span><br><span class="line">str5.assign(<span class="number">5</span>,<span class="string">'a'</span>);<span class="comment">//aaaaa</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; str5 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test2();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="string字符串拼接"><a href="#string字符串拼接" class="headerlink" title="string字符串拼接"></a>string字符串拼接</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test3</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">string</span> str1;</span><br><span class="line">str1 = <span class="string">"我"</span>;</span><br><span class="line">str1 += <span class="string">"爱玩游戏"</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; str1 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">string</span> str2;</span><br><span class="line">str2 = <span class="string">"北京game"</span>;</span><br><span class="line">str1 += str2; </span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; str1&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">string</span> str3=<span class="string">"shhsh"</span>;</span><br><span class="line">str3.append(str2);<span class="comment">//shhsh北京</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; str3 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">string</span> str4;</span><br><span class="line">str4.append(str2,<span class="number">0</span>,<span class="number">4</span>);<span class="comment">//北京，汉字占2个字节,截取字符</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; str4 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="string查找和替换"><a href="#string查找和替换" class="headerlink" title="string查找和替换"></a>string查找和替换</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查找</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test4</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">string</span> str1 = <span class="string">"adndndn"</span>;</span><br><span class="line"><span class="keyword">int</span> post=str1.<span class="built_in">find</span>(<span class="string">"n"</span>);<span class="comment">//查找成功返回字符位置2，从左往右查找，否则返回-1</span></span><br><span class="line"><span class="keyword">int</span> flag = str1.rfind(<span class="string">"n"</span>);<span class="comment">//查找成功返回字符位置6,从右往左查找</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; post &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; flag &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//替换</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test04</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">string</span> str2 = <span class="string">"safewagjom"</span>;</span><br><span class="line">str2.replace(<span class="number">1</span>, <span class="number">3</span>, <span class="string">"11111"</span>);<span class="comment">//超出位置，从1号位置起全部替换</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; str2 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="string字符串比较"><a href="#string字符串比较" class="headerlink" title="string字符串比较"></a>string字符串比较</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//字符串比较是按字符的ASCII码进行对比</span></span><br><span class="line"><span class="comment">//= 返回 0</span></span><br><span class="line"><span class="comment">//&gt; 返回 1</span></span><br><span class="line"><span class="comment">//&lt; 返回 - 1</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test5</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">string</span> str1 = <span class="string">"abcde"</span>;</span><br><span class="line"><span class="built_in">string</span> str2 = <span class="string">"abcdf"</span>;</span><br><span class="line"><span class="keyword">int</span> flag = str1.compare(str2);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; flag &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//-1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="string字符存取"><a href="#string字符存取" class="headerlink" title="string字符存取"></a>string字符存取</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test6</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">string</span> str1 = <span class="string">"abcdefghijk"</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str1.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//cout &lt;&lt; str1[i] &lt;&lt; endl;</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; str1.at(i) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">str1[<span class="number">0</span>] = <span class="string">'x'</span>;<span class="comment">//xbcdefghijk</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; str1 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="string插入和删除"><a href="#string插入和删除" class="headerlink" title="string插入和删除"></a>string插入和删除</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//字符串插入和删除</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test7</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">string</span> str = <span class="string">"word"</span>;</span><br><span class="line">str.insert(<span class="number">1</span>, <span class="string">"he"</span>);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; str &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//wheord,其实下标从零开始</span></span><br><span class="line">str.erase(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; str&lt;&lt;<span class="built_in">endl</span>;<span class="comment">//删除,word</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="string子串"><a href="#string子串" class="headerlink" title="string子串"></a>string子串</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test8</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">string</span> str1 = <span class="string">"ssbnanng"</span>;</span><br><span class="line"><span class="built_in">string</span> substr = str1.substr(<span class="number">1</span>, <span class="number">3</span>);<span class="comment">//截取sbn</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; substr &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test08</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">string</span> email = <span class="string">"hello@sina.com"</span>;</span><br><span class="line"><span class="keyword">int</span> pos = email.<span class="built_in">find</span>(<span class="string">"@"</span>);</span><br><span class="line"><span class="built_in">string</span> username = email.substr(<span class="number">0</span>, pos);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"username: "</span> &lt;&lt; username &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++基础入门 </category>
          
          <category> 提高语法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>STL基础</title>
      <link href="posts/6e08d78f/"/>
      <url>posts/6e08d78f/</url>
      
        <content type="html"><![CDATA[<h2 id="存放数据"><a href="#存放数据" class="headerlink" title="存放数据"></a>存放数据</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;//标准算法头文件</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">myprint</span><span class="params">(<span class="keyword">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; p;</span><br><span class="line">p.push_back(<span class="number">10</span>);</span><br><span class="line">p.push_back(<span class="number">20</span>);</span><br><span class="line">p.push_back(<span class="number">30</span>);</span><br><span class="line">p.push_back(<span class="number">40</span>);</span><br><span class="line"><span class="comment">//第一种遍历方法</span></span><br><span class="line"><span class="comment">/*for (vector&lt;int&gt;::iterator i=p.begin();i!= p.end(); i++)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">cout &lt;&lt; *i &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"><span class="comment">//第二种遍历方法</span></span><br><span class="line">for_each(p.<span class="built_in">begin</span>(), p.<span class="built_in">end</span>(), myprint);<span class="comment">//第三个参数只是函数名，回调</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="存放自定义数据类型"><a href="#存放自定义数据类型" class="headerlink" title="存放自定义数据类型"></a>存放自定义数据类型</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">person(<span class="built_in">string</span> name, <span class="keyword">int</span> age)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;M_name = name;</span><br><span class="line"><span class="keyword">this</span>-&gt;M_age = age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">string</span> M_name;</span><br><span class="line"><span class="keyword">int</span> M_age;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">vector</span>&lt;person&gt; v;</span><br><span class="line"><span class="function">person  <span class="title">p1</span><span class="params">(<span class="string">"aaa"</span>, <span class="number">10</span>)</span></span>;</span><br><span class="line"><span class="function">person  <span class="title">p2</span><span class="params">(<span class="string">"bbb"</span>, <span class="number">20</span>)</span></span>;</span><br><span class="line"><span class="function">person  <span class="title">p3</span><span class="params">(<span class="string">"ccc"</span>, <span class="number">30</span>)</span></span>;</span><br><span class="line"><span class="function">person  <span class="title">p4</span><span class="params">(<span class="string">"ddd"</span>, <span class="number">40</span>)</span></span>;</span><br><span class="line"><span class="function">person  <span class="title">p5</span><span class="params">(<span class="string">"fff"</span>, <span class="number">50</span>)</span></span>;</span><br><span class="line">v.push_back(p1);</span><br><span class="line">v.push_back(p2);</span><br><span class="line">v.push_back(p3);</span><br><span class="line">v.push_back(p4);</span><br><span class="line">v.push_back(p5);</span><br><span class="line"><span class="comment">//遍历容器中的数据</span></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">vector</span>&lt;person&gt;::iterator it = v.<span class="built_in">begin</span>();it != v.<span class="built_in">end</span>();it++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"姓名"</span> &lt;&lt; (*it).M_name &lt;&lt; <span class="string">"年龄"</span> &lt;&lt; (*it).M_age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">vector</span>&lt;person*&gt; v;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建数据</span></span><br><span class="line"><span class="function">person <span class="title">p1</span><span class="params">(<span class="string">"aaa"</span>, <span class="number">10</span>)</span></span>;<span class="comment">//存放地址</span></span><br><span class="line"><span class="function">person <span class="title">p2</span><span class="params">(<span class="string">"bbb"</span>, <span class="number">20</span>)</span></span>;</span><br><span class="line"><span class="function">person <span class="title">p3</span><span class="params">(<span class="string">"ccc"</span>, <span class="number">30</span>)</span></span>;</span><br><span class="line"><span class="function">person <span class="title">p4</span><span class="params">(<span class="string">"ddd"</span>, <span class="number">40</span>)</span></span>;</span><br><span class="line"><span class="function">person <span class="title">p5</span><span class="params">(<span class="string">"eee"</span>, <span class="number">50</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">v.push_back(&amp;p1);</span><br><span class="line">v.push_back(&amp;p2);</span><br><span class="line">v.push_back(&amp;p3);</span><br><span class="line">v.push_back(&amp;p4);</span><br><span class="line">v.push_back(&amp;p5);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">vector</span>&lt;person*&gt;::iterator it = v.<span class="built_in">begin</span>();it != v.<span class="built_in">end</span>();it++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"年龄"</span> &lt;&lt; (*it)-&gt;M_age &lt;&lt; <span class="string">"名字"</span> &lt;&lt; (*it)-&gt;M_name &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//(*it)为指针</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//test2();</span></span><br><span class="line">test02();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="嵌套容器"><a href="#嵌套容器" class="headerlink" title="嵌套容器"></a>嵌套容器</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test3</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">vector</span>&lt; <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt;  v;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v1;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v2;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v3;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v4;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">v1.push_back(i + <span class="number">1</span>);</span><br><span class="line">v2.push_back(i + <span class="number">2</span>);</span><br><span class="line">v3.push_back(i + <span class="number">3</span>);</span><br><span class="line">v4.push_back(i + <span class="number">4</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//将容器元素插入到vector v中</span></span><br><span class="line">v.push_back(v1);</span><br><span class="line">v.push_back(v2);</span><br><span class="line">v.push_back(v3);</span><br><span class="line">v.push_back(v4);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;::iterator it = v.<span class="built_in">begin</span>(); it != v.<span class="built_in">end</span>(); it++)<span class="comment">//容器嵌套容器</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//(*it)---表示vector容器</span></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;::iterator vit = (*it).<span class="built_in">begin</span>(); vit != (*it).<span class="built_in">end</span>(); vit++) &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; *vit &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">test3();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++基础入门 </category>
          
          <category> 提高语法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>LM016L显示控制</title>
      <link href="posts/bee0c101/"/>
      <url>posts/bee0c101/</url>
      
        <content type="html"><![CDATA[<p>资料来源于该<a href="https://www.bilibili.com/video/BV1H7411n7AY?p=15" target="_blank" rel="noopener">教程</a></p><h2 id="显示字符和数字"><a href="#显示字符和数字" class="headerlink" title="显示字符和数字"></a>显示字符和数字</h2><p><img src="/images/%E5%8D%95%E7%89%87%E6%9C%BA/LCD%E6%98%BE%E7%A4%BA/%E6%95%B0%E5%AD%97%E5%AD%97%E7%AC%A6.png" alt=""></p><pre class="mermaid">graph TD    writecom---initlcd    writedat---display    writecom---display    delay---display    display---main    initlcd---main</pre><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">"reg51.h"</span></span></span><br><span class="line">sbit RS=P3^<span class="number">0</span>;<span class="comment">//硬件连接P3口</span></span><br><span class="line">sbit RW=P3^<span class="number">1</span>;</span><br><span class="line">sbit E=P3^<span class="number">2</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">120</span>;j++);<span class="comment">//赋空值延时</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//写数据</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">writedat</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> dat)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">RS=<span class="number">1</span>;</span><br><span class="line">RW=<span class="number">0</span>;</span><br><span class="line">E=<span class="number">0</span>;<span class="comment">//表示向LCM写入指令</span></span><br><span class="line">P2=dat;<span class="comment">//P2 IO口</span></span><br><span class="line"><span class="built_in">delay</span>(<span class="number">5</span>);</span><br><span class="line">E=<span class="number">1</span>;</span><br><span class="line">E=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//写命令</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">writecom</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> com)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">RS=<span class="number">0</span>;</span><br><span class="line">RW=<span class="number">0</span>;</span><br><span class="line">E=<span class="number">0</span>;<span class="comment">//表示向LCM写入指令</span></span><br><span class="line">P2=com;<span class="comment">//P2 IO口</span></span><br><span class="line"><span class="built_in">delay</span>(<span class="number">5</span>);</span><br><span class="line">E=<span class="number">1</span>;</span><br><span class="line">E=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initlcd</span><span class="params">()</span><span class="comment">//初始化</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">writecom(<span class="number">0x38</span>);<span class="comment">//写入命令</span></span><br><span class="line">writecom(<span class="number">0x0c</span>);<span class="comment">//设置开,不显示光标</span></span><br><span class="line">writecom(<span class="number">0x06</span>);<span class="comment">//写字符+1</span></span><br><span class="line">writecom(<span class="number">0x01</span>);<span class="comment">//显示清零</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">   <span class="keyword">unsigned</span> <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">   <span class="comment">//writecom(0x80); </span></span><br><span class="line">   <span class="comment">//writecom(0x80+2);//左移两格 </span></span><br><span class="line">   writecom(<span class="number">0x80</span>+<span class="number">2</span>+<span class="number">0x40</span>);<span class="comment">//换行</span></span><br><span class="line">   <span class="built_in">delay</span>(<span class="number">5</span>);</span><br><span class="line">   writedat(<span class="string">'A'</span>);</span><br><span class="line">   <span class="built_in">delay</span>(<span class="number">5</span>);</span><br><span class="line">   writedat(<span class="number">0x32</span>);<span class="comment">//16进制表示2</span></span><br><span class="line">   <span class="built_in">delay</span>(<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; initlcd();</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">display</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="显示字符串"><a href="#显示字符串" class="headerlink" title="显示字符串"></a>显示字符串</h2><p><img src="/images/%E5%8D%95%E7%89%87%E6%9C%BA/LCD%E6%98%BE%E7%A4%BA/%E5%AD%97%E7%AC%A6%E4%B8%B2.png" alt=""></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">"reg51.h"</span></span></span><br><span class="line"></span><br><span class="line">sbit RS=P3^<span class="number">0</span>;<span class="comment">//硬件连接P3口</span></span><br><span class="line">sbit RW=P3^<span class="number">1</span>;</span><br><span class="line">sbit E=P3^<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> s[]=&#123;<span class="string">"Hello word"</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">120</span>;j++);<span class="comment">//赋空值延时</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//写数据</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">writedat</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> dat)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">RS=<span class="number">1</span>;</span><br><span class="line">RW=<span class="number">0</span>;</span><br><span class="line">E=<span class="number">0</span>;<span class="comment">//表示向LCM写入指令</span></span><br><span class="line">P2=dat;<span class="comment">//P2 IO口</span></span><br><span class="line"><span class="built_in">delay</span>(<span class="number">5</span>);</span><br><span class="line">E=<span class="number">1</span>;</span><br><span class="line">E=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//写命令</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">writecom</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> com)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">RS=<span class="number">0</span>;</span><br><span class="line">RW=<span class="number">0</span>;</span><br><span class="line">E=<span class="number">0</span>;<span class="comment">//表示向LCM写入指令</span></span><br><span class="line">P2=com;<span class="comment">//P2 IO口</span></span><br><span class="line"><span class="built_in">delay</span>(<span class="number">5</span>);</span><br><span class="line">E=<span class="number">1</span>;</span><br><span class="line">E=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initlcd</span><span class="params">()</span><span class="comment">//初始化</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">writecom(<span class="number">0x38</span>);<span class="comment">//写入命令</span></span><br><span class="line">writecom(<span class="number">0x0c</span>);<span class="comment">//设置开,不显示光标</span></span><br><span class="line">writecom(<span class="number">0x06</span>);<span class="comment">//写字符+1</span></span><br><span class="line">writecom(<span class="number">0x01</span>);<span class="comment">//显示清零</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">   <span class="keyword">unsigned</span> <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">   <span class="comment">//writecom(0x80); </span></span><br><span class="line">   <span class="comment">//writecom(0x80+2);//左移两格 </span></span><br><span class="line">   writecom(<span class="number">0x80</span>+<span class="number">2</span>+<span class="number">0x40</span>);<span class="comment">//换行</span></span><br><span class="line">   <span class="built_in">delay</span>(<span class="number">5</span>);</span><br><span class="line"><span class="comment">//   writedat('A');</span></span><br><span class="line"><span class="comment">//   delay(5);</span></span><br><span class="line"><span class="comment">//   writedat(0x32);</span></span><br><span class="line"><span class="comment">//   delay(5);</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span>(s[i]!=<span class="string">'\0'</span>)</span><br><span class="line">  &#123;</span><br><span class="line">  writedat(s[i]);</span><br><span class="line"><span class="built_in">delay</span>(<span class="number">5</span>);</span><br><span class="line">i++;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; initlcd();</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">display</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 单片机学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>温度传感器显示控制</title>
      <link href="posts/47422b4b/"/>
      <url>posts/47422b4b/</url>
      
        <content type="html"><![CDATA[<p>资料来源于该<a href="https://www.bilibili.com/video/BV1H7411n7AY?p=22" target="_blank" rel="noopener">教程</a></p><h2 id="DS18B20返回数据"><a href="#DS18B20返回数据" class="headerlink" title="DS18B20返回数据"></a>DS18B20返回数据</h2><pre class="mermaid">graph TD    delay_18B20---Init_DS18B20    delay_18B20---ReadOneChar    delay_18B20---WriteOneChar    delay_18B20---ReadTemperature    Init_DS18B20---ReadTemperature    ReadOneChar---ReadTemperature    WriteOneChar---ReadTemperature</pre><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay_18B20</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(;i&gt;<span class="number">0</span>;i--);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Init_DS18B20</span><span class="params">(<span class="keyword">void</span>)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">char</span> x=<span class="number">0</span>;</span><br><span class="line">  DQ = <span class="number">1</span>;          <span class="comment">//DQ拉高</span></span><br><span class="line">  delay_18B20(<span class="number">8</span>);  <span class="comment">//稍作延时</span></span><br><span class="line">  DQ = <span class="number">0</span>;          <span class="comment">//DQ拉低</span></span><br><span class="line">  delay_18B20(<span class="number">80</span>); <span class="comment">//延时大于480us</span></span><br><span class="line">  DQ = <span class="number">1</span>;          <span class="comment">//拉高总线</span></span><br><span class="line">  delay_18B20(<span class="number">14</span>);</span><br><span class="line">  x=DQ;            <span class="comment">//若x=0初始化成功，若x=1初始化失败</span></span><br><span class="line">  delay_18B20(<span class="number">20</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">char</span> <span class="title">ReadOneChar</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> dat = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">8</span>;i&gt;<span class="number">0</span>;i--)</span><br><span class="line">    &#123;</span><br><span class="line">      DQ = <span class="number">0</span>; <span class="comment">// 拉低总线</span></span><br><span class="line">      dat&gt;&gt;=<span class="number">1</span>;<span class="comment">//每读取移位向右移移位</span></span><br><span class="line">      DQ = <span class="number">1</span>; <span class="comment">//拉高总线</span></span><br><span class="line">      <span class="keyword">if</span>(DQ)</span><br><span class="line">      dat|=<span class="number">0x80</span>;</span><br><span class="line">      delay_18B20(<span class="number">4</span>);</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">return</span>(dat);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">WriteOneChar</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> dat)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">char</span> i=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (i=<span class="number">8</span>; i&gt;<span class="number">0</span>; i--)</span><br><span class="line">  &#123;</span><br><span class="line">   DQ = <span class="number">0</span>;</span><br><span class="line">   DQ = dat&amp;<span class="number">0x01</span>;</span><br><span class="line">   <span class="keyword">if</span>(DQ)&#123;delay_18B20(<span class="number">1</span>);DQ=<span class="number">1</span>;&#125;</span><br><span class="line"> <span class="keyword">else</span>&#123;delay_18B20(<span class="number">5</span>);DQ = <span class="number">1</span>;&#125;</span><br><span class="line">   dat&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">char</span> <span class="title">ReadTemperature</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"> <span class="keyword">unsigned</span> <span class="keyword">char</span> a=<span class="number">0</span>,b=<span class="number">0</span>;</span><br><span class="line"> <span class="keyword">unsigned</span> <span class="keyword">int</span> temp=<span class="number">0</span>;</span><br><span class="line"> Init_DS18B20();</span><br><span class="line"> WriteOneChar(<span class="number">0xCC</span>);  <span class="comment">// 跳过读序列号操作</span></span><br><span class="line"> WriteOneChar(<span class="number">0x44</span>);  <span class="comment">// 启动温度转换</span></span><br><span class="line"> delay_18B20(<span class="number">100</span>);    <span class="comment">// </span></span><br><span class="line"> Init_DS18B20();</span><br><span class="line"> WriteOneChar(<span class="number">0xCC</span>);  <span class="comment">//跳过读序列号操作</span></span><br><span class="line"> WriteOneChar(<span class="number">0xBE</span>);  <span class="comment">//读取温度寄存器</span></span><br><span class="line"> delay_18B20(<span class="number">100</span>);</span><br><span class="line"> a=ReadOneChar();     <span class="comment">//读温度低位</span></span><br><span class="line"> b=ReadOneChar();     <span class="comment">//读温度高位</span></span><br><span class="line"> temp=((b*<span class="number">256</span>+a)&gt;&gt;<span class="number">4</span>); <span class="comment">//当前采集温度除16得到实际温度</span></span><br><span class="line"> <span class="keyword">return</span>(temp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="LCD显示温度"><a href="#LCD显示温度" class="headerlink" title="LCD显示温度"></a>LCD显示温度</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> str[]=&#123;<span class="string">"0123456789"</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">120</span>;j++);<span class="comment">//赋空值延时</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//写数据</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">writedat</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> dat)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">RS=<span class="number">1</span>;</span><br><span class="line">RW=<span class="number">0</span>;</span><br><span class="line">E=<span class="number">0</span>;<span class="comment">//表示向LCM写入指令</span></span><br><span class="line">P2=dat;<span class="comment">//P2 IO口</span></span><br><span class="line"><span class="built_in">delay</span>(<span class="number">5</span>);</span><br><span class="line">E=<span class="number">1</span>;</span><br><span class="line">E=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//写命令</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">writecom</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> com)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">RS=<span class="number">0</span>;</span><br><span class="line">RW=<span class="number">0</span>;</span><br><span class="line">E=<span class="number">0</span>;<span class="comment">//表示向LCM写入指令</span></span><br><span class="line">P2=com;<span class="comment">//P2 IO口</span></span><br><span class="line"><span class="built_in">delay</span>(<span class="number">5</span>);</span><br><span class="line">E=<span class="number">1</span>;</span><br><span class="line">E=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initlcd</span><span class="params">()</span><span class="comment">//初始化</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">writecom(<span class="number">0x38</span>);<span class="comment">//写入命令</span></span><br><span class="line">writecom(<span class="number">0x0c</span>);<span class="comment">//设置开,不显示光标</span></span><br><span class="line">writecom(<span class="number">0x06</span>);<span class="comment">//写字符+1</span></span><br><span class="line">writecom(<span class="number">0x01</span>);<span class="comment">//显示清零</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> temp0=<span class="number">0</span>,temp1=<span class="number">1</span>,temp2=<span class="number">0</span>;</span><br><span class="line">temp0=readtemp/<span class="number">100</span>;<span class="comment">//百位</span></span><br><span class="line">temp1=(readtemp%<span class="number">100</span>)/<span class="number">10</span>;</span><br><span class="line">temp2=readtemp%<span class="number">10</span>;</span><br><span class="line">writecom(<span class="number">0x80</span>);</span><br><span class="line"><span class="built_in">delay</span>(<span class="number">5</span>);</span><br><span class="line">writedat(str[temp0]);</span><br><span class="line"><span class="built_in">delay</span>(<span class="number">5</span>);</span><br><span class="line">writedat(str[temp1]);</span><br><span class="line"><span class="built_in">delay</span>(<span class="number">5</span>);</span><br><span class="line">writedat(str[temp2]);</span><br><span class="line"><span class="built_in">delay</span>(<span class="number">5</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="控制显示"><a href="#控制显示" class="headerlink" title="控制显示"></a>控制显示</h2><p>温度传感器返回温度值,显示器显示<br><video src=' /images/单片机/温度传感器显示/演示.mp4' type='video/mp4' controls='controls'  width='100%' height='100%'><br></video></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">"reg51.h"</span></span></span><br><span class="line"></span><br><span class="line">sbit RS=P3^<span class="number">0</span>;<span class="comment">//硬件连接P3口</span></span><br><span class="line">sbit RW=P3^<span class="number">1</span>;</span><br><span class="line">sbit E=P3^<span class="number">2</span>;</span><br><span class="line">sbit DQ=P3^<span class="number">3</span>;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> readtemp=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">initlcd();</span><br><span class="line">   <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    readtemp=ReadTemperature();</span><br><span class="line"><span class="built_in">display</span>();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 单片机学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>独立式按键控制数码管</title>
      <link href="posts/d24ff6dc/"/>
      <url>posts/d24ff6dc/</url>
      
        <content type="html"><![CDATA[<p>资料来源于该<a href="https://www.bilibili.com/video/BV1H7411n7AY?p=7" target="_blank" rel="noopener">教程</a></p><h2 id="数码管显示数据"><a href="#数码管显示数据" class="headerlink" title="数码管显示数据"></a>数码管显示数据</h2><p><img src="/images/%E5%8D%95%E7%89%87%E6%9C%BA/%E6%95%B0%E7%A0%81%E7%AE%A1/%E6%95%B0%E7%A0%81%E7%AE%A1%E6%98%BE%E7%A4%BA.png" alt=""><br>根据数码管显示原理，接口用16进制表示数字<br><img src="/images/%E5%8D%95%E7%89%87%E6%9C%BA/%E6%95%B0%E7%A0%81%E7%AE%A1/%E6%95%B0%E7%A0%81%E7%AE%A1%E5%8D%95%E4%B8%AA%E6%95%B0%E5%AD%97%E6%98%BE%E7%A4%BA.png" alt=""></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">"reg51.h"</span></span></span><br><span class="line">sbit key0=P1^<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">seg</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">   P2=<span class="number">0x3F</span>;<span class="comment">//0011 1111 ,P必为大写</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    seg();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="数码管循环播放"><a href="#数码管循环播放" class="headerlink" title="数码管循环播放"></a>数码管循环播放</h2><video src=' /images/单片机/数码管/循环显示.mp4' type='video/mp4' controls='controls'  width='100%' height='100%'></video><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">"reg51.h"</span></span></span><br><span class="line">sbit key0=P1^<span class="number">0</span>;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> s[]=&#123;<span class="number">0x3F</span>,<span class="number">0x06</span>,<span class="number">0x5B</span>,<span class="number">0x4F</span>,<span class="number">0x66</span>,<span class="number">0x6D</span>,<span class="number">0x7D</span>,<span class="number">0x07</span>,<span class="number">0x7F</span>,<span class="number">0x6F</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">120</span>;j++);<span class="comment">//赋空值延时</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">seg</span><span class="params">()</span><span class="comment">//循环取数，并显示</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"> <span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">9</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">   P2=s[i];</span><br><span class="line">   <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//P2=0x3F;//0011 1111 ,P必为大写</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    seg();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="独立式按键控制数码管"><a href="#独立式按键控制数码管" class="headerlink" title="独立式按键控制数码管"></a>独立式按键控制数码管</h2><video src=' /images/单片机/数码管/按键显示.mp4' type='video/mp4' controls='controls'  width='100%' height='100%'></video><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">"reg51.h"</span></span></span><br><span class="line">sbit key0=P1^<span class="number">0</span>;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> s[]=&#123;<span class="number">0x3F</span>,<span class="number">0x06</span>,<span class="number">0x5B</span>,<span class="number">0x4F</span>,<span class="number">0x66</span>,<span class="number">0x6D</span>,<span class="number">0x7D</span>,<span class="number">0x07</span>,<span class="number">0x7F</span>,<span class="number">0x6F</span>&#125;;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> num=<span class="number">0</span>,flag=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">120</span>;j++);<span class="comment">//赋空值延时</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*void seg()//循环取数，并显示</span></span><br><span class="line"><span class="comment">&#123; </span></span><br><span class="line"><span class="comment"> int i;</span></span><br><span class="line"><span class="comment">for(i=0;i&lt;9;i++)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">   P2=s[i];</span></span><br><span class="line"><span class="comment">   delay(1000);</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">    //P2=0x3F;//0011 1111 ,P必为大写</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"><span class="comment">//按键控制函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">key</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//if(key0==0)//P1导通，num+1</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//delay(200);</span></span><br><span class="line"><span class="comment">//if(key0==0)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">// num++;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125; //延时消抖</span></span><br><span class="line"><span class="keyword">if</span>(key0==<span class="number">0</span>&amp;&amp;flag==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">flag=<span class="number">1</span>;<span class="comment">//按下按键</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag==<span class="number">1</span>&amp;&amp;key0==<span class="number">1</span>)<span class="comment">//检测是否弹起</span></span><br><span class="line">&#123;</span><br><span class="line">   num++;</span><br><span class="line">   flag=<span class="number">0</span>;</span><br><span class="line">&#125;  <span class="comment">//快速消抖</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">seg</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">P2=s[num];</span><br><span class="line"><span class="keyword">if</span>(num==<span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line">num=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">   &#123;key();</span><br><span class="line">    seg();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 单片机学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>类模板</title>
      <link href="posts/c7b3911f/"/>
      <url>posts/c7b3911f/</url>
      
        <content type="html"><![CDATA[<h2 id="类模板语法"><a href="#类模板语法" class="headerlink" title="类模板语法"></a>类模板语法</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="comment">//类模板</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">nametype</span>,<span class="title">class</span> <span class="title">agetype</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">person(nametype name, agetype age)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;name = name;</span><br><span class="line"><span class="keyword">this</span>-&gt;age = age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">string</span> name;</span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">person&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt;p(<span class="string">"张三"</span>, <span class="number">15</span>);<span class="comment">//指定数据类型，变量名，传参</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt;p.age&lt;&lt;p.name&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test1();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="类模板与函数模板区别"><a href="#类模板与函数模板区别" class="headerlink" title="类模板与函数模板区别"></a>类模板与函数模板区别</h2><p>1.类模板没有自动类型推导的使用方式<br>2.类模板在模板参数列表中可以有默认参数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">NameType</span>, <span class="title">class</span> <span class="title">AgeType</span> = <span class="title">int</span>&gt;//可以设置默认参数</span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Person(NameType name, AgeType age)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;mName = name;</span><br><span class="line"><span class="keyword">this</span>-&gt;mAge = age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showPerson</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"name: "</span> &lt;&lt; <span class="keyword">this</span>-&gt;mName &lt;&lt; <span class="string">" age: "</span> &lt;&lt; <span class="keyword">this</span>-&gt;mAge &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">NameType mName;</span><br><span class="line">AgeType mAge;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1、类模板没有自动类型推导的使用方式</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// Person p("孙悟空", 1000); // 错误 类模板使用时候，不可以用自动类型推导</span></span><br><span class="line">Person &lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt;p(<span class="string">"孙悟空"</span>, <span class="number">1000</span>); <span class="comment">//必须使用显示指定类型的方式，使用类模板</span></span><br><span class="line">p.showPerson();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2、类模板在模板参数列表中可以有默认参数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person &lt;<span class="built_in">string</span>&gt; p(<span class="string">"猪八戒"</span>, <span class="number">999</span>); <span class="comment">//类模板中的模板参数列表 可以指定默认参数</span></span><br><span class="line">p.showPerson();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">test2();</span><br><span class="line">test02();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="类模板创建时机"><a href="#类模板创建时机" class="headerlink" title="类模板创建时机"></a>类模板创建时机</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person1</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showPerson1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"Person1 show"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person2</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showPerson2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"Person2 show"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">MyClass</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">T obj;</span><br><span class="line"></span><br><span class="line"><span class="comment">//类模板中的成员函数，并不是一开始就创建的，而是在模板调用时再生成</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun1</span><span class="params">()</span> </span>&#123; obj.showPerson1(); &#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun2</span><span class="params">()</span> </span>&#123; obj.showPerson2(); &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test3</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">MyClass&lt;Person1&gt; m;</span><br><span class="line">m.fun1();</span><br><span class="line"><span class="comment">//m.fun2();//编译会出错，说明函数调用才会去创建成员函数</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">test3();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="类模板对象做函数参数"><a href="#类模板对象做函数参数" class="headerlink" title="类模板对象做函数参数"></a>类模板对象做函数参数</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//类模板对象做函数参数</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T1</span>, <span class="title">class</span> <span class="title">T2</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">person(T1 name, T2 age)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;age = age;</span><br><span class="line"><span class="keyword">this</span>-&gt;name = name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt;<span class="string">"姓名:"</span>&lt;&lt; <span class="keyword">this</span>-&gt;name &lt;&lt; <span class="keyword">this</span>-&gt;age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">T1 name;</span><br><span class="line">T2 age;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//1、指定传入的类型</span></span><br><span class="line"><span class="comment">//类模板对象做函数参数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showprint</span><span class="params">(person&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt;&amp;p)</span><span class="comment">//用引用的方式传入</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">p.show();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test4</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">person&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt;p(<span class="string">"悟空"</span>, <span class="number">100</span>);</span><br><span class="line">showprint(p);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2、参数模板化</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T1</span>, <span class="title">class</span> <span class="title">T2</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">void</span> <span class="title">showprint1</span>(<span class="title">person</span>&lt;T1, T2&gt;&amp;<span class="title">p1</span>)//用引用的方式传入</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">p1.show();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test04</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">person&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt;p1(<span class="string">"悟能"</span>, <span class="number">90</span>);</span><br><span class="line">showprint1(p1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//3、整个类模板化</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">void</span> <span class="title">showprint2</span>(<span class="title">T</span> &amp;<span class="title">p3</span>)//用引用的方式传入</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">p3.show();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test004</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">person&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt;p3(<span class="string">"悟净"</span>, <span class="number">90</span>);</span><br><span class="line">showprint2(p3);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test004();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="类模板与继承"><a href="#类模板与继承" class="headerlink" title="类模板与继承"></a>类模板与继承</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">father</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">T m;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">son</span> :</span><span class="keyword">public</span> father&lt;<span class="keyword">int</span>&gt;<span class="comment">//指定类型</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//灵活指定父亲中的类型</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T1</span>,<span class="title">class</span> <span class="title">T2</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">son2</span> :</span><span class="keyword">public</span> father&lt;T2&gt;</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">son2()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="keyword">typeid</span>(T1).name() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="keyword">typeid</span>(T2).name()&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test5</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">son p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test05</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">son2&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt;s;<span class="comment">//实例化</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test05();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="类模板成员函数类外实现"><a href="#类模板成员函数类外实现" class="headerlink" title="类模板成员函数类外实现"></a>类模板成员函数类外实现</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T1</span>, <span class="title">class</span> <span class="title">T2</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">Person</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//成员函数类内声明</span></span><br><span class="line">Person(T1 name, T2 age);</span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//this-&gt;name = name;</span></span><br><span class="line"><span class="comment">//this-&gt;age = age;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showperson</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">/*&#123;</span></span><br><span class="line"><span class="comment">cout &lt;&lt; "姓名: " &lt;&lt; this-&gt;m_Name &lt;&lt; " 年龄:" &lt;&lt; this-&gt;m_Age &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line">T1 m_Name;</span><br><span class="line">T2 m_Age;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//构造函数 类外实现</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T1</span>, <span class="title">class</span> <span class="title">T2</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">Person</span>&lt;T1, T2&gt;:</span>:Person(T1 name, T2 age) &#123;<span class="comment">//作用域</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Age = age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//成员函数 类外实现</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T1</span>, <span class="title">class</span> <span class="title">T2</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">void</span> <span class="title">Person</span>&lt;T1, T2&gt;:</span>:showperson() &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"姓名: "</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Name &lt;&lt; <span class="string">" 年龄:"</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test7</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt;p(<span class="string">"tom"</span>, <span class="number">15</span>);</span><br><span class="line">p.showperson();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test7();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="类模板分文件编写"><a href="#类模板分文件编写" class="headerlink" title="类模板分文件编写"></a>类模板分文件编写</h2><p>将声明和实现写到同一个文件中，并更改后缀名为.hpp(hpp是约定的名称，并不是强制)</p><p>person.hpp</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T1</span>, <span class="title">class</span> <span class="title">T2</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">person(T1 name, T2 age);</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>;</span><br><span class="line">T1 m_name;</span><br><span class="line">T2 m_age;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T1</span>, <span class="title">class</span> <span class="title">T2</span>&gt;//编译器模板</span></span><br><span class="line"><span class="class"><span class="title">person</span>&lt;T1, T2&gt;:</span>:person(T1 name, T2 age)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_age = age;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_name = name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T1</span>, <span class="title">class</span> <span class="title">T2</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">void</span> <span class="title">person</span>&lt;T1, T2&gt;:</span>:show()<span class="comment">//void函数类型 </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"姓名: "</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_name &lt;&lt; <span class="string">" 年龄:"</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主函数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="comment">//直接包含源文件</span></span><br><span class="line"><span class="comment">//#include "person.cpp"</span></span><br><span class="line"><span class="comment">//解决方式2，将声明和实现写到一起，文件后缀名改为.hpp,一般为类模板</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"person.hpp"</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test8</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">person&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt;p(<span class="string">"张三"</span>, <span class="number">15</span>);</span><br><span class="line">p.show();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test8();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="类模板与友元"><a href="#类模板与友元" class="headerlink" title="类模板与友元"></a>类模板与友元</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//2、全局函数配合友元  类外实现 - 先做函数模板声明，下方在做函数模板定义，在做友元</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T1</span>, <span class="title">class</span> <span class="title">T2</span>&gt; <span class="title">class</span> <span class="title">Person</span>;</span></span><br><span class="line"><span class="comment">//如果声明了函数模板，可以将实现写到后面，否则需要将实现体写到类的前面让编译器提前看到</span></span><br><span class="line"><span class="comment">//template&lt;class T1, class T2&gt; void printPerson2(Person&lt;T1, T2&gt; &amp; p); </span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T1</span>, <span class="title">class</span> <span class="title">T2</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">void</span> <span class="title">printPerson2</span>(<span class="title">Person</span>&lt;T1, T2&gt; &amp; <span class="title">p</span>)</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"类外实现 ---- 姓名： "</span> &lt;&lt; p.m_Name &lt;&lt; <span class="string">" 年龄："</span> &lt;&lt; p.m_Age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T1</span>, <span class="title">class</span> <span class="title">T2</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="comment">//1、全局函数配合友元   类内实现</span></span><br><span class="line"><span class="function"><span class="keyword">friend</span> <span class="keyword">void</span> <span class="title">printPerson</span><span class="params">(Person&lt;T1, T2&gt; &amp; p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"姓名： "</span> &lt;&lt; p.m_Name &lt;&lt; <span class="string">" 年龄："</span> &lt;&lt; p.m_Age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//全局函数配合友元  类外实现</span></span><br><span class="line"><span class="comment">//普通函数的声明，加空模板参数列表&lt;&gt;</span></span><br><span class="line"><span class="keyword">friend</span> <span class="keyword">void</span> printPerson2&lt;&gt;(Person&lt;T1, T2&gt; &amp; p);<span class="comment">//没有写类型</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">Person(T1 name, T2 age)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Age = age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">T1 m_Name;</span><br><span class="line">T2 m_Age;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//1、全局函数在类内实现</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test9</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person &lt;<span class="built_in">string</span>, <span class="keyword">int</span> &gt;p(<span class="string">"Tom"</span>, <span class="number">20</span>);</span><br><span class="line">printPerson(p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//2、全局函数在类外实现</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test09</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person &lt;<span class="built_in">string</span>, <span class="keyword">int</span> &gt;p(<span class="string">"Jerry"</span>, <span class="number">30</span>);</span><br><span class="line">printPerson2(p);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//test01();</span></span><br><span class="line">test09();</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="类模板案例"><a href="#类模板案例" class="headerlink" title="类模板案例"></a>类模板案例</h2><p>案例需求</p><ul><li>可以对内置数据类型以及自定义数据类型的数据进行存储</li><li>将数组中的数据存储到堆区</li><li>构造函数中可以传入数组的容量</li><li>提供对应的拷贝构造函数以及operator=防止浅拷贝问题</li><li>提供尾插法和尾删法对数组中的数据进行增加和删除</li><li>可以通过下标的方式访问数组中的元素</li><li>可以获取数组中当前元素个数和数组的容量</li></ul><p>myarray.hpp</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">Myarray</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//构造函数</span></span><br><span class="line">Myarray(<span class="keyword">int</span> capacity)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Capacity = capacity;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Size = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">this</span>-&gt;pAddress = <span class="keyword">new</span> T[<span class="keyword">this</span>-&gt;m_Capacity];<span class="comment">//按照容量开辟空间</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//拷贝函数</span></span><br><span class="line">Myarray(<span class="keyword">const</span> Myarray &amp; arr)<span class="comment">//实现拷贝构造函数</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Capacity = arr.m_Capacity;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Size = arr.m_Size;</span><br><span class="line"><span class="comment">//深拷贝</span></span><br><span class="line"><span class="keyword">this</span>-&gt;pAddress = <span class="keyword">new</span> T[arr.m_Capacity];<span class="comment">//T数据类型的数组</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>-&gt;m_Size; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;pAddress[i] = arr.pAddress[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//operator= 防止浅拷贝问题</span></span><br><span class="line">Myarray <span class="keyword">operator</span>=(<span class="keyword">const</span> Myarray&amp; arr)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//判断堆区是否有数据，如果有先释放</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;pAddress!=<span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">delete</span>[] <span class="keyword">this</span>-&gt;pAddress;</span><br><span class="line"><span class="keyword">this</span>-&gt;pAddress = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Capacity = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Size = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Capacity = arr.m_Capacity;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Size = arr.m_Size;</span><br><span class="line"><span class="keyword">this</span>-&gt;pAddress = <span class="keyword">new</span> T[<span class="keyword">this</span>-&gt;m_Capacity];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>-&gt;m_Size; i++) &#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;pAddress[i] = arr.pAddress[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> *<span class="keyword">this</span>;<span class="comment">//返回自身</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//尾插法</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Push_back</span><span class="params">(<span class="keyword">const</span> T&amp; val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//判断容量大小</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Capacity==<span class="keyword">this</span>-&gt;m_Size)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>-&gt;pAddress[<span class="keyword">this</span>-&gt;m_Size] = val;<span class="comment">//插入</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_Size++;<span class="comment">//更新大小</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//尾删</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Pop_back</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Size==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Size--;<span class="comment">//逻辑删除</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//通过下表访问</span></span><br><span class="line">T&amp; <span class="keyword">operator</span>[](<span class="keyword">int</span> index)<span class="comment">//返回类型T</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>-&gt;pAddress[index];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取数组容量</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getCapacity</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>-&gt;m_Capacity;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取数组大小</span></span><br><span class="line"><span class="function"><span class="keyword">int</span><span class="title">getSize</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>-&gt;m_Size;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//析构函数</span></span><br><span class="line">~Myarray()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;pAddress!=<span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">delete</span>[] <span class="keyword">this</span>-&gt;pAddress;</span><br><span class="line"><span class="keyword">this</span>-&gt;pAddress = <span class="literal">NULL</span>;<span class="comment">//置空，防止野指针</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">T * pAddress;  <span class="comment">//指向一个堆空间，这个空间存储真正的数据</span></span><br><span class="line"><span class="keyword">int</span> m_Capacity; <span class="comment">//容量</span></span><br><span class="line"><span class="keyword">int</span> m_Size;   <span class="comment">// 大小</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>主函数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">"myarray.hpp"</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test10</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Myarray&lt;<span class="keyword">int</span>&gt; p(<span class="number">5</span>);<span class="comment">//有参 类</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">p.Push_back(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; p[<span class="number">2</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="comment">//Myarray&lt;int&gt;p1(p);</span></span><br><span class="line"><span class="comment">//Myarray&lt;int&gt;p3(100);</span></span><br><span class="line"><span class="comment">//p1 = p3;//=运算符重载</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"容量"</span> &lt;&lt; p.getCapacity() &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//5</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"数量"</span> &lt;&lt; p.getSize() &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//5</span></span><br><span class="line">p.Pop_back();<span class="comment">//尾删</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"容量"</span> &lt;&lt; p.getCapacity() &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//5</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"数量"</span> &lt;&lt; p.getSize() &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//4</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//测试自定义数据类型,插入类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Person() &#123;&#125;</span><br><span class="line">Person(<span class="built_in">string</span> name, <span class="keyword">int</span> age) &#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Age = age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">string</span> m_Name;</span><br><span class="line"><span class="keyword">int</span> m_Age;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printPersonArray</span><span class="params">(Myarray&lt;Person&gt;&amp; personArr)</span><span class="comment">//打印</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; personArr.getSize(); i++) &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"姓名："</span> &lt;&lt; personArr[i].m_Name &lt;&lt; <span class="string">" 年龄： "</span> &lt;&lt; personArr[i].m_Age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test11</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//创建数组</span></span><br><span class="line">Myarray&lt;Person&gt; pArray(<span class="number">10</span>);</span><br><span class="line"><span class="function">Person <span class="title">p1</span><span class="params">(<span class="string">"孙悟空"</span>, <span class="number">30</span>)</span></span>;</span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(<span class="string">"韩信"</span>, <span class="number">20</span>)</span></span>;</span><br><span class="line"><span class="function">Person <span class="title">p3</span><span class="params">(<span class="string">"妲己"</span>, <span class="number">18</span>)</span></span>;</span><br><span class="line"><span class="function">Person <span class="title">p4</span><span class="params">(<span class="string">"王昭君"</span>, <span class="number">15</span>)</span></span>;</span><br><span class="line"><span class="function">Person <span class="title">p5</span><span class="params">(<span class="string">"赵云"</span>, <span class="number">24</span>)</span></span>;</span><br><span class="line"><span class="comment">//插入数据</span></span><br><span class="line">pArray.Push_back(p1);</span><br><span class="line">pArray.Push_back(p2);</span><br><span class="line">pArray.Push_back(p3);</span><br><span class="line">pArray.Push_back(p4);</span><br><span class="line">pArray.Push_back(p5);</span><br><span class="line">printPersonArray(pArray);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"pArray的大小："</span> &lt;&lt; pArray.getSize() &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//5</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"pArray的容量："</span> &lt;&lt; pArray.getCapacity() &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//10</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//test10();</span></span><br><span class="line">test11();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++基础入门 </category>
          
          <category> 提高语法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>函数模板</title>
      <link href="posts/c7cb3ba6/"/>
      <url>posts/c7cb3ba6/</url>
      
        <content type="html"><![CDATA[<h2 id="函数模板使用"><a href="#函数模板使用" class="headerlink" title="函数模板使用"></a>函数模板使用</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="comment">//模板使用</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mySwap</span><span class="params">(T &amp;a, T &amp;b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">T temp = a;</span><br><span class="line">a = b;</span><br><span class="line">b = temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="keyword">int</span> c = <span class="number">100</span>;</span><br><span class="line"><span class="comment">//1自动推导使用，必须推导出一致的数据类型T</span></span><br><span class="line">mySwap(a, b);</span><br><span class="line"><span class="comment">//2指定类型</span></span><br><span class="line">mySwap&lt;<span class="keyword">int</span>&gt;(a, c);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; a &lt;&lt; <span class="string">" "</span> &lt;&lt; c &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">test1();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="函数模板案例"><a href="#函数模板案例" class="headerlink" title="函数模板案例"></a>函数模板案例</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">void</span> <span class="title">myswap</span>(<span class="title">T</span>&amp;<span class="title">a</span>,<span class="title">T</span>&amp;<span class="title">b</span>)</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">T temp = a;</span><br><span class="line">a = b;</span><br><span class="line">b = temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//建立char,int排序模板，</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">void</span> <span class="title">mySort</span>(<span class="title">T</span> <span class="title">arr</span>[],<span class="title">int</span> <span class="title">len</span>)</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> <span class="built_in">max</span> = i;<span class="comment">//认定最大值下标</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = i+<span class="number">1</span>; j &lt; len; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (arr[<span class="built_in">max</span>] &lt; arr[j])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">max</span> = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">max</span>!=i)</span><br><span class="line">&#123;</span><br><span class="line">myswap(arr[<span class="built_in">max</span>], arr[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">void</span> <span class="title">printArray</span>(<span class="title">T</span> <span class="title">arr</span>[],<span class="title">int</span> <span class="title">len</span>)</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; arr[i] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> chararr[] = <span class="string">"babbgb"</span>;</span><br><span class="line"><span class="keyword">int</span> arr[] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> len = <span class="keyword">sizeof</span>(arr) / <span class="keyword">sizeof</span>(<span class="keyword">int</span>);</span><br><span class="line">mySort(arr, len);</span><br><span class="line">printArray(arr, len);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test02();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="普通函数与函数模板区别"><a href="#普通函数与函数模板区别" class="headerlink" title="普通函数与函数模板区别"></a>普通函数与函数模板区别</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//普通函数调用时可以发生自动类型转换（隐式类型转换）</span></span><br><span class="line"><span class="comment">//函数模板调用时，如果利用自动类型推导，不会发生隐式类型转换</span></span><br><span class="line"><span class="comment">//如果利用显示指定类型的方式，可以发生隐式类型转换</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//普通函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">myAdd01</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//函数模板</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">T</span> <span class="title">myAdd02</span>(<span class="title">T</span> <span class="title">a</span>, <span class="title">T</span> <span class="title">b</span>)</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test03</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="keyword">char</span> c = <span class="string">'c'</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; myAdd01(a, c) &lt;&lt; <span class="built_in">endl</span>; <span class="comment">//正确，将char类型的'c'隐式转换为int类型  'c' 对应 ASCII码 99</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//myAdd02(a, c); // 报错，使用自动类型推导时，不会发生隐式类型转换</span></span><br><span class="line"></span><br><span class="line">myAdd02&lt;<span class="keyword">int</span>&gt;(a, c); <span class="comment">//正确，如果用显示指定类型，可以发生隐式类型转换</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test03();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="调用规则"><a href="#调用规则" class="headerlink" title="调用规则"></a>调用规则</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//如果函数模板和普通函数都可以实现，优先调用普通函数</span></span><br><span class="line"><span class="comment">//可以通过空模板参数列表来强制调用函数模板</span></span><br><span class="line"><span class="comment">//函数模板也可以发生重载</span></span><br><span class="line"><span class="comment">//如果函数模板可以产生更好的匹配, 优先调用函数模板</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">myprint</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"调用普通函数"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">void</span> <span class="title">myprint</span>(<span class="title">T</span> <span class="title">a</span>, <span class="title">T</span> <span class="title">b</span>)</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"调用模板函数"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">void</span> <span class="title">myprint</span>(<span class="title">T</span> <span class="title">a</span>, <span class="title">T</span> <span class="title">b</span>,<span class="title">T</span> <span class="title">c</span>)</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"调用重载的模板函数"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test04</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">10</span>;</span><br><span class="line"><span class="comment">//myprint(a, b);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//通过空模板参数列表,强制调用模板函数</span></span><br><span class="line"><span class="comment">//myprint&lt;&gt;(a, b);</span></span><br><span class="line"><span class="comment">//myprint&lt;&gt;(a, b, 100);</span></span><br><span class="line"><span class="comment">//如果函数模板可以产生更好的匹配,优先调用函数模板</span></span><br><span class="line"><span class="keyword">char</span> c1 = <span class="string">'a'</span>;</span><br><span class="line"><span class="keyword">char</span> c2 = <span class="string">'b'</span>;</span><br><span class="line">myprint(c1, c2); <span class="comment">//调用函数模板</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test04();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="模板的局限性"><a href="#模板的局限性" class="headerlink" title="模板的局限性"></a>模板的局限性</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Person(<span class="built_in">string</span> name, <span class="keyword">int</span> age)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Age = age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">string</span> m_Name;</span><br><span class="line"><span class="keyword">int</span> m_Age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//普通函数模板</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">bool</span> <span class="title">myCompare</span>(<span class="title">T</span>&amp; <span class="title">a</span>, <span class="title">T</span>&amp; <span class="title">b</span>)</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">if</span> (a == b)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//具体化，显示具体化的原型和定意思以template&lt;&gt;开头，并通过名称来指出类型</span></span><br><span class="line"><span class="comment">//具体化优先于常规模板</span></span><br><span class="line"><span class="keyword">template</span>&lt;&gt; <span class="function"><span class="keyword">bool</span> <span class="title">myCompare</span><span class="params">(Person &amp;p1, Person &amp;p2)</span><span class="comment">//函数模板重载</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (p1.m_Name == p2.m_Name &amp;&amp; p1.m_Age == p2.m_Age)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test05</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="comment">//内置数据类型可以直接使用通用的函数模板</span></span><br><span class="line"><span class="keyword">bool</span> ret = myCompare(a, b);</span><br><span class="line"><span class="keyword">if</span> (ret)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"a == b "</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"a != b "</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test06</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">Person <span class="title">p1</span><span class="params">(<span class="string">"Tom"</span>, <span class="number">10</span>)</span></span>;</span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(<span class="string">"Tom"</span>, <span class="number">10</span>)</span></span>;</span><br><span class="line"><span class="comment">//自定义数据类型，不会调用普通的函数模板</span></span><br><span class="line"><span class="comment">//可以创建具体化的Person数据类型的模板，用于特殊处理这个类型</span></span><br><span class="line"><span class="keyword">bool</span> ret = myCompare(p1, p2);</span><br><span class="line"><span class="keyword">if</span> (ret)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"p1 == p2 "</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"p1 != p2 "</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">test05();</span><br><span class="line">test06();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++基础入门 </category>
          
          <category> 提高语法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>汉明距离</title>
      <link href="posts/2a91e6b9/"/>
      <url>posts/2a91e6b9/</url>
      
        <content type="html"><![CDATA[<h2 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h2><h3 id="异或"><a href="#异或" class="headerlink" title="异或"></a>异或</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x1 = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> y1 = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">int</span> y2 = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">int</span> c = x1 ^ y1;<span class="comment">//异或，值相同为0，不同为1</span></span><br><span class="line"><span class="keyword">int</span> d = x1 ^ y2;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; c&lt;&lt;d&lt;&lt; <span class="built_in">endl</span>;<span class="comment">//二进制位数对比，01:11==10=2=c;001:100=101=5=d</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二进制移位"><a href="#二进制移位" class="headerlink" title="二进制移位"></a>二进制移位</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">int</span> b = a &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; b&lt;&lt; <span class="built_in">endl</span>;<span class="comment">//二进制右移一位，变2</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="汉明距离"><a href="#汉明距离" class="headerlink" title="汉明距离"></a>汉明距离</h2><p><a href="https://leetcode-cn.com/problems/hamming-distance/" target="_blank" rel="noopener">leetcode原问题</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">hammingDistance</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">         <span class="comment">//计算异或的值</span></span><br><span class="line">        <span class="keyword">int</span> n = x ^ y;</span><br><span class="line">        <span class="comment">//计算</span></span><br><span class="line">        <span class="keyword">int</span> counter = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//将每一个元素左移然后进行计算</span></span><br><span class="line">        <span class="keyword">while</span> ( n &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            counter += n &amp; <span class="number">1</span>;<span class="comment">//相与之后+1</span></span><br><span class="line">            n &gt;&gt;= <span class="number">1</span>;<span class="comment">//二进制右移</span></span><br><span class="line">            <span class="comment">//n是8,他的二进制数为00001000,进行&gt;&gt;1右移一位后就是00000100,4了</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> counter;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>练习案例二-基于多态的职工管理项目</title>
      <link href="posts/e8aa757e/"/>
      <url>posts/e8aa757e/</url>
      
        <content type="html"><![CDATA[<pre class="mermaid">graph TD    A((m_Id))---work    B((m_Name))---work    C((m_DeptId))---work    showInfo---work    getDeptName---work    work---G(employee)    work---H(manager)    work----K(boss)    G(employee)-->workerManger    H(manager)-->workerManger    K(boss)-->workerManger    workerManger---showmenu    workerManger---exitmenu    workerManger---save    workerManger---show_Emp    workerManger---del_Emp    workerManger---mod_Emp    workerManger---find_Emp    workerManger---sort_Emp    workerManger---clean_Emp</pre><h2 id="创建work父类"><a href="#创建work父类" class="headerlink" title="创建work父类"></a>创建work父类</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//职工抽象基类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Worker</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//类的声明不做实现</span></span><br><span class="line"><span class="comment">//显示个人信息</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">showInfo</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"><span class="comment">//获取岗位名称</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="built_in">string</span> <span class="title">getDeptName</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> m_Id; <span class="comment">//职工编号</span></span><br><span class="line"><span class="built_in">string</span> m_Name; <span class="comment">//职工姓名</span></span><br><span class="line"><span class="keyword">int</span> m_DeptId; <span class="comment">//职工所在部门名称编号</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="创建三个子类"><a href="#创建三个子类" class="headerlink" title="创建三个子类"></a>创建三个子类</h2><h3 id="Employee子类"><a href="#Employee子类" class="headerlink" title="Employee子类"></a>Employee子类</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"><span class="comment">//普通员工文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">"work.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Employee</span> :</span><span class="keyword">public</span> Worker<span class="comment">//调用work.h中的类</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:<span class="comment">//class默认私有</span></span><br><span class="line">Employee(<span class="keyword">int</span> id,<span class="built_in">string</span> name,<span class="keyword">int</span> dId);</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showInfo</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//获取岗位名称</span></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">getDeptName</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//头文件写好了</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"employee.h"</span></span></span><br><span class="line">Employee::Employee(<span class="keyword">int</span> id, <span class="built_in">string</span> name, <span class="keyword">int</span> dId)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Id = id;<span class="comment">//赋值给work类中定义的成员，初始化</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_DeptId = dId;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> Employee:: showInfo()<span class="comment">//void函数属性在作用域前面</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"职工编号： "</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Id</span><br><span class="line">&lt;&lt; <span class="string">" \t职工姓名： "</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Name</span><br><span class="line">&lt;&lt; <span class="string">" \t岗位:"</span> &lt;&lt; <span class="keyword">this</span>-&gt;getDeptName()<span class="comment">//获取不同岗位的getDeptName,</span></span><br><span class="line">&lt;&lt; <span class="string">" \t岗位职责：完成经理交给的任务"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取岗位名称</span></span><br><span class="line"><span class="built_in">string</span> Employee:: getDeptName() </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">string</span>(<span class="string">"员工"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Manager子类"><a href="#Manager子类" class="headerlink" title="Manager子类"></a>Manager子类</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">"work.h"</span></span></span><br><span class="line"><span class="comment">//经理类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Manager</span> :</span><span class="keyword">public</span> Worker<span class="comment">//调用work.h中的类</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:<span class="comment">//class默认私有</span></span><br><span class="line">Manager(<span class="keyword">int</span> id, <span class="built_in">string</span> name, <span class="keyword">int</span> dId);</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showInfo</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//获取岗位名称</span></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">getDeptName</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">"manager.h"</span></span></span><br><span class="line">Manager::Manager(<span class="keyword">int</span> id, <span class="built_in">string</span> name, <span class="keyword">int</span> dId)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Id = id;<span class="comment">//赋值给work类中定义的成员，初始化</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_DeptId = dId;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> Manager::showInfo()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"职工编号： "</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Id</span><br><span class="line">&lt;&lt; <span class="string">" \t职工姓名："</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Name</span><br><span class="line">&lt;&lt; <span class="string">" \t岗位:"</span> &lt;&lt; <span class="keyword">this</span>-&gt;getDeptName()<span class="comment">//获取不同岗位的getDeptName,</span></span><br><span class="line">&lt;&lt; <span class="string">" \t岗位职责：完成老板交给的任务，下发任务给员工"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取岗位名称</span></span><br><span class="line"><span class="built_in">string</span> Manager::getDeptName()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">string</span>(<span class="string">"经理"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Boss子类"><a href="#Boss子类" class="headerlink" title="Boss子类"></a>Boss子类</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">"work.h"</span></span></span><br><span class="line"><span class="comment">//经理类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Boss</span> :</span><span class="keyword">public</span> Worker<span class="comment">//调用work.h中的类</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:<span class="comment">//class默认私有</span></span><br><span class="line">Boss(<span class="keyword">int</span> id, <span class="built_in">string</span> name, <span class="keyword">int</span> dId);</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showInfo</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//获取岗位名称</span></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">getDeptName</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">"boss.h"</span></span></span><br><span class="line">Boss::Boss(<span class="keyword">int</span> id, <span class="built_in">string</span> name, <span class="keyword">int</span> dId)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Id = id;<span class="comment">//赋值给work类中定义的成员，初始化</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_DeptId = dId;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> Boss::showInfo()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"职工编号： "</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Id</span><br><span class="line">&lt;&lt; <span class="string">" \t职工姓名："</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Name</span><br><span class="line">&lt;&lt; <span class="string">" \t岗位:"</span> &lt;&lt; <span class="keyword">this</span>-&gt;getDeptName()<span class="comment">//获取不同岗位的getDeptName,</span></span><br><span class="line">&lt;&lt; <span class="string">" \t岗位职责：管理公司"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取岗位名称</span></span><br><span class="line"><span class="built_in">string</span> Boss::getDeptName()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">string</span>(<span class="string">"老板"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="创建workerManger类，并在内部实现方法"><a href="#创建workerManger类，并在内部实现方法" class="headerlink" title="创建workerManger类，并在内部实现方法"></a>创建workerManger类，并在内部实现方法</h2><p>空实现声明，在cpp中实现具体方法</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once<span class="comment">//防止头文件重复</span></span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;//头文件</span></span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">"work.h"</span></span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">"employee.h"</span></span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">"manager.h"</span></span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">"boss.h"</span></span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">define</span> FILENAME <span class="meta-string">"work.txt"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;<span class="comment">//使用标准命名空间</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">workerManger</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">workerManger();<span class="comment">//声明空函数,没有&#123;&#125;括号</span></span><br><span class="line"><span class="comment">//展示菜单</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showmenu</span><span class="params">()</span></span>;<span class="comment">//没有&#123;&#125;括号</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//退出系统</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exitmenu</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//添加职工</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Add_Emp</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//记录文件中的人数个数</span></span><br><span class="line"><span class="keyword">int</span> m_EmpNum;</span><br><span class="line"><span class="comment">//保存文件</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//统计文件人数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getEmpnum</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//判断文件是否为空</span></span><br><span class="line"><span class="keyword">bool</span> m_filesIsempty;</span><br><span class="line"><span class="comment">//显示职工的成员函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show_Emp</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//删除员工</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">del_Emp</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//修改员工</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mod_Emp</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//查找员工</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">find_Emp</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//员工排序</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort_Emp</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//清空文本</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clean_Emp</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//判断员工是否存在</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">isExit</span><span class="params">(<span class="keyword">int</span> id)</span></span>;<span class="comment">//返回数组所在位置，不在返回-1</span></span><br><span class="line"><span class="comment">//初始化员工</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_Emp</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//员工数组的指针</span></span><br><span class="line">Worker ** m_EmpArray;<span class="comment">//父类指针指向子类，又因为创造自动变长的数组，所以用**</span></span><br><span class="line">~workerManger();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">"workerManger.h"</span></span></span><br><span class="line">workerManger::workerManger()</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//因为每次文件的的情况不同，所以初始化情况不同</span></span><br><span class="line"></span><br><span class="line">fstream ifs;</span><br><span class="line">ifs.<span class="built_in">open</span>(FILENAME, ios::in);<span class="comment">//in读文件</span></span><br><span class="line"><span class="comment">//1无文件</span></span><br><span class="line"><span class="keyword">if</span> (!ifs.is_open())</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"文件不存在"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="comment">//初始化属性</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpNum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray = <span class="literal">NULL</span>;</span><br><span class="line"><span class="comment">//初始化文件为空</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_filesIsempty = <span class="literal">true</span>;<span class="comment">//是空,用bool类型来表示这个属性</span></span><br><span class="line">ifs.<span class="built_in">close</span>();</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//2有文件，无数据</span></span><br><span class="line"><span class="keyword">char</span> ch;</span><br><span class="line">ifs &gt;&gt; ch;</span><br><span class="line"><span class="keyword">if</span> (ifs.eof())<span class="comment">//代表文件是否读完</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"文件为空"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="comment">//初始化属性</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpNum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray = <span class="literal">NULL</span>;</span><br><span class="line"><span class="comment">//初始化文件为空</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_filesIsempty = <span class="literal">true</span>;<span class="comment">//是空</span></span><br><span class="line">ifs.<span class="built_in">close</span>();</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//3文件存在,记录数据</span></span><br><span class="line"><span class="keyword">int</span> num = <span class="keyword">this</span>-&gt;getEmpnum();</span><br><span class="line"><span class="comment">//cout &lt;&lt; "职工人数" &lt;&lt; num &lt;&lt; endl;</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpNum = num;</span><br><span class="line"></span><br><span class="line"><span class="comment">//根据职工数创建数组</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray = <span class="keyword">new</span> Worker *[<span class="keyword">this</span>-&gt;m_EmpNum];</span><br><span class="line"><span class="comment">//初始化职工</span></span><br><span class="line"><span class="keyword">this</span>-&gt;init_Emp();</span><br><span class="line"> </span><br><span class="line"><span class="comment">//测试代码</span></span><br><span class="line"><span class="comment">/*for (int i = 0; i &lt; m_EmpNum; i++)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">cout &lt;&lt; "职工号： " &lt;&lt; this-&gt;m_EmpArray[i]-&gt;m_Id</span></span><br><span class="line"><span class="comment">&lt;&lt; " 职工姓名： " &lt;&lt; this-&gt;m_EmpArray[i]-&gt;m_Name</span></span><br><span class="line"><span class="comment">&lt;&lt; " 部门编号： " &lt;&lt; this-&gt;m_EmpArray[i]-&gt;m_DeptId &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> workerManger::showmenu()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"********************************************"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"*********  欢迎使用职工管理系统！ **********"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"*************  0.退出管理程序  *************"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"*************  1.增加职工信息  *************"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"*************  2.显示职工信息  *************"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"*************  3.删除离职职工  *************"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"*************  4.修改职工信息  *************"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"*************  5.查找职工信息  *************"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"*************  6.按照编号排序  *************"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"*************  7.清空所有文档  *************"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"********************************************"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;<span class="comment">//没有分号</span></span><br><span class="line"><span class="keyword">void</span> workerManger::exitmenu() &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"欢迎下次使用"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> workerManger::Add_Emp()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"请输入添加员工的数量"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">int</span> addnum=<span class="number">0</span>;<span class="comment">//新添加的员工数量</span></span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; addnum;</span><br><span class="line"><span class="keyword">if</span> (addnum&gt;<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> newsize = <span class="keyword">this</span>-&gt;m_EmpNum + addnum;<span class="comment">//加上新增的</span></span><br><span class="line">Worker **newspace = <span class="keyword">new</span> Worker*[newsize];</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_EmpArray!=<span class="literal">NULL</span>)<span class="comment">//将原空间内容复制</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;<span class="keyword">this</span>-&gt;m_EmpNum;i++)</span><br><span class="line">&#123;</span><br><span class="line">newspace[i] = m_EmpArray[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//复制新的数据</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; addnum; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> id;</span><br><span class="line"><span class="built_in">string</span> name;</span><br><span class="line"><span class="keyword">int</span> dSelect;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"请输入第 "</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">" 个新职工编号："</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; id;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"请输入第 "</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">" 个新职工姓名："</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; name;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"请选择该职工的岗位："</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"1、普通职工"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"2、经理"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"3、老板"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; dSelect;</span><br><span class="line"></span><br><span class="line">Worker * worker = <span class="literal">NULL</span>;<span class="comment">//</span></span><br><span class="line"><span class="keyword">switch</span> (dSelect)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>: <span class="comment">//普通员工</span></span><br><span class="line">worker = <span class="keyword">new</span> Employee(id, name, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>: <span class="comment">//经理</span></span><br><span class="line">worker = <span class="keyword">new</span> Manager(id, name, <span class="number">2</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:  <span class="comment">//老板</span></span><br><span class="line">worker = <span class="keyword">new</span> Boss(id, name, <span class="number">3</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">newspace[<span class="keyword">this</span>-&gt;m_EmpNum + i] = worker;<span class="comment">//在一个循环中完成赋值，保存在newspace</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//释放原有空间</span></span><br><span class="line"><span class="keyword">delete</span>[] <span class="keyword">this</span>-&gt;m_EmpArray;<span class="comment">//释放数组</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//更改新空间的指向</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray = newspace;</span><br><span class="line"></span><br><span class="line"><span class="comment">//更新新的个数</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpNum = newsize;</span><br><span class="line"><span class="comment">//更新不为空的情况</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_filesIsempty = <span class="literal">false</span>;</span><br><span class="line"><span class="comment">//提示信息</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"成功添加"</span> &lt;&lt; addnum &lt;&lt; <span class="string">"名新职工！"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="comment">//保存文件</span></span><br><span class="line"><span class="keyword">this</span>-&gt;save();<span class="comment">//可以理解为在main中调用了该函数</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"请重新输入"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> workerManger::save()</span><br><span class="line">&#123;</span><br><span class="line">ofstream ofs;</span><br><span class="line">ofs.<span class="built_in">open</span>(FILENAME, ios::out);<span class="comment">//打开文件</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>-&gt;m_EmpNum; i++)</span><br><span class="line">&#123;</span><br><span class="line">ofs &lt;&lt; <span class="keyword">this</span>-&gt;m_EmpArray[i]-&gt;m_Id &lt;&lt;<span class="string">" "</span></span><br><span class="line">&lt;&lt; <span class="keyword">this</span>-&gt;m_EmpArray[i]-&gt;m_Name &lt;&lt;<span class="string">" "</span></span><br><span class="line">&lt;&lt; <span class="keyword">this</span>-&gt;m_EmpArray[i]-&gt;m_DeptId &lt;&lt;<span class="string">" "</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">ofs.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取文件人数</span></span><br><span class="line"><span class="keyword">int</span> workerManger::getEmpnum()</span><br><span class="line">&#123;</span><br><span class="line">fstream ofs;</span><br><span class="line">ofs.<span class="built_in">open</span>(FILENAME, ios::in);<span class="comment">//in读文件</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> id;</span><br><span class="line"><span class="built_in">string</span> name;</span><br><span class="line"><span class="keyword">int</span> did;</span><br><span class="line"><span class="keyword">int</span> num= <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (ofs&gt;&gt;id &amp;&amp; ofs&gt;&gt;name&amp;&amp;ofs&gt;&gt;did)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//统计的人数</span></span><br><span class="line">num++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> num;<span class="comment">//</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//读取文件,把数据存在到内存里</span></span><br><span class="line"><span class="keyword">void</span> workerManger::init_Emp()</span><br><span class="line">&#123;</span><br><span class="line">fstream ofs;</span><br><span class="line">ofs.<span class="built_in">open</span>(FILENAME, ios::in);<span class="comment">//in读文件</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> id;</span><br><span class="line"><span class="built_in">string</span> name;</span><br><span class="line"><span class="keyword">int</span> did;</span><br><span class="line"><span class="keyword">int</span> index=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (ofs &gt;&gt; id &amp;&amp; ofs &gt;&gt; name &amp;&amp; ofs &gt;&gt; did)</span><br><span class="line">&#123;</span><br><span class="line">Worker *worker = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">if</span> (did=<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">worker = <span class="keyword">new</span> Employee(id, name, did);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (did = <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">worker = <span class="keyword">new</span> Manager(id, name, did);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">worker = <span class="keyword">new</span> Boss(id, name, did);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray[index] = worker;<span class="comment">//赋值到数组中</span></span><br><span class="line">index++;</span><br><span class="line">&#125;</span><br><span class="line">ofs.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//显示职工</span></span><br><span class="line"><span class="keyword">void</span> workerManger::show_Emp()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_filesIsempty)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"文件不存在或为空"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m_EmpNum; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray[i]-&gt;showInfo();<span class="comment">//调用属性</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//清屏</span></span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//删除职工</span></span><br><span class="line"><span class="keyword">void</span> workerManger::del_Emp()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_filesIsempty)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"文件不存在或为空"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"请输入删除员工id"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">int</span> id = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; id;</span><br><span class="line"><span class="keyword">int</span> index = <span class="keyword">this</span>-&gt;isExit(id);</span><br><span class="line"><span class="keyword">if</span> ( index!= <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = index; i &lt;<span class="keyword">this</span>-&gt;m_EmpNum<span class="number">-1</span>; i++)<span class="comment">//数量-1，因为数组从零开始</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray[i] = <span class="keyword">this</span>-&gt;m_EmpArray[i + <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpNum--;<span class="comment">//数据更新</span></span><br><span class="line"><span class="keyword">this</span>-&gt;save();<span class="comment">//保存文档</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"删除成功"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"员工不存在"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//判断员工是否存在</span></span><br><span class="line"><span class="keyword">int</span> workerManger::isExit(<span class="keyword">int</span> id)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> index = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>-&gt;m_EmpNum; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_EmpArray[i]-&gt;m_Id == id)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//返回索引值</span></span><br><span class="line">index = i;<span class="comment">//返回索引值变量i而不是id编号</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> index;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//修改员工</span></span><br><span class="line"><span class="keyword">void</span> workerManger::mod_Emp()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_filesIsempty)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"文件不存在"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"请输入修改员工id"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">int</span> id;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; id;</span><br><span class="line"><span class="keyword">int</span> ret = <span class="keyword">this</span>-&gt;isExit(id);</span><br><span class="line"><span class="keyword">if</span> (ret!=<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">this</span>-&gt;m_EmpArray[ret];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> newId = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">string</span> newName = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">int</span> dSelect = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"查到： "</span> &lt;&lt; id &lt;&lt; <span class="string">"号职工，请输入新职工号： "</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; newId;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"请输入新姓名： "</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; newName;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"请输入岗位： "</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"1、普通职工"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"2、经理"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"3、老板"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; dSelect;</span><br><span class="line"></span><br><span class="line">Worker * worker = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">switch</span> (dSelect)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">worker = <span class="keyword">new</span> Employee(newId, newName, dSelect);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">worker = <span class="keyword">new</span> Manager(newId, newName, dSelect);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">worker = <span class="keyword">new</span> Boss(newId, newName, dSelect);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//更改数据 到数组中</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray[ret] = worker;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"修改成功！"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//保存到文件中</span></span><br><span class="line"><span class="keyword">this</span>-&gt;save();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"修改失败，查无此人"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//按任意键 清屏</span></span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> workerManger::find_Emp()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_filesIsempty)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"文件不存在或记录为空"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"请输入查找的方式："</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"1、按职工编号查找"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"2、按姓名查找"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> select;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; select;</span><br><span class="line"><span class="keyword">if</span> (select==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//按编号查</span></span><br><span class="line"><span class="keyword">int</span> id;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"请输入id"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; id;</span><br><span class="line"><span class="keyword">int</span> ret = isExit(id);</span><br><span class="line"><span class="keyword">if</span> (ret!=<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"查找成功,信息如下"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray[ret]-&gt;showInfo();<span class="comment">//isExit函数返回的是索引值</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"查找失败，查无此人"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(select == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//按姓名查找</span></span><br><span class="line"><span class="built_in">string</span> name;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"请输入查找姓名"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; name;</span><br><span class="line"><span class="keyword">bool</span> flag = <span class="literal">false</span>;  <span class="comment">//默认为没查找到，</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m_EmpNum; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (m_EmpArray[i]-&gt;m_Name == name)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"查找成功"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray[i]-&gt;showInfo();</span><br><span class="line">flag = <span class="literal">true</span>;<span class="comment">//更新查找</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag == <span class="literal">false</span>)<span class="comment">//遍历结束后，判断false</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//查无此人</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"查找失败，查无此人"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"输入选项有误"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> workerManger::sort_Emp()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_filesIsempty)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"文件不存在或记录为空！"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;m_EmpNum<span class="number">-1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m_EmpNum <span class="number">-1</span> -i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (m_EmpArray[j]-&gt;m_Id&gt;m_EmpArray[j+<span class="number">1</span>]-&gt;m_Id)</span><br><span class="line">&#123;</span><br><span class="line">Worker* temp = m_EmpArray[j + <span class="number">1</span>];        <span class="comment">// 元素交换</span></span><br><span class="line">m_EmpArray[j + <span class="number">1</span>] = m_EmpArray[j];</span><br><span class="line">m_EmpArray[j] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"排序成功,排序后结果为："</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">this</span>-&gt;save();</span><br><span class="line"><span class="keyword">this</span>-&gt;show_Emp();</span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">void</span> workerManger::clean_Emp()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"确认清空？"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"1、确认"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"2、返回"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> select = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; select;</span><br><span class="line"><span class="keyword">if</span> (select==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//打开模式 ios::trunc 如果存在删除文件并重新创建</span></span><br><span class="line"><span class="function">ofstream <span class="title">ofs</span><span class="params">(FILENAME, ios::trunc)</span></span>;</span><br><span class="line">ofs.<span class="built_in">close</span>();</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_EmpArray != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>-&gt;m_EmpNum; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_EmpArray[i] != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">this</span>-&gt;m_EmpArray[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpNum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">delete</span>[] <span class="keyword">this</span>-&gt;m_EmpArray;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_EmpArray = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_filesIsempty = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"清空成功！"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line">&#125;</span><br><span class="line">workerManger::~workerManger()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_EmpArray != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">delete</span>[] <span class="keyword">this</span>-&gt;m_EmpArray;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="主函数调用实现功能"><a href="#主函数调用实现功能" class="headerlink" title="主函数调用实现功能"></a>主函数调用实现功能</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">"workerManger.h"</span></span></span><br><span class="line"><span class="comment">//# include "work.h"</span></span><br><span class="line"><span class="comment">//# include "employee.h"</span></span><br><span class="line"><span class="comment">//# include "manager.h"</span></span><br><span class="line"><span class="comment">//# include "boss.h"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//测试类的实现</span></span><br><span class="line"><span class="comment">//Worker *p = new Employee(1, "tom", 1);</span></span><br><span class="line"><span class="comment">//p-&gt;showInfo();//多态,多个类调用父类workManger函数，有不同的子类实现，</span></span><br><span class="line"><span class="comment">//delete p;</span></span><br><span class="line"><span class="comment">//Worker *s = new Manager(2, "mike", 1);</span></span><br><span class="line"><span class="comment">//s-&gt;showInfo();</span></span><br><span class="line"><span class="comment">//delete s;</span></span><br><span class="line"><span class="comment">//Worker *q = new Boss(1, "Rank", 6);</span></span><br><span class="line"><span class="comment">//q-&gt;showInfo();</span></span><br><span class="line"><span class="comment">//delete q;</span></span><br><span class="line"></span><br><span class="line">workerManger wm;</span><br><span class="line"><span class="keyword">int</span> choice=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line">wm.showmenu();<span class="comment">//展示菜单</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"请选择"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; choice;</span><br><span class="line"><span class="keyword">switch</span> (choice)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">wm.exitmenu();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">wm.Add_Emp();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">wm.show_Emp();</span><br><span class="line"><span class="keyword">break</span>;<span class="comment">//切记打断</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">wm.del_Emp();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">wm.mod_Emp();<span class="comment">//修改员工</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">wm.find_Emp();<span class="comment">//查找员工</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">wm.sort_Emp();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">wm.clean_Emp();<span class="comment">//清空</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++基础入门 </category>
          
          <category> 案例二 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>文件操作</title>
      <link href="posts/95495db/"/>
      <url>posts/95495db/</url>
      
        <content type="html"><![CDATA[<p>文件操作要引入头文件<font color=red><fstream></font></p><h2 id="文本文件-写文件"><a href="#文本文件-写文件" class="headerlink" title="文本文件-写文件"></a>文本文件-写文件</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//创建流对象</span></span><br><span class="line">ofstream ofs;</span><br><span class="line"><span class="comment">//打开方式</span></span><br><span class="line">ofs.<span class="built_in">open</span>(<span class="string">"test.txt"</span>, ios::out);</span><br><span class="line"><span class="comment">//写内容</span></span><br><span class="line">ofs &lt;&lt; <span class="string">"姓名：张三"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">ofs.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test1();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="文本文件-读文件"><a href="#文本文件-读文件" class="headerlink" title="文本文件-读文件"></a>文本文件-读文件</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ifstream ifs;</span><br><span class="line">ifs.<span class="built_in">open</span>(<span class="string">"test.txt"</span>, ios::in);</span><br><span class="line"><span class="comment">//判断打开是否成功</span></span><br><span class="line"><span class="keyword">if</span> (!ifs.is_open())</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"打开失败"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//读数据,四种方式</span></span><br><span class="line"><span class="comment">//1</span></span><br><span class="line"><span class="comment">/*char buf[1024] = &#123; 0 &#125;;</span></span><br><span class="line"><span class="comment">while (ifs &gt;&gt; buf)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">cout &lt;&lt; buf &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"><span class="comment">//2</span></span><br><span class="line"><span class="comment">/*char buf[1024] = &#123; 0 &#125;;</span></span><br><span class="line"><span class="comment">while (ifs.getline(buf,sizeof(buf)))</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">cout &lt;&lt; buf &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"><span class="comment">//3</span></span><br><span class="line"><span class="comment">/*string buf;</span></span><br><span class="line"><span class="comment">while (getline(ifs,buf))</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">cout &lt;&lt; buf &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"><span class="comment">//4</span></span><br><span class="line"><span class="keyword">char</span> c;</span><br><span class="line"><span class="keyword">while</span> ((c=ifs.<span class="built_in">get</span>())!=EOF)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ifs. <span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二进制文件-写文件"><a href="#二进制文件-写文件" class="headerlink" title="二进制文件-写文件"></a>二进制文件-写文件</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">char</span> name[<span class="number">64</span>];</span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test3</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//创建输出流对象</span></span><br><span class="line"><span class="function">ofstream <span class="title">ofs</span><span class="params">(<span class="string">"person.txt"</span>, ios::out|ios::binary)</span></span>;<span class="comment">//binary，二进制方式</span></span><br><span class="line"><span class="comment">//初始化</span></span><br><span class="line">person p = &#123; <span class="string">"张三"</span>,<span class="number">16</span> &#125;;</span><br><span class="line">ofs.<span class="built_in">write</span>((<span class="keyword">const</span> <span class="keyword">char</span>*)&amp;p, <span class="keyword">sizeof</span>(p));</span><br><span class="line">ofs.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二进制文件-读文件"><a href="#二进制文件-读文件" class="headerlink" title="二进制文件-读文件"></a>二进制文件-读文件</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">char</span> name[<span class="number">64</span>];</span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test4</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ifstream ofs;</span><br><span class="line">ofs.<span class="built_in">open</span>(<span class="string">"person.txt"</span>, ios::in | ios::binary);</span><br><span class="line"><span class="keyword">if</span> (!ofs.is_open())</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"打开失败"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">person p;</span><br><span class="line">ofs.<span class="built_in">read</span>((<span class="keyword">char</span>*)&amp;p, <span class="keyword">sizeof</span>(p));</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; p.age &lt;&lt; p.name &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">ofs.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++基础入门 </category>
          
          <category> 进阶语法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>多态</title>
      <link href="posts/ac4294eb/"/>
      <url>posts/ac4294eb/</url>
      
        <content type="html"><![CDATA[<h2 id="多态基本语法"><a href="#多态基本语法" class="headerlink" title="多态基本语法"></a>多态基本语法</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">speak</span><span class="params">()</span><span class="comment">//变为虚函数之后，输出小猫在说话</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"动物在说话"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//多态满足条件</span></span><br><span class="line"><span class="comment">//有继承关系</span></span><br><span class="line"><span class="comment">//子类重写父类中的虚函数</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cat</span> :</span><span class="keyword">public</span> Animal</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">speak</span><span class="params">()</span><span class="comment">//函数返回值类型 函数名 参数列表 完全一致称为---重写</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"小猫在说话"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dog</span>:</span><span class="keyword">public</span> Animal</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">speak</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"小狗在说话"</span> &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//s使用虚函数时虚指针指向内部的表的函数被重写</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//设置说话函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dospeak</span><span class="params">(Animal &amp;animal)</span><span class="comment">//父类的指针或引用，执行子类对象</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">animal.speak();<span class="comment">//现在函数地址，早绑定 - 编译阶段确定函数地址，输出猫在说话，要地址晚绑定</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cat s;</span><br><span class="line">dog g;</span><br><span class="line">dospeak(s);</span><br><span class="line">dospeak(g);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test1();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="多态案例-计算器类"><a href="#多态案例-计算器类" class="headerlink" title="多态案例-计算器类"></a>多态案例-计算器类</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//利用多态实现计算器</span></span><br><span class="line"><span class="comment">//多态优点：代码组织结构清晰，可读性强，利于前期和后期的扩展以及维护</span></span><br><span class="line"><span class="comment">//开闭原则:对拓展进行开放，对修改进行关闭</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AbstractCalculator</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">int</span> <span class="title">getResult</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> m_Num1;</span><br><span class="line"><span class="keyword">int</span> m_Num2;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//加法计算器</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AddCalculator</span> :</span><span class="keyword">public</span> AbstractCalculator</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getResult</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> m_Num1 + m_Num2;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//减法计算器</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SubCalculator</span> :</span><span class="keyword">public</span> AbstractCalculator</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getResult</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> m_Num1 - m_Num2;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//乘法计算器</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MulCalculator</span> :</span><span class="keyword">public</span> AbstractCalculator</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getResult</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> m_Num1 * m_Num2;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//父类指针实现多态</span></span><br><span class="line">AbstractCalculator *abc = <span class="keyword">new</span> AddCalculator;</span><br><span class="line">abc-&gt;m_Num1 = <span class="number">20</span>;</span><br><span class="line">abc-&gt;m_Num2 = <span class="number">10</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; abc-&gt;m_Num1 &lt;&lt; <span class="string">"+"</span> &lt;&lt; abc-&gt;m_Num2 &lt;&lt; <span class="string">"="</span> &lt;&lt; abc-&gt;<span class="built_in">getResult</span>() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">delete</span> abc;<span class="comment">//销毁堆区数据--new的对象</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test2();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="纯虚函数和抽象类"><a href="#纯虚函数和抽象类" class="headerlink" title="纯虚函数和抽象类"></a>纯虚函数和抽象类</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">father</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//抽象类特点</span></span><br><span class="line"><span class="comment">//1无法实例化对象</span></span><br><span class="line"><span class="comment">//2子类必须重写抽象类中的纯虚函数，否则也属于抽象类</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">func</span><span class="params">()</span> </span>= <span class="number">0</span>;<span class="comment">//纯虚函数语法</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">boy</span> :</span><span class="keyword">public</span> father</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">func</span><span class="params">()</span><span class="comment">//纯虚函数重写</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"6"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test3</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">father *b = <span class="keyword">new</span> boy;<span class="comment">//用父类调用</span></span><br><span class="line"><span class="comment">//b.func();可以但是要用多态写法，要有继承关系</span></span><br><span class="line">b-&gt;func();</span><br><span class="line"><span class="keyword">delete</span> b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test3();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="多态案例-制作饮品"><a href="#多态案例-制作饮品" class="headerlink" title="多态案例-制作饮品"></a>多态案例-制作饮品</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//抽象制作饮品</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AbstractDrinking</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//烧水</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Boil</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"><span class="comment">//冲泡</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Brew</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"><span class="comment">//倒入杯中</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">PourInCup</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"><span class="comment">//加入辅料</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">PutSomething</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"><span class="comment">//规定流程</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MakeDrink</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Boil();</span><br><span class="line">Brew();</span><br><span class="line">PourInCup();</span><br><span class="line">PutSomething();</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//制作咖啡</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Coffee</span> :</span> <span class="keyword">public</span> AbstractDrinking &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//烧水</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Boil</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"煮农夫山泉!"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//冲泡</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Brew</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"冲泡咖啡!"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//倒入杯中</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">PourInCup</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"将咖啡倒入杯中!"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//加入辅料</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">PutSomething</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"加入牛奶!"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//制作茶水</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Tea</span> :</span> <span class="keyword">public</span> AbstractDrinking &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//烧水</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Boil</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"煮自来水!"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//冲泡</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Brew</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"冲泡茶叶!"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//倒入杯中</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">PourInCup</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"将茶水倒入杯中!"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//加入辅料</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">PutSomething</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"加入枸杞!"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//业务函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DoWork</span><span class="params">(AbstractDrinking* drink)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">drink-&gt;MakeDrink();</span><br><span class="line"><span class="keyword">delete</span> drink;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test4</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DoWork(<span class="keyword">new</span> Coffee);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main4</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test4();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="虚析构和纯析构"><a href="#虚析构和纯析构" class="headerlink" title="虚析构和纯析构"></a>虚析构和纯析构</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">Animal()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"Animal 构造函数调用！"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Speak</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//析构函数加上virtual关键字，变成虚析构函数</span></span><br><span class="line"><span class="comment">/*virtual ~Animal()</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">cout &lt;&lt; "Animal虚析构函数调用！" &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"><span class="keyword">virtual</span> ~Animal() = <span class="number">0</span>;<span class="comment">//纯虚析构，声明</span></span><br><span class="line">&#125;;</span><br><span class="line">Animal::~Animal()<span class="comment">//纯虚析构，开辟到堆区</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"Animal 纯虚析构函数调用！"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span> :</span> <span class="keyword">public</span> Animal &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Cat(<span class="built_in">string</span> name)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"Cat构造函数调用！"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">m_Name = <span class="keyword">new</span> <span class="built_in">string</span>(name);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Speak</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; *m_Name &lt;&lt; <span class="string">"小猫在说话!"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">~Cat()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"Cat析构函数调用!"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Name != <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="keyword">delete</span> m_Name;</span><br><span class="line">m_Name = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">string</span> *m_Name;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test5</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Animal *animal = <span class="keyword">new</span> Cat(<span class="string">"Tom"</span>);</span><br><span class="line">animal-&gt;Speak();</span><br><span class="line"></span><br><span class="line"><span class="comment">//通过父类指针去释放，会导致子类对象可能清理不干净，造成内存泄漏</span></span><br><span class="line"><span class="comment">//怎么解决？给基类增加一个虚析构函数</span></span><br><span class="line"><span class="comment">//虚析构函数就是用来解决通过父类指针释放子类对象</span></span><br><span class="line"><span class="keyword">delete</span> animal;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test5();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++基础入门 </category>
          
          <category> 进阶语法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>继承</title>
      <link href="posts/11d8b32d/"/>
      <url>posts/11d8b32d/</url>
      
        <content type="html"><![CDATA[<h2 id="继承基本语法"><a href="#继承基本语法" class="headerlink" title="继承基本语法"></a>继承基本语法</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">father</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">canter</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"内容"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">title</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"标题"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">boy</span> :</span><span class="keyword">public</span> father<span class="comment">//继承father</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"boy"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//class A : public B;</span></span><br><span class="line"><span class="comment">//A 类称为子类 或 派生类</span></span><br><span class="line"><span class="comment">//B 类称为父类 或 基类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">python</span> :</span><span class="keyword">public</span> father<span class="comment">//继承</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"python"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">boy p;</span><br><span class="line">p.canter();</span><br><span class="line">p.title();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test1();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="继承方式"><a href="#继承方式" class="headerlink" title="继承方式"></a>继承方式</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base1</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">int</span> m_A;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="keyword">int</span> m_B;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">int</span> m_C;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 公共继承</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son1</span> :</span><span class="keyword">public</span> Base1</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">m_A; <span class="comment">//可访问 public权限</span></span><br><span class="line">m_B; <span class="comment">//可访问 protected权限</span></span><br><span class="line"><span class="comment">//m_C; //不可访问</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Son1 p;</span><br><span class="line">p.m_A=<span class="number">100</span>;</span><br><span class="line"><span class="comment">//p.m_B = 100;//保护权限，类外无法访问，子类无法访问符类</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//保护继承</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base2</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">int</span> m_A;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="keyword">int</span> m_B;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">int</span> m_C;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son2</span> :</span><span class="keyword">protected</span> Base2</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">m_A; <span class="comment">//可访问 protected权限</span></span><br><span class="line">m_B; <span class="comment">//可访问 protected权限</span></span><br><span class="line"><span class="comment">//m_C; //不可访问</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test03</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Son2 p;</span><br><span class="line"><span class="comment">//p.m_A = 100;son2中变为保护权限，因此类外无法访问</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//私有继承</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base3</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">int</span> m_A;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="keyword">int</span> m_B;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">int</span> m_C;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son3</span> :</span><span class="keyword">private</span> Base3</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">m_A; <span class="comment">//可访问 private权限</span></span><br><span class="line">m_B; <span class="comment">//可访问 private权限</span></span><br><span class="line"><span class="comment">//m_C; //不可访问</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//孙子类也无法访问子类的私有继承</span></span><br></pre></td></tr></table></figure><h2 id="继承中的对象模型"><a href="#继承中的对象模型" class="headerlink" title="继承中的对象模型"></a>继承中的对象模型</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">int</span> m_A;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="keyword">int</span> m_B;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">int</span> m_C; <span class="comment">//私有成员只是被隐藏了，但是还是会继承下去</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//公共继承</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son</span> :</span><span class="keyword">public</span> Base</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">int</span> m_D;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//工具查看</span></span><br><span class="line"><span class="comment">//打开工具窗口后，定位到当前CPP文件的盘符</span></span><br><span class="line"><span class="comment">//然后输入： cl / d1 reportSingleClassLayout查看的类名 所属文件名</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test3</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//父类所有静态成员属性都会被子类继承</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"sizeof Son = "</span> &lt;&lt; <span class="keyword">sizeof</span>(Son) &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//答案：16,</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">test3();</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="继承的构造和析构"><a href="#继承的构造和析构" class="headerlink" title="继承的构造和析构"></a>继承的构造和析构</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">father</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">father()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"father构造"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">~father()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"father析构"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">boy</span> :</span><span class="keyword">public</span> father</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">boy()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"boy构造"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">~boy()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"boy析构"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test4</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">boy s1;<span class="comment">//class默认私有</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//先构造父类，再构造子类，然后释放子类，再释放父类</span></span><br><span class="line">test4();</span><br><span class="line"><span class="comment">//输出</span></span><br><span class="line"><span class="comment">/*father构造</span></span><br><span class="line"><span class="comment">boy构造</span></span><br><span class="line"><span class="comment">boy析构</span></span><br><span class="line"><span class="comment">father析构*/</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="继承同名处理方式"><a href="#继承同名处理方式" class="headerlink" title="继承同名处理方式"></a>继承同名处理方式</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">father</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">father()</span><br><span class="line">&#123;</span><br><span class="line">m_A = <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">" father-func()调用"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">int</span> m_A;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">son</span> :</span> <span class="keyword">public</span> father</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">son()</span><br><span class="line">&#123;</span><br><span class="line">m_A = <span class="number">200</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"son-func()调用"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">int</span> m_A;<span class="comment">//变量同名，公有</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//同名属性</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test7</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">son s;</span><br><span class="line"><span class="comment">//子类对象可以直接访问到子类中同名成员</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; s.m_A &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//200,调用子类</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; s.father::m_A &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//作用域来获取父类中同名的变量，100</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test8</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">son s;</span><br><span class="line">s.func();<span class="comment">//直接调用子类</span></span><br><span class="line">s.father::func();<span class="comment">//调用父类</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test8();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="继承同名静态成员"><a href="#继承同名静态成员" class="headerlink" title="继承同名静态成员"></a>继承同名静态成员</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">girl</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"girl - static void func()"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> m_A;<span class="comment">//类内声明</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> girl::m_A = <span class="number">100</span>;<span class="comment">//类外初始化</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">son</span>:</span><span class="keyword">public</span> girl</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"Son - static void func()"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> m_A;<span class="comment">//类内声明</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> son::m_A = <span class="number">20</span>;<span class="comment">//类外初始化</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test9</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">son s;</span><br><span class="line"><span class="comment">//通过对象访问</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; s.m_A &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; s.girl::m_A &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="comment">//通过类名访问</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; son::m_A &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="comment">//第一个::代表通过类名访问，第二个::代表访问父类作用域之下</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; son::girl::m_A &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test10</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//通过对象访问</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"通过对象访问： "</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">son s;</span><br><span class="line">s.func();</span><br><span class="line">s.girl::func();</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"通过类名访问： "</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">son::func();</span><br><span class="line">son::girl::func();</span><br><span class="line"><span class="comment">//出现同名，子类会隐藏掉父类中所有同名成员函数，需要加作作用域访问</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main6</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test10();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="多继承语法"><a href="#多继承语法" class="headerlink" title="多继承语法"></a>多继承语法</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">father1</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">father1()</span><br><span class="line">&#123;</span><br><span class="line">m_A = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> m_A;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">father2</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">father2()</span><br><span class="line">&#123;</span><br><span class="line">m_B = <span class="number">20</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m_B;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//子类继承两个父类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">son</span>:</span><span class="keyword">public</span> father1,<span class="keyword">public</span> father2</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">son()</span><br><span class="line">&#123;</span><br><span class="line">m_c = <span class="number">100</span>;</span><br><span class="line">m_d = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m_c;</span><br><span class="line"><span class="keyword">int</span> m_d;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test11</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">son s;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="keyword">sizeof</span>(s) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="comment">//父类出现同名成员，需要加作用域区分</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; s.father1::m_A &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; s.father2::m_B &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main9</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test11();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="菱形继承"><a href="#菱形继承" class="headerlink" title="菱形继承"></a>菱形继承</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//动物类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">animal</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">animal()</span><br><span class="line">&#123;</span><br><span class="line">m_Age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m_Age;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//虚继承，解决菱形继承问题</span></span><br><span class="line"><span class="comment">//继承前加virtual关键字后，变为虚继承</span></span><br><span class="line"><span class="comment">//此时公共的父类Animal称为虚基类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">sheep</span>:</span><span class="keyword">virtual</span> <span class="keyword">public</span> animal</span><br><span class="line">&#123;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">tuo</span>:</span><span class="keyword">virtual</span> <span class="keyword">public</span> animal</span><br><span class="line">&#123;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">sheeptuo</span>:</span><span class="keyword">public</span> sheep,<span class="keyword">public</span> tuo</span><br><span class="line">&#123;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test13</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">sheeptuo s;</span><br><span class="line">s.sheep::m_Age = <span class="number">10</span>;<span class="comment">//羊上有一份，驼上有一份</span></span><br><span class="line">s.tuo::m_Age = <span class="number">20</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; s.sheep::m_Age &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//菱形继承导致数据有两份，浪费资源</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; s.tuo::m_Age &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//使用虚继承，输出都为20</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; s.m_Age &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//自身访问，用底层的虚指针，指向表，使数据指向一个</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test13();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++基础入门 </category>
          
          <category> 进阶语法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>运算符重载</title>
      <link href="posts/2bf420ab/"/>
      <url>posts/2bf420ab/</url>
      
        <content type="html"><![CDATA[<h2 id="加号运算符重载"><a href="#加号运算符重载" class="headerlink" title="加号运算符重载"></a>加号运算符重载</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">girl</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//1成员函数实现重载+号</span></span><br><span class="line"><span class="comment">//girl operator+(girl &amp;p)//编译器自行命名</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//girl temp;//创建临时类</span></span><br><span class="line"><span class="comment">//temp.m_A = this-&gt;m_A + p.m_A;//this指针指向被调用的成员函数所属的对象</span></span><br><span class="line"><span class="comment">//temp.m_B = this-&gt;m_B + p.m_B;</span></span><br><span class="line"><span class="comment">//return temp;//要返回一个值，否则报错</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="keyword">int</span> m_A;</span><br><span class="line"><span class="keyword">int</span> m_B;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//2全局函数重载</span></span><br><span class="line">girl <span class="keyword">operator</span>+(girl &amp;p1, girl &amp;p2)</span><br><span class="line">&#123;</span><br><span class="line">girl temp;</span><br><span class="line">temp.m_A = p1.m_A + p2.m_A;</span><br><span class="line">temp.m_B = p1.m_B + p2.m_B;</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">girl A;</span><br><span class="line">A.m_A = <span class="number">10</span>;</span><br><span class="line">A.m_B = <span class="number">11</span>;</span><br><span class="line">girl B;</span><br><span class="line">B.m_A = <span class="number">10</span>;</span><br><span class="line">B.m_B = <span class="number">11</span>;</span><br><span class="line">girl C;</span><br><span class="line">C = B + A;<span class="comment">//+号不报错，实现重载。本质：C=p1.operator+(p2)</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; C.m_A &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; C.m_B &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test1();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="左移运算符重载"><a href="#左移运算符重载" class="headerlink" title="左移运算符重载"></a>左移运算符重载</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">girl</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//成员函数类比：p&lt;&lt;cout,无法实现cout&lt;&lt;p,只能利用全局函数</span></span><br><span class="line"><span class="keyword">int</span> m_A;</span><br><span class="line"><span class="keyword">int</span> m_B;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//全局函数,endl无法换行，所以void返回之后无法链式编程，改为ostream</span></span><br><span class="line"><span class="comment">//ostream输出流函数，&amp;，用引用的方式实现，所以可以改别名</span></span><br><span class="line">ostream &amp;<span class="keyword">operator</span>&lt;&lt;(ostream &amp;<span class="built_in">cout</span>, girl &amp;p)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"m_A="</span> &lt;&lt; p.m_A &lt;&lt; <span class="string">"m_B="</span> &lt;&lt; p.m_B &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">cout</span>;<span class="comment">//返回一个cout实现换行</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">girl p;</span><br><span class="line">p.m_A = <span class="number">10</span>;</span><br><span class="line">p.m_B = <span class="number">12</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; p &lt;&lt; <span class="string">"nb"</span>&lt;&lt;<span class="built_in">endl</span>;<span class="comment">//没有重载输出p时，报错因为没有匹配运算符</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test2();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="递增运算符"><a href="#递增运算符" class="headerlink" title="递增运算符"></a>递增运算符</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//重载递增</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">girl</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">friend</span> ostream &amp;<span class="keyword">operator</span>&lt;&lt;(ostream &amp;<span class="built_in">cout</span>, girl p);</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">girl()</span><br><span class="line">&#123;</span><br><span class="line">m_num = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//重载前置++运算符</span></span><br><span class="line">girl &amp;<span class="keyword">operator</span>++()<span class="comment">//引用地址，没有改变“原来”数据，一直对一个数据递增操作，所以用地址</span></span><br><span class="line">&#123;</span><br><span class="line">m_num++;</span><br><span class="line"><span class="keyword">return</span> *<span class="keyword">this</span>;<span class="comment">//解引用返回自身</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//重载后置++运算符</span></span><br><span class="line"><span class="comment">//返回值不是引用，因为后置递增释放局部的temp变量无法完成递增</span></span><br><span class="line">girl <span class="keyword">operator</span>++(<span class="keyword">int</span>)<span class="comment">//int占位参数，区分为后置,</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//先记录结果</span></span><br><span class="line">girl temp = *<span class="keyword">this</span>;<span class="comment">//如果返回地址，会释放以前的值，无法递增</span></span><br><span class="line">m_num++;</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">int</span> m_num;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">ostream &amp;<span class="keyword">operator</span>&lt;&lt;(ostream &amp;<span class="built_in">cout</span>, girl p)<span class="comment">//输出流重载cout</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; p.m_num;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">cout</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test3</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">girl p;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; ++p &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//++前置预算符重载</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test03</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">girl p;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; p++ &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//0</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; p&lt;&lt; <span class="built_in">endl</span>;<span class="comment">//1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test03();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">wang</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">wang(<span class="keyword">int</span> age)</span><br><span class="line">&#123;</span><br><span class="line">m_age = <span class="keyword">new</span> <span class="keyword">int</span>(age);<span class="comment">//开辟堆区内存，用m_age指针管理内存</span></span><br><span class="line">&#125;</span><br><span class="line">~wang()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (m_age != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">delete</span> m_age;<span class="comment">//释放内存，浅拷贝，堆区内存重复释放</span></span><br><span class="line">m_age = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//重载运算符</span></span><br><span class="line">wang&amp; <span class="keyword">operator</span>=(wang &amp;p)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (m_age != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">delete</span> m_age;</span><br><span class="line">m_age = <span class="literal">NULL</span>;<span class="comment">//清空内存</span></span><br><span class="line">&#125;</span><br><span class="line">m_age = <span class="keyword">new</span> <span class="keyword">int</span>(*p.m_age);<span class="comment">//实现深拷贝</span></span><br><span class="line"><span class="keyword">return</span> *<span class="keyword">this</span>;<span class="comment">//返回自身，链式编程</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> *m_age;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test4</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">wang <span class="title">p</span><span class="params">(<span class="number">18</span>)</span></span>;<span class="comment">//构造函数传参</span></span><br><span class="line"><span class="function">wang <span class="title">p2</span><span class="params">(<span class="number">20</span>)</span></span>;</span><br><span class="line"><span class="function">wang <span class="title">p3</span><span class="params">(<span class="number">24</span>)</span></span>;</span><br><span class="line">p3=p = p2;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; *p.m_age &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//*p.m_age解引用，获得本身：18</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; *p2.m_age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; *p3.m_age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="重载关系运算符"><a href="#重载关系运算符" class="headerlink" title="重载关系运算符"></a>重载关系运算符</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">person(<span class="built_in">string</span> name, <span class="keyword">int</span> age)</span><br><span class="line">&#123;</span><br><span class="line">m_name = name;</span><br><span class="line">m_age = age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//重载==号</span></span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span>==(person &amp;p)<span class="comment">//引用</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_age==p.m_age&amp;&amp;<span class="keyword">this</span>-&gt;m_name==p.m_name)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;<span class="comment">//返回bool类型，用bool函数</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//重载!=号</span></span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span>!=(person &amp;p)<span class="comment">//引用</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_age == p.m_age&amp;&amp;<span class="keyword">this</span>-&gt;m_name == p.m_name)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;<span class="comment">//返回bool类型，用bool函数</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">string</span> m_name;</span><br><span class="line"><span class="keyword">int</span> m_age;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test5</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">person <span class="title">p1</span><span class="params">(<span class="string">"tom"</span>, <span class="number">18</span>)</span></span>;</span><br><span class="line"><span class="function">person <span class="title">p2</span><span class="params">(<span class="string">"tom"</span>, <span class="number">20</span>)</span></span>;</span><br><span class="line"><span class="keyword">if</span> (p1==p2)<span class="comment">//实现重载不会报错</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"相同"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"不相同"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (p1 != p2)<span class="comment">//实现重载不会报错</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"不相同"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"相同"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="函数调用运载符"><a href="#函数调用运载符" class="headerlink" title="函数调用运载符"></a>函数调用运载符</h2><pre><code class="c++"><span class="comment">//函数调用运算符重载</span><span class="class"><span class="keyword">class</span> <span class="title">person</span></span><span class="class">{</span><span class="keyword">public</span>:    <span class="function"><span class="keyword">void</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="built_in">string</span> test)</span></span><span class="function">    </span>{        <span class="built_in">cout</span> &lt;&lt; test &lt;&lt; <span class="built_in">endl</span>;    }};<span class="class"><span class="keyword">class</span> <span class="title">addnum</span></span><span class="class">{</span><span class="keyword">public</span>:    <span class="function"><span class="keyword">int</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span><span class="comment">//仿函数创建灵活</span></span><span class="function">    </span>{        <span class="keyword">return</span> a + b;    }};<span class="function"><span class="keyword">void</span> <span class="title">test6</span><span class="params">()</span></span><span class="function"></span>{    person hum;    hum(<span class="string">"tom"</span>);<span class="comment">//调用像函数，称为仿函数</span>}<span class="function"><span class="keyword">void</span> <span class="title">test7</span><span class="params">()</span></span><span class="function"></span>{    addnum p;<span class="comment">//创建对象</span>    <span class="built_in">cout</span> &lt;&lt; p(<span class="number">1</span>, <span class="number">2</span>) &lt;&lt; <span class="built_in">endl</span>;}<span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><span class="function"></span>{    test7();    <span class="keyword">return</span> <span class="number">0</span>;}</code></pre>]]></content>
      
      
      <categories>
          
          <category> C++基础入门 </category>
          
          <category> 进阶语法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>友元</title>
      <link href="posts/63c99134/"/>
      <url>posts/63c99134/</url>
      
        <content type="html"><![CDATA[<h2 id="全局函数做友元"><a href="#全局函数做友元" class="headerlink" title="全局函数做友元"></a>全局函数做友元</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">room</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="comment">//goodguy函数可以访问私有私有成员</span></span><br><span class="line"><span class="function"><span class="keyword">friend</span> <span class="keyword">void</span> <span class="title">goodguy</span><span class="params">(room *p)</span></span>;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">room()<span class="comment">//析构函数</span></span><br><span class="line">&#123;</span><br><span class="line">m_bedroom = <span class="string">"卧室"</span>;</span><br><span class="line">m_liveroom = <span class="string">"客厅"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">string</span> m_liveroom;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="built_in">string</span> m_bedroom;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">goodguy</span><span class="params">(room *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"访问"</span> &lt;&lt; p-&gt;m_liveroom &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//公开,类外可以访问</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"访问"</span> &lt;&lt; p-&gt;m_bedroom &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//私有,friend友元，可以访问</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">room s;</span><br><span class="line">goodguy(&amp;s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test1();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="类做友元"><a href="#类做友元" class="headerlink" title="类做友元"></a>类做友元</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Building</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">goodGay</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">goodGay();</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">visit</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">Building *building;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Building</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="comment">//告诉编译器 goodGay类是Building类的好朋友，可以访问到Building类中私有内容</span></span><br><span class="line"><span class="keyword">friend</span> <span class="class"><span class="keyword">class</span> <span class="title">goodGay</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Building();</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">string</span> m_SittingRoom; <span class="comment">//客厅</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="built_in">string</span> m_BedRoom;<span class="comment">//卧室</span></span><br><span class="line">&#125;;</span><br><span class="line">Building::Building()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_SittingRoom = <span class="string">"客厅"</span>;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_BedRoom = <span class="string">"卧室"</span>;</span><br><span class="line">&#125;</span><br><span class="line">goodGay::goodGay()</span><br><span class="line">&#123;</span><br><span class="line">building = <span class="keyword">new</span> Building;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> goodGay::visit()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"好基友正在访问"</span> &lt;&lt; building-&gt;m_SittingRoom &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"好基友正在访问"</span> &lt;&lt; building-&gt;m_BedRoom &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">goodGay gg;</span><br><span class="line">gg.visit();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">test2();</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="成员函数做友元"><a href="#成员函数做友元" class="headerlink" title="成员函数做友元"></a>成员函数做友元</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Build</span>;</span><span class="comment">//声明一个类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">goodGuy</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">goodGuy();</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">visit</span><span class="params">()</span></span>; <span class="comment">//只让visit函数作为Building的好朋友，可以发访问Building中私有内容</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">visit2</span><span class="params">()</span></span>;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">Build *building;<span class="comment">//私有类</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Build</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="comment">//告诉编译器  goodGay类中的visit成员函数 是Building好朋友，可以访问私有内容</span></span><br><span class="line"><span class="keyword">friend</span> <span class="keyword">void</span> goodGuy::visit();</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Build();<span class="comment">//析构函数</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">string</span> m_SittingRoom; <span class="comment">//客厅</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="built_in">string</span> m_BedRoom;<span class="comment">//卧室</span></span><br><span class="line">&#125;;</span><br><span class="line">Build::Build()<span class="comment">//作用域控制函数,定义属性</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_SittingRoom = <span class="string">"客厅"</span>;</span><br><span class="line"><span class="keyword">this</span>-&gt;m_BedRoom = <span class="string">"卧室"</span>;</span><br><span class="line">&#125;</span><br><span class="line">goodGuy::goodGuy()<span class="comment">//作用域控制析构函数</span></span><br><span class="line">&#123;</span><br><span class="line">building = <span class="keyword">new</span> Build;<span class="comment">//在堆区创建一个对象</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> goodGuy::visit()<span class="comment">//</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"好基友正在访问"</span> &lt;&lt; building-&gt;m_SittingRoom &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"好基友正在访问"</span> &lt;&lt; building-&gt;m_BedRoom &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> goodGuy::visit2()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"好基友正在访问"</span> &lt;&lt; building-&gt;m_SittingRoom &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="comment">//cout &lt;&lt; "好基友正在访问" &lt;&lt; building-&gt;m_BedRoom &lt;&lt; endl;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test3</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">goodGuy  gg;</span><br><span class="line">gg.visit();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">test3();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++基础入门 </category>
          
          <category> 进阶语法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>c++对象模型和this指针</title>
      <link href="posts/ff7c84cd/"/>
      <url>posts/ff7c84cd/</url>
      
        <content type="html"><![CDATA[<h2 id="成员函数和成员变量分开储存"><a href="#成员函数和成员变量分开储存" class="headerlink" title="成员函数和成员变量分开储存"></a>成员函数和成员变量分开储存</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> m_A;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> m_B;<span class="comment">//静态变量</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">()</span> </span>&#123;&#125;;<span class="comment">//非静态成员函数</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> person::m_B;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">person p;</span><br><span class="line"><span class="comment">//空对象占用内存为1</span></span><br><span class="line"><span class="comment">//c++编译器会为每个空对象分配一个字节的内存，为空对象占内存位置(占茅坑)</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="keyword">sizeof</span>(p) &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">person p;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="keyword">sizeof</span>(p) &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//4</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//test01();</span></span><br><span class="line">test02();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="this指针"><a href="#this指针" class="headerlink" title="this指针"></a>this指针</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">phone</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">phone(<span class="keyword">int</span> age)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//this指针指向被调用的成员函数所属的对象</span></span><br><span class="line"><span class="keyword">this</span>-&gt;age = age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">phone&amp; <span class="title">addperson</span><span class="params">(phone &amp;p)</span><span class="comment">//用引用的方式返回，如果返回为值，则创造新的变量，输出为20</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;age += p.age;<span class="comment">//加到成员p的年龄上</span></span><br><span class="line"><span class="keyword">return</span> *<span class="keyword">this</span>;<span class="comment">//this是指向p2的指针，*this指向p2本身</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//1解决名称冲突</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">phone <span class="title">p</span><span class="params">(<span class="number">18</span>)</span></span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; p.age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//2返回对象本身用*this</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">phone <span class="title">p</span><span class="params">(<span class="number">8</span>)</span></span>;</span><br><span class="line"><span class="function">phone <span class="title">p2</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line"><span class="comment">//链式编程</span></span><br><span class="line">p2.addperson(p).addperson(p).addperson(p);<span class="comment">//利用this指针不断返回p2本身实现相加</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; p2.age &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//调用行为，实现相加</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test2();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="空指针访问成员函数"><a href="#空指针访问成员函数" class="headerlink" title="空指针访问成员函数"></a>空指针访问成员函数</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">hum</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showname</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"名字"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showage</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//提高程序健壮性，预防报错</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>==<span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//报错原因因为传入指针为NULL,无法调用其属性，无中生有</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; m_age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> m_age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test03</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">hum *p=<span class="literal">NULL</span>;</span><br><span class="line">p-&gt;showage();</span><br><span class="line">p-&gt;showname();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test03();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="const修饰成员函数"><a href="#const修饰成员函数" class="headerlink" title="const修饰成员函数"></a>const修饰成员函数</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">girl</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//this本质为指针常量，指针指向不可修改</span></span><br><span class="line"><span class="comment">//形式类比为：const girl *const this,指向和值都不可修改</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showname</span><span class="params">()</span> <span class="keyword">const</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;a = <span class="number">100</span>;</span><br><span class="line"><span class="comment">//this-&gt;name = 100;报错</span></span><br><span class="line"><span class="comment">//this =NULL;报错</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> name;</span><br><span class="line"><span class="keyword">mutable</span> <span class="keyword">int</span> a;<span class="comment">//特殊声明，可修改值，加关键字mutable</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test6</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">girl p;</span><br><span class="line">p.showname();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test7</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">const</span> girl p;</span><br><span class="line"><span class="comment">//p.name = 200;</span></span><br><span class="line">p.a = <span class="number">500</span>;<span class="comment">//在常对象下也可修改</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++基础入门 </category>
          
          <category> 进阶语法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>对象的初始化和清理</title>
      <link href="posts/5bd18230/"/>
      <url>posts/5bd18230/</url>
      
        <content type="html"><![CDATA[<h2 id="构造函数和析构函数"><a href="#构造函数和析构函数" class="headerlink" title="构造函数和析构函数"></a>构造函数和析构函数</h2><p>构造函数的作用是初始化对象的数据成员。如果创建一个类你没有写任何构造函数,则系统会自动生成默认的无参构造函数，函数为空，什么都不做， 只要你写了一个下面的某一种构造函数，系统就不会再自动生成这样一个默认的构造函数，如果希望有一个这样的无参构造函数，则需要自己显示地写出来。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//构造初始化，析构清理</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//1构造函数</span></span><br><span class="line">person()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"构造函数"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//2析构函数</span></span><br><span class="line">~person()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"析构函数"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test03</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">person p;<span class="comment">//没有小括号，没有调用函数,执行完毕后释放对象</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">person p;</span><br><span class="line"><span class="comment">//test01();</span></span><br><span class="line">system(<span class="string">"pause"</span>);<span class="comment">//析构函数在暂停之后释放，所以只出现“构造”</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="构造函数分类和调用"><a href="#构造函数分类和调用" class="headerlink" title="构造函数分类和调用"></a>构造函数分类和调用</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1、构造函数分类</span></span><br><span class="line"><span class="comment">// 按照参数分类分为 有参和无参构造   无参又称为默认构造函数</span></span><br><span class="line"><span class="comment">// 按照类型分类分为 普通构造和拷贝构造</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//无参（默认）构造函数</span></span><br><span class="line">Person() &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"无参构造函数!"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//有参构造函数</span></span><br><span class="line">Person(<span class="keyword">int</span> a) &#123;</span><br><span class="line">age = a;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"有参构造函数!"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//拷贝构造函数</span></span><br><span class="line">Person(<span class="keyword">const</span> Person&amp; p) &#123;</span><br><span class="line">age = p.age;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"拷贝构造函数!"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//析构函数</span></span><br><span class="line">~Person() &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"析构函数!"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2、构造函数的调用</span></span><br><span class="line"><span class="comment">//调用无参构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Person p; <span class="comment">//调用无参构造函数</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//调用有参的构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.1  括号法，常用</span></span><br><span class="line"><span class="function">Person <span class="title">p1</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line"><span class="comment">//注意1：调用无参构造函数不能加括号，如果加了编译器认为这是一个函数声明</span></span><br><span class="line"><span class="comment">//Person p2();</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2.2 显式法</span></span><br><span class="line">Person p2 = Person(<span class="number">10</span>); </span><br><span class="line">Person p3 = Person(p2);</span><br><span class="line"><span class="comment">//Person(10)单独写就是匿名对象  当前行结束之后，马上析构</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2.3 隐式转换法</span></span><br><span class="line">Person p4 = <span class="number">10</span>; <span class="comment">// Person p4 = Person(10); </span></span><br><span class="line">Person p5 = p4; <span class="comment">// Person p5 = Person(p4); </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//注意2：不能利用 拷贝构造函数 初始化匿名对象 编译器认为是对象声明</span></span><br><span class="line"><span class="comment">//Person p5(p4);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">test01();</span><br><span class="line"><span class="comment">//test02();</span></span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="拷贝构造函数"><a href="#拷贝构造函数" class="headerlink" title="拷贝构造函数"></a>拷贝构造函数</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">person()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"person默认构造函数调用"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">person(<span class="keyword">int</span> age)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"person有参构造函数调用"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">m_Age = age;</span><br><span class="line">&#125;</span><br><span class="line">person(<span class="keyword">const</span> person &amp;p)<span class="comment">//拷贝构造函数</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"person拷贝构造函数调用"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">m_Age = p.m_Age;</span><br><span class="line">&#125;</span><br><span class="line">~person()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"person默认析构函数调用"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m_Age;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dowork</span><span class="params">(person p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">person <span class="title">p1</span><span class="params">(<span class="number">20</span>)</span></span>;</span><br><span class="line"><span class="function">person <span class="title">p2</span><span class="params">(p1)</span></span>;<span class="comment">//p2拷贝p1</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; p2.m_Age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">person p;<span class="comment">//拷贝函数的隐式写法</span></span><br><span class="line">dowork(p);<span class="comment">//函数调用的p不是一件事</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test02();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="深拷贝与浅拷贝"><a href="#深拷贝与浅拷贝" class="headerlink" title="深拷贝与浅拷贝"></a>深拷贝与浅拷贝</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Person()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"默认构造函数"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">Person(<span class="keyword">int</span> age,<span class="keyword">int</span> hight)</span><br><span class="line">&#123;</span><br><span class="line">m_Age = age;</span><br><span class="line">m_Hight = <span class="keyword">new</span> <span class="keyword">int</span>(hight);<span class="comment">//new会成为这个区的地址</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"有参构造函数"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//自己实现拷贝构造函数</span></span><br><span class="line">Person(<span class="keyword">const</span> Person &amp;p)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"拷贝构造函数调用"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">m_Age = p.m_Age;</span><br><span class="line"><span class="comment">//m_Hight = p.m_Hight;编译器默认实现</span></span><br><span class="line">m_Hight = <span class="keyword">new</span> <span class="keyword">int</span>(*p.m_Hight);<span class="comment">//在堆区申请一块新的内存</span></span><br><span class="line">&#125;</span><br><span class="line">~Person()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (m_Hight!=<span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">delete</span> m_Hight;<span class="comment">//释放内存，浅拷贝，堆区内存重复释放</span></span><br><span class="line">m_Hight = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"析构函数"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m_Age;</span><br><span class="line"><span class="keyword">int</span> *m_Hight;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test3</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">Person <span class="title">p1</span><span class="params">(<span class="number">18</span>,<span class="number">160</span>)</span></span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"p1年龄为"</span> &lt;&lt; p1.m_Age &lt;&lt;*p1.m_Hight&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(p1)</span></span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; p2.m_Age &lt;&lt; *p1.m_Hight &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test3();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="初始化列表"><a href="#初始化列表" class="headerlink" title="初始化列表"></a>初始化列表</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">girl</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//传统操作</span></span><br><span class="line"><span class="comment">/*girl(int a, int b, int c)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">m_A = a;</span></span><br><span class="line"><span class="comment">m_B = b;</span></span><br><span class="line"><span class="comment">m_C = c;</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"><span class="comment">//初始化列表属性</span></span><br><span class="line">girl(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> c) :m_A(a), m_B(b), m_C(b)</span><br><span class="line">&#123;&#125;</span><br><span class="line"><span class="keyword">int</span> m_A;</span><br><span class="line"><span class="keyword">int</span> m_B;</span><br><span class="line"><span class="keyword">int</span> m_C;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test5</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//girl s(10,20,30);</span></span><br><span class="line"><span class="function">girl <span class="title">s</span><span class="params">(<span class="number">30</span>,<span class="number">20</span>,<span class="number">10</span>)</span></span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; s.m_A &lt;&lt; s.m_B &lt;&lt; s.m_C &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test5();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="静态成员变量"><a href="#静态成员变量" class="headerlink" title="静态成员变量"></a>静态成员变量</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">son</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//静态成员变量特点：</span></span><br><span class="line"><span class="comment">//1 在编译阶段分配内存</span></span><br><span class="line"><span class="comment">//2 类内声明，类外初始化</span></span><br><span class="line"><span class="comment">//3 所有对象共享同一份数据</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> m_A;<span class="comment">//类内声明</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span>  son::m_A = <span class="number">100</span>;<span class="comment">//类外初始化</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">son p;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; p.m_A &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//100</span></span><br><span class="line">son p2;</span><br><span class="line">p2.m_A = <span class="number">200</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; p.m_A &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//200,共享静态变量数据，更改之后全部的数据都改变</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test01();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="静态成员函数"><a href="#静态成员函数" class="headerlink" title="静态成员函数"></a>静态成员函数</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">girl</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">m_A = <span class="number">100</span>;<span class="comment">//静态成员函数只能访问静态成员变量,否则函数体无法区分静态变量的区别</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"静态函数访问"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> m_A; <span class="comment">//静态成员变量,类内定义，类外访问</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> girl::m_A = <span class="number">10</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">where</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//静态成员变量两种访问方式</span></span><br><span class="line"><span class="comment">//1、通过对象</span></span><br><span class="line">girl p;</span><br><span class="line">p.func();</span><br><span class="line"><span class="comment">//2、通过类名</span></span><br><span class="line">girl::func();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">where();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++基础入门 </category>
          
          <category> 进阶语法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>class封装</title>
      <link href="posts/618f26ef/"/>
      <url>posts/618f26ef/</url>
      
        <content type="html"><![CDATA[<h2 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> PI = <span class="number">3.14</span>;</span><br><span class="line"><span class="comment">//设计一个圆类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">circle</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="comment">//访问权限</span></span><br><span class="line"><span class="comment">//公共权限</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//属性；成员属性，成员变量</span></span><br><span class="line"><span class="comment">//半径；成员函数，成员方法</span></span><br><span class="line"><span class="keyword">int</span> r;</span><br><span class="line"><span class="comment">//行为</span></span><br><span class="line"><span class="comment">//周长</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">c</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">2</span> * PI*r;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//通过圆类创建对象</span></span><br><span class="line"><span class="comment">//实例化（具像化）</span></span><br><span class="line"><span class="built_in">circle</span> wo;</span><br><span class="line"><span class="comment">//对象赋值</span></span><br><span class="line">wo.r = <span class="number">2</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"圆的周长"</span> &lt;&lt; wo.c() &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//小括号记得加</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="私有"><a href="#私有" class="headerlink" title="私有"></a>私有</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="comment">//成员属性设置为私有</span></span><br><span class="line"><span class="comment">//1可以自己控制读写权限</span></span><br><span class="line"><span class="comment">//2对于写权限，我们可以检测数据的有效性</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//设置姓名</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setname</span><span class="params">(<span class="built_in">string</span> he)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">name = he;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">getname</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getage</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> age;<span class="comment">//变量名设置一定要区别</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setage</span><span class="params">(<span class="keyword">int</span> page)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (page &lt; <span class="number">0</span> || page &gt; <span class="number">150</span>) &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"j"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">age = page;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setlover</span><span class="params">(<span class="built_in">string</span> lover)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">love = lover;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="comment">//姓名,可读可写</span></span><br><span class="line"><span class="built_in">string</span> name;</span><br><span class="line"><span class="comment">//年龄，只读</span></span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line"><span class="comment">//朋友，只写</span></span><br><span class="line"><span class="built_in">string</span> love;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">person p;</span><br><span class="line">p.setname(<span class="string">"张三"</span>);<span class="comment">//传参不是=</span></span><br><span class="line"><span class="comment">//p.age;成员不可访问，age为私有</span></span><br><span class="line">p.setlover(<span class="string">"lover"</span>);</span><br><span class="line"><span class="comment">//p.love;不可读</span></span><br><span class="line">p.setage(<span class="number">-02</span>);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; p.getname() &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//getname+()</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; p.getage() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="封装圆类"><a href="#封装圆类" class="headerlink" title="封装圆类"></a>封装圆类</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">point</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setX</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">m_x = x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getX</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> m_x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setY</span><span class="params">(<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">m_y = y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getY</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> m_y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">int</span> m_x;</span><br><span class="line"><span class="keyword">int</span> m_y;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">circle</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setR</span><span class="params">(<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">m_r = r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getR</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> m_r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setP</span><span class="params">(<span class="built_in">point</span> center)</span><span class="comment">//设置一个圆心</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">m_center = center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="built_in">point</span> <span class="title">getcenter</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> m_center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">int</span> m_r;</span><br><span class="line"><span class="built_in">point</span> m_center;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">incircle</span><span class="params">(<span class="built_in">circle</span> &amp;c, <span class="built_in">point</span> &amp;d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> distance = (d.getX() - c.getcenter().getX())*(d.getX() - c.getcenter().getX())</span><br><span class="line">+ (d.getY() - c.getcenter().getY())*(d.getY() - c.getcenter().getY());</span><br><span class="line"><span class="keyword">int</span> rdistance = c.getR()*c.getR();</span><br><span class="line"><span class="keyword">if</span> (distance&gt; rdistance)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"在圆外"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (distance == rdistance)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"在圆上"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (distance &lt; rdistance)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"在圆内"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">circle</span> c;<span class="comment">//创建一个圆</span></span><br><span class="line"><span class="built_in">point</span> d;<span class="comment">//点</span></span><br><span class="line"><span class="built_in">point</span> center;<span class="comment">//圆心</span></span><br><span class="line">d.setX(<span class="number">5</span>);</span><br><span class="line">d.setY(<span class="number">5</span>);</span><br><span class="line">c.setR(<span class="number">10</span>);</span><br><span class="line">center.setX(<span class="number">10</span>);</span><br><span class="line">center.setY(<span class="number">0</span>);</span><br><span class="line">c.setP(center);</span><br><span class="line">incircle(c, d);<span class="comment">//比较距离</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++基础入门 </category>
          
          <category> 进阶语法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>函数高级</title>
      <link href="posts/3475048c/"/>
      <url>posts/3475048c/</url>
      
        <content type="html"><![CDATA[<h2 id="默认参数"><a href="#默认参数" class="headerlink" title="默认参数"></a>默认参数</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fun</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b=<span class="number">20</span>, <span class="keyword">int</span> c=<span class="number">30</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a + b + c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//注意事项</span></span><br><span class="line"><span class="comment">//1某个位置有了默认参数，接下来都要设置默认参数</span></span><br><span class="line"><span class="comment">//2如果函数声明有默认参数，函数实现就不能有默认参数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; fun(<span class="number">10</span>,<span class="number">30</span>) &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//b=30,结果=70；有数据用传入数据，无数据用默认数据</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="占位参数"><a href="#占位参数" class="headerlink" title="占位参数"></a>占位参数</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span>)</span><span class="comment">//用整形数据占位，方便之后调用</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"this is mine"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">fun(<span class="number">10</span>,<span class="number">5</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="函数重载"><a href="#函数重载" class="headerlink" title="函数重载"></a>函数重载</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="comment">//函数重载：函数名可以相同</span></span><br><span class="line"><span class="comment">//1同一个作用域</span></span><br><span class="line"><span class="comment">//2函数名称相同</span></span><br><span class="line"><span class="comment">//3函数参数类型不同，或者个数不同，或者顺序不同</span></span><br><span class="line"><span class="comment">//类比多音字</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"fun调用"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun</span><span class="params">(<span class="keyword">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"fun的使用"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">double</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"fun(int a, double b)的使用"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun</span><span class="params">(<span class="keyword">double</span> b, <span class="keyword">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"fun(double b, int a)的使用"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//函数返回值不可以做函数重载条件，</span></span><br><span class="line"><span class="comment">//int fun/void fun不能重载</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//fun();</span></span><br><span class="line"><span class="comment">//fun(10);//两者调用不同</span></span><br><span class="line">fun(<span class="number">10</span>, <span class="number">10.1</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="函数重载注意事项"><a href="#函数重载注意事项" class="headerlink" title="函数重载注意事项"></a>函数重载注意事项</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="comment">//引用作为函数重载条件</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun</span><span class="params">(<span class="keyword">int</span> &amp;a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"func(int &amp;a)调用"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> &amp;a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">"func(const int &amp;a)调用"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//函数重载碰到的默认参数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun2</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b=<span class="number">10</span>)</span><span class="comment">//默认参数，出现二义性，编译器报错</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"func(int a, int b)调用"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun2</span><span class="params">(<span class="keyword">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"func(int a)调用"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//int a = 10;</span></span><br><span class="line"><span class="comment">//fun(a);//调用第一个函数</span></span><br><span class="line"><span class="comment">//fun(10);//调用第二个函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//fun2(10);</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++基础入门 </category>
          
          <category> 进阶语法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>练习案例一</title>
      <link href="posts/1f5ca856/"/>
      <url>posts/1f5ca856/</url>
      
        <content type="html"><![CDATA[<h2 id="通讯录增删查改"><a href="#通讯录增删查改" class="headerlink" title="通讯录增删查改"></a>通讯录增删查改</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">define</span> MAX  1000<span class="comment">//不用加“；”</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Person</span>//人的结构体变量</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="built_in">string</span> p_name;</span><br><span class="line"><span class="keyword">int</span> p_age;</span><br><span class="line"><span class="keyword">int</span> p_sex;</span><br><span class="line"><span class="keyword">int</span> p_phone;</span><br><span class="line"><span class="built_in">string</span> p_address;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Personbook</span>//通讯录结构体变量</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">Person <span class="built_in">array</span>[MAX];<span class="comment">//创造一个名为array的结构体数组</span></span><br><span class="line"><span class="keyword">int</span> m_size; </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mean</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"***************************"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"*****  1、添加联系人  *****"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"*****  2、显示联系人  *****"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"*****  3、删除联系人  *****"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"*****  4、查找联系人  *****"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"*****  5、修改联系人  *****"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"*****  6、清空联系人  *****"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"*****  0、退出通讯录  *****"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"***************************"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//添加联系人</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addPerson</span><span class="params">(Personbook *<span class="built_in">abs</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">abs</span>-&gt;m_size==MAX)<span class="comment">//目录逐条输入，等于MAX时立即打断</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"人数超出限制"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//姓名</span></span><br><span class="line"><span class="built_in">string</span> name;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"请输入姓名： "</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; name;</span><br><span class="line"><span class="built_in">abs</span>-&gt;<span class="built_in">array</span>[<span class="built_in">abs</span>-&gt;m_size].p_name = name;</span><br><span class="line"><span class="comment">//年龄</span></span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"请输入年龄： "</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; age;</span><br><span class="line"><span class="built_in">abs</span>-&gt;<span class="built_in">array</span>[<span class="built_in">abs</span>-&gt;m_size].p_age = age;</span><br><span class="line"><span class="comment">//性别</span></span><br><span class="line"><span class="keyword">int</span> sex;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"请输入性别: "</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; sex;</span><br><span class="line"><span class="keyword">if</span> (sex == <span class="number">0</span> || sex == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">abs</span>-&gt;<span class="built_in">array</span>[<span class="built_in">abs</span>-&gt;m_size].p_sex = sex;</span><br><span class="line"><span class="keyword">break</span>;<span class="comment">//当输入正确时，打断循环</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"请重新输入"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//电话</span></span><br><span class="line"><span class="keyword">int</span> phone;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"请输入电话: "</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; phone;</span><br><span class="line"><span class="built_in">abs</span>-&gt;<span class="built_in">array</span>[<span class="built_in">abs</span>-&gt;m_size].p_phone = phone;</span><br><span class="line"><span class="comment">//住址</span></span><br><span class="line"><span class="built_in">string</span> address;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"请输入住址: "</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; address;</span><br><span class="line"><span class="built_in">abs</span>-&gt;<span class="built_in">array</span>[<span class="built_in">abs</span>-&gt;m_size].p_address = address;</span><br><span class="line"><span class="comment">//更新目录</span></span><br><span class="line"><span class="built_in">abs</span>-&gt;m_size++;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"输入成功"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">system(<span class="string">"pause"</span>);<span class="comment">//任意键继续</span></span><br><span class="line">system(<span class="string">"cls"</span>);<span class="comment">//任意键清空</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="comment">//显示联系人</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showPerson</span><span class="params">(Personbook *<span class="built_in">abs</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">abs</span>-&gt;m_size==<span class="number">0</span>)<span class="comment">//==判断</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"请输入联系人"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;<span class="built_in">abs</span>-&gt;m_size; i++)<span class="comment">//循环连续显示</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"姓名： "</span> &lt;&lt; <span class="built_in">abs</span>-&gt;<span class="built_in">array</span>[i].p_name &lt;&lt; <span class="string">"\t"</span>;<span class="comment">//[i]依次读取</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"年龄： "</span> &lt;&lt; <span class="built_in">abs</span>-&gt;<span class="built_in">array</span>[i].p_age &lt;&lt; <span class="string">"\t"</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"性别： "</span> &lt;&lt; (<span class="built_in">abs</span>-&gt;<span class="built_in">array</span>[i].p_sex ==<span class="number">1</span>?<span class="string">"男"</span>:<span class="string">"女"</span>)&lt;&lt; <span class="string">"\t"</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"电话： "</span> &lt;&lt; <span class="built_in">abs</span>-&gt;<span class="built_in">array</span>[i].p_phone &lt;&lt; <span class="string">"\t"</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"住址： "</span> &lt;&lt; <span class="built_in">abs</span>-&gt;<span class="built_in">array</span>[i].p_address &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//检测联系人是否存在？返回联系人数组中位置：不存在返回-1</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">exitPerson</span><span class="params">(Personbook *<span class="built_in">abs</span>,<span class="built_in">string</span> name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">abs</span>-&gt;m_size; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (name == <span class="built_in">abs</span>-&gt;<span class="built_in">array</span>[i].p_name)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;<span class="comment">//放到for循环外部，等到全部遍历完再返回，否则数组为空，开始会返回0，</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//删除联系人</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">deletePerson</span><span class="params">(Personbook *<span class="built_in">abs</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> ret;</span><br><span class="line"><span class="built_in">string</span> name;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">"请输入姓名"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; name;</span><br><span class="line">ret=exitPerson(<span class="built_in">abs</span>,name);</span><br><span class="line"><span class="comment">//利用返回值，删除联系人</span></span><br><span class="line"><span class="keyword">if</span> (ret!=<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">abs</span>-&gt;m_size; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//数据迁移</span></span><br><span class="line"><span class="built_in">abs</span>-&gt;<span class="built_in">array</span>[i] = <span class="built_in">abs</span>-&gt;<span class="built_in">array</span>[i + <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">abs</span>-&gt;m_size--;<span class="comment">//更新数据表</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"删除成功"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"查无此人"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//查找联系人</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">findPerson</span><span class="params">(Personbook *<span class="built_in">abs</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"请输入联系人"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">string</span> name;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; name;</span><br><span class="line"><span class="keyword">int</span> ret = exitPerson(<span class="built_in">abs</span>, name);</span><br><span class="line"><span class="keyword">if</span> (ret != <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"姓名： "</span> &lt;&lt; <span class="built_in">abs</span>-&gt;<span class="built_in">array</span>[ret].p_name &lt;&lt; <span class="string">"\t"</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"年龄： "</span> &lt;&lt; <span class="built_in">abs</span>-&gt;<span class="built_in">array</span>[ret].p_age &lt;&lt; <span class="string">"\t"</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"性别： "</span> &lt;&lt; (<span class="built_in">abs</span>-&gt;<span class="built_in">array</span>[ret].p_sex == <span class="number">1</span> ? <span class="string">"男"</span> : <span class="string">"女"</span>) &lt;&lt; <span class="string">"\t"</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"电话： "</span> &lt;&lt; <span class="built_in">abs</span>-&gt;<span class="built_in">array</span>[ret].p_phone &lt;&lt; <span class="string">"\t"</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"住址： "</span> &lt;&lt; <span class="built_in">abs</span>-&gt;<span class="built_in">array</span>[ret].p_address &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"查无此人"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//修改联系人</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modifyPerson</span><span class="params">(Personbook *<span class="built_in">abs</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"请输入联系人姓名"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">string</span> name;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; name;</span><br><span class="line"><span class="keyword">int</span> ret = exitPerson(<span class="built_in">abs</span>, name);</span><br><span class="line"><span class="keyword">if</span> (ret!=<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//姓名</span></span><br><span class="line"><span class="built_in">string</span> name;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"请输入姓名： "</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; name;</span><br><span class="line"><span class="built_in">abs</span>-&gt;<span class="built_in">array</span>[ret].p_name = name;</span><br><span class="line"><span class="comment">//年龄</span></span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"请输入年龄： "</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; age;</span><br><span class="line"><span class="built_in">abs</span>-&gt;<span class="built_in">array</span>[ret].p_age = age;</span><br><span class="line"><span class="comment">//性别</span></span><br><span class="line"><span class="keyword">int</span> sex;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"请输入性别: "</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; sex;</span><br><span class="line"><span class="keyword">if</span> (sex == <span class="number">0</span> || sex == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">abs</span>-&gt;<span class="built_in">array</span>[ret].p_sex = sex;</span><br><span class="line"><span class="keyword">break</span>;<span class="comment">//当输入正确时，打断循环</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"请重新输入"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//电话</span></span><br><span class="line"><span class="keyword">int</span> phone;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"请输入电话: "</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; phone;</span><br><span class="line"><span class="built_in">abs</span>-&gt;<span class="built_in">array</span>[ret].p_phone = phone;</span><br><span class="line"><span class="comment">//住址</span></span><br><span class="line"><span class="built_in">string</span> address;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"请输入住址: "</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; address;</span><br><span class="line"><span class="built_in">abs</span>-&gt;<span class="built_in">array</span>[ret].p_address = address;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"修改成功"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"查无此人"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//清空联系人</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cleanPerson</span><span class="params">(Personbook *<span class="built_in">abs</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">abs</span>-&gt;m_size = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"通讯录清空"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> select;</span><br><span class="line">Personbook <span class="built_in">abs</span>;</span><br><span class="line"><span class="built_in">abs</span>.m_size = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line">mean();</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; select;</span><br><span class="line"><span class="keyword">switch</span> (select)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:  <span class="comment">//添加联系人</span></span><br><span class="line">addPerson(&amp;<span class="built_in">abs</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:  <span class="comment">//显示联系人</span></span><br><span class="line">showPerson(&amp;<span class="built_in">abs</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:  <span class="comment">//删除联系人</span></span><br><span class="line">deletePerson(&amp;<span class="built_in">abs</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:  <span class="comment">//查找联系人</span></span><br><span class="line">findPerson(&amp;<span class="built_in">abs</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:  <span class="comment">//修改联系人</span></span><br><span class="line">modifyPerson(&amp;<span class="built_in">abs</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:  <span class="comment">//清空联系人</span></span><br><span class="line">cleanPerson(&amp;<span class="built_in">abs</span>);<span class="comment">//逻辑清空</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:  <span class="comment">//退出通讯录</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"欢迎下次使用"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++基础入门 </category>
          
          <category> 案例一 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>结构体</title>
      <link href="posts/b7747429/"/>
      <url>posts/b7747429/</url>
      
        <content type="html"><![CDATA[<h2 id="结构体定义"><a href="#结构体定义" class="headerlink" title="结构体定义"></a>结构体定义</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义结构体</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="built_in">string</span> name;</span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line"><span class="keyword">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">sl</span>;</span><span class="comment">//引用结构体变量，struct可以省略，类型+名称</span></span><br><span class="line">sl.name = <span class="string">"张三"</span>;</span><br><span class="line">sl.age = <span class="number">60</span>;</span><br><span class="line">sl.score = <span class="number">60</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"姓名"</span> &lt;&lt; sl.name &lt;&lt; <span class="string">"年龄"</span> &lt;&lt; sl.age &lt;&lt; <span class="string">"分数"</span> &lt;&lt; sl.score &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="结构体排序"><a href="#结构体排序" class="headerlink" title="结构体排序"></a>结构体排序</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Hero</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="built_in">string</span> name;</span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line"><span class="built_in">string</span> sex;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(Hero a[], <span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"姓名"</span> &lt;&lt; a[i].name &lt;&lt; <span class="string">"年龄"</span> &lt;&lt; a[i].age &lt;&lt; <span class="string">"性别"</span> &lt;&lt; a[i].sex&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">maopao</span><span class="params">(Hero a[], <span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len<span class="number">-1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; len-i<span class="number">-1</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (a[j].age&gt;a[j+<span class="number">1</span>].age)<span class="comment">//升序</span></span><br><span class="line">&#123;</span><br><span class="line"> Hero temp = a[j];</span><br><span class="line">a[j] = a[j+<span class="number">1</span>];</span><br><span class="line">a[j + <span class="number">1</span>] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//结构体数组</span></span><br><span class="line">Hero a[] = &#123;</span><br><span class="line">&#123;<span class="string">"刘备"</span>,<span class="number">23</span>,<span class="string">"男"</span>&#125;,</span><br><span class="line">&#123;<span class="string">"关羽"</span>,<span class="number">22</span>,<span class="string">"男"</span>&#125;,</span><br><span class="line">&#123;<span class="string">"张飞"</span>,<span class="number">20</span>,<span class="string">"男"</span>&#125;,</span><br><span class="line">&#123;<span class="string">"赵云"</span>,<span class="number">21</span>,<span class="string">"男"</span>&#125;,</span><br><span class="line">&#123;<span class="string">"貂蝉"</span>,<span class="number">19</span>,<span class="string">"女"</span>&#125;,</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> len = <span class="keyword">sizeof</span>(a) / <span class="keyword">sizeof</span>(a[<span class="number">0</span>]);</span><br><span class="line">maopao(a, len);</span><br><span class="line"><span class="built_in">print</span>(a, len);</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++基础入门 </category>
          
          <category> 基本语法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>指针</title>
      <link href="posts/73608288/"/>
      <url>posts/73608288/</url>
      
        <content type="html"><![CDATA[<h2 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="comment">//定义指针</span></span><br><span class="line"><span class="keyword">int</span> *p;</span><br><span class="line"><span class="comment">//指针记录地址</span></span><br><span class="line">p = &amp;a;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; p &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//a的内存地址，00B8FABC</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; *p &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//内存里的数据，10</span></span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="const修饰指针"><a href="#const修饰指针" class="headerlink" title="const修饰指针"></a>const修饰指针</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">8</span>;</span><br><span class="line"><span class="keyword">int</span> b=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> *p = &amp;a;<span class="comment">//常量指针,修饰谁，谁可以改</span></span><br><span class="line"><span class="comment">//*p=20,指向的值不能修改</span></span><br><span class="line">p = &amp;b;<span class="comment">//指向可以修改</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; *p &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> * <span class="keyword">const</span> p2 = &amp;a;<span class="comment">//指针常量：指向不可以改，值可以改</span></span><br><span class="line">*p2 = <span class="number">20</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; *p2 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> * <span class="keyword">const</span> p3 = &amp;a;<span class="comment">//指向和值都不可以改</span></span><br><span class="line"></span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="指针和数组"><a href="#指针和数组" class="headerlink" title="指针和数组"></a>指针和数组</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> *p = a;<span class="comment">//数组指针，指向首地址</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; *p &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">p++;<span class="comment">//移动指针访问数组</span></span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="指针和函数"><a href="#指针和函数" class="headerlink" title="指针和函数"></a>指针和函数</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//值传递</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap1</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> temp = a;</span><br><span class="line">a = b;</span><br><span class="line">b = temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//地址传递</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap2</span><span class="params">(<span class="keyword">int</span> * p1, <span class="keyword">int</span> *p2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> temp = *p1;</span><br><span class="line">*p1 = *p2;</span><br><span class="line">*p2 = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="comment">//swap1(a, b); // 值传递不会改变实参</span></span><br><span class="line">swap2(&amp;a, &amp;b); <span class="comment">//地址传递会改变实参</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"a = "</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"b = "</span> &lt;&lt; b &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="指针、数组、函数"><a href="#指针、数组、函数" class="headerlink" title="指针、数组、函数"></a>指针、数组、函数</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//冒泡排序函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">maopao</span><span class="params">(<span class="keyword">int</span> *a,<span class="keyword">int</span> len)</span><span class="comment">//int * a 也可以写为int a[]</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len<span class="number">-1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;len - i - <span class="number">1</span>;j++)<span class="comment">//j要&lt;不是=</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (a[j]&gt;a[j+<span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> temp = a[j+<span class="number">1</span>];</span><br><span class="line">a[j + <span class="number">1</span>] = a[j];</span><br><span class="line">a[j] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//打印函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; a[i] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[] = &#123; <span class="number">4</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">9</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> len = <span class="keyword">sizeof</span>(a) / <span class="keyword">sizeof</span>(a[<span class="number">0</span>]);</span><br><span class="line">maopao(a, len);</span><br><span class="line"><span class="built_in">print</span>(a, len);</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++基础入门 </category>
          
          <category> 基本语法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>冒泡排序</title>
      <link href="posts/14e6f1eb/"/>
      <url>posts/14e6f1eb/</url>
      
        <content type="html"><![CDATA[<h2 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[] = &#123; <span class="number">4</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">9</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> b;</span><br><span class="line"><span class="comment">//外层循环：总共排序轮数=元素个数-1</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">sizeof</span>(a)/<span class="keyword">sizeof</span>(a[<span class="number">0</span>])<span class="number">-1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//内层循环：次数=元素个数-当前轮数-1</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="keyword">sizeof</span>(a) / <span class="keyword">sizeof</span>(a[<span class="number">0</span>])-i<span class="number">-1</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (a[j] &gt; a[j + <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">b = a[j + <span class="number">1</span>];</span><br><span class="line">a[j + <span class="number">1</span>] = a[j];</span><br><span class="line">a[j] = b;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">sizeof</span>(a) / <span class="keyword">sizeof</span>(a[<span class="number">0</span>]); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; a[i];</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++基础入门 </category>
          
          <category> 基本语法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>一维数组</title>
      <link href="posts/b73acd55/"/>
      <url>posts/b73acd55/</url>
      
        <content type="html"><![CDATA[<h2 id="一维数组找最大值"><a href="#一维数组找最大值" class="headerlink" title="一维数组找最大值"></a>一维数组找最大值</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> ary[<span class="number">5</span>] = &#123; <span class="number">1</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">11</span>,<span class="number">5</span> &#125;;<span class="comment">//数组是常量，不可赋值</span></span><br><span class="line"><span class="keyword">int</span> a = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (ary[i] &gt; a)<span class="comment">//锚定一个最大值，不断更新</span></span><br><span class="line">&#123;</span><br><span class="line">a = ary[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"最大数为"</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++基础入门 </category>
          
          <category> 基本语法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>水仙花数</title>
      <link href="posts/5c4a65bc/"/>
      <url>posts/5c4a65bc/</url>
      
        <content type="html"><![CDATA[<h2 id="水仙花数"><a href="#水仙花数" class="headerlink" title="水仙花数"></a>水仙花数</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;//引入头文件</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a, b, c;</span><br><span class="line"><span class="keyword">int</span> d = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">a = d % <span class="number">10</span>;<span class="comment">//取个位</span></span><br><span class="line">b = d /<span class="number">10</span> % <span class="number">10</span>;<span class="comment">//取十位</span></span><br><span class="line">c = d /<span class="number">100</span>;<span class="comment">//取个位</span></span><br><span class="line"><span class="keyword">if</span> (d== <span class="built_in">pow</span>(a,<span class="number">3</span>)+ <span class="built_in">pow</span>(b, <span class="number">3</span>) + <span class="built_in">pow</span>(c, <span class="number">3</span>))<span class="comment">//判断相等，不是赋值</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"数字为"</span> &lt;&lt; d &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">d++;</span><br><span class="line">&#125; <span class="keyword">while</span> (d&lt;<span class="number">1000</span>);</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++基础入门 </category>
          
          <category> 基本语法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>matlab eval函数的用法</title>
      <link href="posts/4aa983d4/"/>
      <url>posts/4aa983d4/</url>
      
        <content type="html"><![CDATA[<h2 id="MATALB中eval函数的用法"><a href="#MATALB中eval函数的用法" class="headerlink" title="MATALB中eval函数的用法"></a>MATALB中eval函数的用法</h2><h3 id="doc一下"><a href="#doc一下" class="headerlink" title="doc一下"></a>doc一下</h3>]]></content>
      
      
      <categories>
          
          <category> MATLAB </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>面朝大海，春暖花开</title>
      <link href="posts/ab44f441/"/>
      <url>posts/ab44f441/</url>
      
        <content type="html"><![CDATA[<h2 id="面朝大海，春暖花开"><a href="#面朝大海，春暖花开" class="headerlink" title="面朝大海，春暖花开"></a>面朝大海，春暖花开</h2><h4 id="海子"><a href="#海子" class="headerlink" title="海子"></a>海子</h4><p>从明天起，做一个幸福的人<br>喂马、劈柴，周游世界<br>从明天起，关心粮食和蔬菜<br>我有一所房子，面朝大海，春暖花开</p><p>从明天起，和每一个亲人通信<br>告诉他们我的幸福<br>那幸福的闪电告诉我的<br>我将告诉每一个人</p><p>给每一条河每一座山取一个温暖的名字<br>陌生人，我也为你祝福<br>愿你有一个灿烂的前程<br>愿你有情人终成眷属<br>愿你在尘世获得幸福<br>我只愿面朝大海，春暖花开</p>]]></content>
      
      
      <categories>
          
          <category> 诗与远方 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>相信未来</title>
      <link href="posts/901e992e/"/>
      <url>posts/901e992e/</url>
      
        <content type="html"><![CDATA[<h2 id="相信未来"><a href="#相信未来" class="headerlink" title="相信未来"></a>相信未来</h2><h4 id="食指"><a href="#食指" class="headerlink" title="食指"></a>食指</h4><p>当蜘蛛网无情地查封了我的炉台<br>当灰烬的余烟叹息着贫困的悲哀<br>我依然固执地铺平失望的灰烬<br>用美丽的雪花写下：相信未来</p><p>当我的紫葡萄化为深秋的露水<br>当我的鲜花依偎在别人的情怀<br>我依然固执地用凝霜的枯藤<br>在凄凉的大地上写下：相信未来</p><p>我要用手指那涌向天边的排浪<br>我要用手掌那托住太阳的大海<br>摇曳着曙光那枝温暖漂亮的笔杆<br>用孩子的笔体写下：相信未来</p><p>我之所以坚定地相信未来<br>是我相信未来人们的眼睛<br>她有拨开历史风尘的睫毛<br>她有看透岁月篇章的瞳孔</p><p>不管人们对于我们腐烂的皮肉<br>那些迷途的惆怅、失败的苦痛<br>是寄予感动的热泪、深切的同情<br>还是给以轻蔑的微笑、辛辣的嘲讽</p><p>我坚信人们对于我们的脊骨<br>那无数次的探索、迷途、失败和成功<br>一定会给予热情、客观、公正的评定<br>是的，我焦急地等待着他们的评定</p><p>朋友，坚定地相信未来吧<br>相信不屈不挠的努力<br>相信战胜死亡的年轻<br>相信未来、热爱生命</p>]]></content>
      
      
      <categories>
          
          <category> 诗与远方 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
